// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__FSLABEL2DSET_METADATA: Metadata = {
    id: "120b018177e0387cb99f55149df8a35aeb5f323d.boutiques",
    name: "@FSlabel2dset",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VFslabel2dsetParameters {
    "@type": "afni.@FSlabel2dset";
    "fs_label_file": InputPathType;
    "val"?: number | null | undefined;
    "help": boolean;
    "echo": boolean;
    "keep_tmp": boolean;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "afni.@FSlabel2dset": v__fslabel2dset_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__fslabel2dset(...)`.
 *
 * @interface
 */
interface VFslabel2dsetOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param fs_label_file Specify the ASCII label file from FreeSurfer
 * @param val Assign integer VAL to the nodes in FS_LABEL_FILE (Default is 1)
 * @param help Display help message
 * @param echo Turn echo for debugging
 * @param keep_tmp Don't cleanup temp files
 *
 * @returns Parameter dictionary
 */
function v__fslabel2dset_params(
    fs_label_file: InputPathType,
    val: number | null = null,
    help: boolean = false,
    echo: boolean = false,
    keep_tmp: boolean = false,
): VFslabel2dsetParameters {
    const params = {
        "@type": "afni.@FSlabel2dset" as const,
        "fs_label_file": fs_label_file,
        "help": help,
        "echo": echo,
        "keep_tmp": keep_tmp,
    };
    if (val !== null) {
        params["val"] = val;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v__fslabel2dset_cargs(
    params: VFslabel2dsetParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("@FSlabel2dset");
    cargs.push(
        "-fs",
        execution.inputFile((params["fs_label_file"] ?? null))
    );
    if ((params["val"] ?? null) !== null) {
        cargs.push(
            "-val",
            String((params["val"] ?? null))
        );
    }
    if ((params["help"] ?? null)) {
        cargs.push("-help");
    }
    if ((params["echo"] ?? null)) {
        cargs.push("-echo");
    }
    if ((params["keep_tmp"] ?? null)) {
        cargs.push("-keep_tmp");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v__fslabel2dset_outputs(
    params: VFslabel2dsetParameters,
    execution: Execution,
): VFslabel2dsetOutputs {
    const ret: VFslabel2dsetOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * A script to convert a FreeSurfer ASCII label file into a SUMA dataset and a SUMA ROI.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param execution The execution object.
 *
 * @returns NamedTuple of outputs (described in `VFslabel2dsetOutputs`).
 */
function v__fslabel2dset_execute(
    params: VFslabel2dsetParameters,
    execution: Execution,
): VFslabel2dsetOutputs {
    params = execution.params(params)
    const cargs = v__fslabel2dset_cargs(params, execution)
    const ret = v__fslabel2dset_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * A script to convert a FreeSurfer ASCII label file into a SUMA dataset and a SUMA ROI.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param fs_label_file Specify the ASCII label file from FreeSurfer
 * @param val Assign integer VAL to the nodes in FS_LABEL_FILE (Default is 1)
 * @param help Display help message
 * @param echo Turn echo for debugging
 * @param keep_tmp Don't cleanup temp files
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VFslabel2dsetOutputs`).
 */
function v__fslabel2dset(
    fs_label_file: InputPathType,
    val: number | null = null,
    help: boolean = false,
    echo: boolean = false,
    keep_tmp: boolean = false,
    runner: Runner | null = null,
): VFslabel2dsetOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__FSLABEL2DSET_METADATA);
    const params = v__fslabel2dset_params(fs_label_file, val, help, echo, keep_tmp)
    return v__fslabel2dset_execute(params, execution);
}


export {
      VFslabel2dsetOutputs,
      VFslabel2dsetParameters,
      V__FSLABEL2DSET_METADATA,
      v__fslabel2dset,
      v__fslabel2dset_cargs,
      v__fslabel2dset_execute,
      v__fslabel2dset_outputs,
      v__fslabel2dset_params,
};
