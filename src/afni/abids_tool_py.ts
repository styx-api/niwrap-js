// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const ABIDS_TOOL_PY_METADATA: Metadata = {
    id: "0cec3da978793786b74a6ef0ab3a3f167672d68f.boutiques",
    name: "abids_tool.py",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface AbidsToolPyParameters {
    "@type"?: "afni/abids_tool.py";
    "input_files": Array<InputPathType>;
    "tr_match": boolean;
    "add_tr": boolean;
    "add_slice_times": boolean;
    "copy_prefix"?: Array<string> | null | undefined;
    "help_flag": boolean;
}
type AbidsToolPyParametersTagged = Required<Pick<AbidsToolPyParameters, '@type'>> & AbidsToolPyParameters;


/**
 * Output object returned when calling `AbidsToolPyParameters(...)`.
 *
 * @interface
 */
interface AbidsToolPyOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param input_files At least one 3d+time dataset in NIFTI format.
 * @param tr_match Check if the TR in the json file matches the TR from input dataset header. (Returns 1 if match)
 * @param add_tr Add the TR from the BIDS json file to the input dataset using 3drefit.
 * @param add_slice_times Add the slice times from the BIDS json file to the input dataset using 3drefit.
 * @param copy_prefix Copy both the NIFTI dataset(s) and matching .json file(s) to PREFIX. Must have the same number of prefixes as datasets.
 * @param help_flag Show help information and exit.
 *
 * @returns Parameter dictionary
 */
function abids_tool_py_params(
    input_files: Array<InputPathType>,
    tr_match: boolean = false,
    add_tr: boolean = false,
    add_slice_times: boolean = false,
    copy_prefix: Array<string> | null = null,
    help_flag: boolean = false,
): AbidsToolPyParametersTagged {
    const params = {
        "@type": "afni/abids_tool.py" as const,
        "input_files": input_files,
        "tr_match": tr_match,
        "add_tr": add_tr,
        "add_slice_times": add_slice_times,
        "help_flag": help_flag,
    };
    if (copy_prefix !== null) {
        params["copy_prefix"] = copy_prefix;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function abids_tool_py_cargs(
    params: AbidsToolPyParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("abids_tool.py");
    cargs.push(...(params["input_files"] ?? null).map(f => execution.inputFile(f)));
    if ((params["tr_match"] ?? false)) {
        cargs.push("-TR_match");
    }
    if ((params["add_tr"] ?? false)) {
        cargs.push("-add_TR");
    }
    if ((params["add_slice_times"] ?? false)) {
        cargs.push("-add_slice_times");
    }
    if ((params["copy_prefix"] ?? null) !== null) {
        cargs.push(
            "-copy",
            ...(params["copy_prefix"] ?? null)
        );
    }
    if ((params["help_flag"] ?? false)) {
        cargs.push("-help");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function abids_tool_py_outputs(
    params: AbidsToolPyParameters,
    execution: Execution,
): AbidsToolPyOutputs {
    const ret: AbidsToolPyOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * abids_tool.py
 *
 * A tool to work with BIDS formatted datasets created with dcm2niix_afni or dcm2niix, mainly to pull information from the matching JSON file and refit the input dataset using 3drefit.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `AbidsToolPyOutputs`).
 */
function abids_tool_py_execute(
    params: AbidsToolPyParameters,
    runner: Runner | null = null,
): AbidsToolPyOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(ABIDS_TOOL_PY_METADATA);
    params = execution.params(params)
    const cargs = abids_tool_py_cargs(params, execution)
    const ret = abids_tool_py_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * abids_tool.py
 *
 * A tool to work with BIDS formatted datasets created with dcm2niix_afni or dcm2niix, mainly to pull information from the matching JSON file and refit the input dataset using 3drefit.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param input_files At least one 3d+time dataset in NIFTI format.
 * @param tr_match Check if the TR in the json file matches the TR from input dataset header. (Returns 1 if match)
 * @param add_tr Add the TR from the BIDS json file to the input dataset using 3drefit.
 * @param add_slice_times Add the slice times from the BIDS json file to the input dataset using 3drefit.
 * @param copy_prefix Copy both the NIFTI dataset(s) and matching .json file(s) to PREFIX. Must have the same number of prefixes as datasets.
 * @param help_flag Show help information and exit.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `AbidsToolPyOutputs`).
 */
function abids_tool_py(
    input_files: Array<InputPathType>,
    tr_match: boolean = false,
    add_tr: boolean = false,
    add_slice_times: boolean = false,
    copy_prefix: Array<string> | null = null,
    help_flag: boolean = false,
    runner: Runner | null = null,
): AbidsToolPyOutputs {
    const params = abids_tool_py_params(input_files, tr_match, add_tr, add_slice_times, copy_prefix, help_flag)
    return abids_tool_py_execute(params, runner);
}


export {
      ABIDS_TOOL_PY_METADATA,
      AbidsToolPyOutputs,
      abids_tool_py,
      abids_tool_py_execute,
      abids_tool_py_params,
};
