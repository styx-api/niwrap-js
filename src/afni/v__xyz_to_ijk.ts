// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__XYZ_TO_IJK_METADATA: Metadata = {
    id: "bff15d1cd48403683f15642cc72a7a49d29fbb18.boutiques",
    name: "@xyz_to_ijk",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VXyzToIjkParameters {
    "@type": "afni.@xyz_to_ijk";
    "inset": InputPathType;
    "x_coord": number;
    "y_coord": number;
    "z_coord": number;
    "prefix"?: string | null | undefined;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "afni.@xyz_to_ijk": v__xyz_to_ijk_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "afni.@xyz_to_ijk": v__xyz_to_ijk_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__xyz_to_ijk(...)`.
 *
 * @interface
 */
interface VXyzToIjkOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output file containing the translated indices
     */
    output_file: OutputPathType | null;
}


/**
 * Build parameters.
 *
 * @param inset Volumetric file name (e.g. FILE.nii.gz)
 * @param x_coord Three coordinates (in units of the dataset, like mm)
 * @param y_coord Three coordinates (in units of the dataset, like mm)
 * @param z_coord Three coordinates (in units of the dataset, like mm)
 * @param prefix File name (including path) to output the three indices
 *
 * @returns Parameter dictionary
 */
function v__xyz_to_ijk_params(
    inset: InputPathType,
    x_coord: number,
    y_coord: number,
    z_coord: number,
    prefix: string | null = null,
): VXyzToIjkParameters {
    const params = {
        "@type": "afni.@xyz_to_ijk" as const,
        "inset": inset,
        "x_coord": x_coord,
        "y_coord": y_coord,
        "z_coord": z_coord,
    };
    if (prefix !== null) {
        params["prefix"] = prefix;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v__xyz_to_ijk_cargs(
    params: VXyzToIjkParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("@xyz_to_ijk");
    cargs.push(
        "-inset",
        execution.inputFile((params["inset"] ?? null))
    );
    cargs.push(
        "-xyz",
        String((params["x_coord"] ?? null))
    );
    cargs.push(String((params["y_coord"] ?? null)));
    cargs.push(String((params["z_coord"] ?? null)));
    if ((params["prefix"] ?? null) !== null) {
        cargs.push(
            "-prefix",
            (params["prefix"] ?? null)
        );
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v__xyz_to_ijk_outputs(
    params: VXyzToIjkParameters,
    execution: Execution,
): VXyzToIjkOutputs {
    const ret: VXyzToIjkOutputs = {
        root: execution.outputFile("."),
        output_file: ((params["prefix"] ?? null) !== null) ? execution.outputFile([(params["prefix"] ?? null)].join('')) : null,
    };
    return ret;
}


/**
 * @xyz_to_ijk
 *
 * Helper script to convert (x, y, z) coordinates to (i, j, k) indices for a volumetric dataset.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VXyzToIjkOutputs`).
 */
function v__xyz_to_ijk_execute(
    params: VXyzToIjkParameters,
    runner: Runner | null = null,
): VXyzToIjkOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__XYZ_TO_IJK_METADATA);
    params = execution.params(params)
    const cargs = v__xyz_to_ijk_cargs(params, execution)
    const ret = v__xyz_to_ijk_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * @xyz_to_ijk
 *
 * Helper script to convert (x, y, z) coordinates to (i, j, k) indices for a volumetric dataset.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param inset Volumetric file name (e.g. FILE.nii.gz)
 * @param x_coord Three coordinates (in units of the dataset, like mm)
 * @param y_coord Three coordinates (in units of the dataset, like mm)
 * @param z_coord Three coordinates (in units of the dataset, like mm)
 * @param prefix File name (including path) to output the three indices
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VXyzToIjkOutputs`).
 */
function v__xyz_to_ijk(
    inset: InputPathType,
    x_coord: number,
    y_coord: number,
    z_coord: number,
    prefix: string | null = null,
    runner: Runner | null = null,
): VXyzToIjkOutputs {
    const params = v__xyz_to_ijk_params(inset, x_coord, y_coord, z_coord, prefix)
    return v__xyz_to_ijk_execute(params, runner);
}


export {
      VXyzToIjkOutputs,
      VXyzToIjkParameters,
      V__XYZ_TO_IJK_METADATA,
      v__xyz_to_ijk,
      v__xyz_to_ijk_execute,
      v__xyz_to_ijk_params,
};
