// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const STATTABLEDIFF_METADATA: Metadata = {
    id: "1700b5a4affda702434ee9916d498190f06c350c.boutiques",
    name: "stattablediff",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface StattablediffParameters {
    "__STYXTYPE__": "stattablediff";
    "t1": InputPathType;
    "t2": InputPathType;
    "output": string;
    "percent_diff": boolean;
    "percent_diff_t1": boolean;
    "percent_diff_t2": boolean;
    "multiply"?: number | null | undefined;
    "divide"?: number | null | undefined;
    "common": boolean;
    "remove_exvivo": boolean;
    "diff_subjects": boolean;
    "noreplace53": boolean;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "stattablediff": stattablediff_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "stattablediff": stattablediff_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `stattablediff(...)`.
 *
 * @interface
 */
interface StattablediffOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Generated table of differences
     */
    output_diff_table: OutputPathType;
}


function stattablediff_params(
    t1: InputPathType,
    t2: InputPathType,
    output: string,
    percent_diff: boolean = false,
    percent_diff_t1: boolean = false,
    percent_diff_t2: boolean = false,
    multiply: number | null = null,
    divide: number | null = null,
    common: boolean = false,
    remove_exvivo: boolean = false,
    diff_subjects: boolean = false,
    noreplace53: boolean = false,
): StattablediffParameters {
    /**
     * Build parameters.
    
     * @param t1 Input table 1 (output of asegstats2table or aparcstats2table)
     * @param t2 Input table 2 (output of asegstats2table or aparcstats2table)
     * @param output Output file for the table of differences
     * @param percent_diff Compute percent difference with respect to mean of tables
     * @param percent_diff_t1 Compute percent difference with respect to table 1
     * @param percent_diff_t2 Compute percent difference with respect to table 2
     * @param multiply Multiply by mulval
     * @param divide Divide by divval
     * @param common Compute difference on common segments (may reorder)
     * @param remove_exvivo Remove the string '_exvivo' from the column header
     * @param diff_subjects Compare subjects with different names
     * @param noreplace53 Do not replace 5.3 structure names with later names
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "stattablediff" as const,
        "t1": t1,
        "t2": t2,
        "output": output,
        "percent_diff": percent_diff,
        "percent_diff_t1": percent_diff_t1,
        "percent_diff_t2": percent_diff_t2,
        "common": common,
        "remove_exvivo": remove_exvivo,
        "diff_subjects": diff_subjects,
        "noreplace53": noreplace53,
    };
    if (multiply !== null) {
        params["multiply"] = multiply;
    }
    if (divide !== null) {
        params["divide"] = divide;
    }
    return params;
}


function stattablediff_cargs(
    params: StattablediffParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("stattablediff");
    cargs.push(execution.inputFile((params["t1"] ?? null)));
    cargs.push(execution.inputFile((params["t2"] ?? null)));
    cargs.push((params["output"] ?? null));
    if ((params["percent_diff"] ?? null)) {
        cargs.push("--percent");
    }
    if ((params["percent_diff_t1"] ?? null)) {
        cargs.push("--percent1");
    }
    if ((params["percent_diff_t2"] ?? null)) {
        cargs.push("--percent2");
    }
    if ((params["multiply"] ?? null) !== null) {
        cargs.push(
            "--mul",
            String((params["multiply"] ?? null))
        );
    }
    if ((params["divide"] ?? null) !== null) {
        cargs.push(
            "--div",
            String((params["divide"] ?? null))
        );
    }
    if ((params["common"] ?? null)) {
        cargs.push("--common");
    }
    if ((params["remove_exvivo"] ?? null)) {
        cargs.push("--rm-exvivo");
    }
    if ((params["diff_subjects"] ?? null)) {
        cargs.push("--diff-subjs");
    }
    if ((params["noreplace53"] ?? null)) {
        cargs.push("--noreplace53");
    }
    return cargs;
}


function stattablediff_outputs(
    params: StattablediffParameters,
    execution: Execution,
): StattablediffOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: StattablediffOutputs = {
        root: execution.outputFile("."),
        output_diff_table: execution.outputFile([(params["output"] ?? null)].join('')),
    };
    return ret;
}


function stattablediff_execute(
    params: StattablediffParameters,
    execution: Execution,
): StattablediffOutputs {
    /**
     * Creates a table of the differences between two stats tables.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `StattablediffOutputs`).
     */
    params = execution.params(params)
    const cargs = stattablediff_cargs(params, execution)
    const ret = stattablediff_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function stattablediff(
    t1: InputPathType,
    t2: InputPathType,
    output: string,
    percent_diff: boolean = false,
    percent_diff_t1: boolean = false,
    percent_diff_t2: boolean = false,
    multiply: number | null = null,
    divide: number | null = null,
    common: boolean = false,
    remove_exvivo: boolean = false,
    diff_subjects: boolean = false,
    noreplace53: boolean = false,
    runner: Runner | null = null,
): StattablediffOutputs {
    /**
     * Creates a table of the differences between two stats tables.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param t1 Input table 1 (output of asegstats2table or aparcstats2table)
     * @param t2 Input table 2 (output of asegstats2table or aparcstats2table)
     * @param output Output file for the table of differences
     * @param percent_diff Compute percent difference with respect to mean of tables
     * @param percent_diff_t1 Compute percent difference with respect to table 1
     * @param percent_diff_t2 Compute percent difference with respect to table 2
     * @param multiply Multiply by mulval
     * @param divide Divide by divval
     * @param common Compute difference on common segments (may reorder)
     * @param remove_exvivo Remove the string '_exvivo' from the column header
     * @param diff_subjects Compare subjects with different names
     * @param noreplace53 Do not replace 5.3 structure names with later names
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `StattablediffOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(STATTABLEDIFF_METADATA);
    const params = stattablediff_params(t1, t2, output, percent_diff, percent_diff_t1, percent_diff_t2, multiply, divide, common, remove_exvivo, diff_subjects, noreplace53)
    return stattablediff_execute(params, execution);
}


export {
      STATTABLEDIFF_METADATA,
      StattablediffOutputs,
      StattablediffParameters,
      stattablediff,
      stattablediff_params,
};
