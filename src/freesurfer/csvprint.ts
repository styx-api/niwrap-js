// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const CSVPRINT_METADATA: Metadata = {
    id: "d678521bcbfff71f3853debd657f7f1d29702d43.boutiques",
    name: "csvprint",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface CsvprintParameters {
    "@type"?: "freesurfer/csvprint";
    "infile": InputPathType;
}
type CsvprintParametersTagged = Required<Pick<CsvprintParameters, '@type'>> & CsvprintParameters;


/**
 * Output object returned when calling `CsvprintParameters(...)`.
 *
 * @interface
 */
interface CsvprintOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param infile Input CSV file to be printed
 *
 * @returns Parameter dictionary
 */
function csvprint_params(
    infile: InputPathType,
): CsvprintParametersTagged {
    const params = {
        "@type": "freesurfer/csvprint" as const,
        "infile": infile,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function csvprint_cargs(
    params: CsvprintParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("csvprint");
    cargs.push(execution.inputFile((params["infile"] ?? null)));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function csvprint_outputs(
    params: CsvprintParameters,
    execution: Execution,
): CsvprintOutputs {
    const ret: CsvprintOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * csvprint
 *
 * Command-line tool for printing CSV files.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `CsvprintOutputs`).
 */
function csvprint_execute(
    params: CsvprintParameters,
    runner: Runner | null = null,
): CsvprintOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(CSVPRINT_METADATA);
    params = execution.params(params)
    const cargs = csvprint_cargs(params, execution)
    const ret = csvprint_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * csvprint
 *
 * Command-line tool for printing CSV files.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param infile Input CSV file to be printed
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `CsvprintOutputs`).
 */
function csvprint(
    infile: InputPathType,
    runner: Runner | null = null,
): CsvprintOutputs {
    const params = csvprint_params(infile)
    return csvprint_execute(params, runner);
}


export {
      CSVPRINT_METADATA,
      CsvprintOutputs,
      csvprint,
      csvprint_execute,
      csvprint_params,
};
