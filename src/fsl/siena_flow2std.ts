// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const SIENA_FLOW2STD_METADATA: Metadata = {
    id: "14d113d6d820a92a9866c09d8e160c9b94d46df8.boutiques",
    name: "siena_flow2std",
    package: "fsl",
    container_image_tag: "brainlife/fsl:6.0.4-patched2",
};


interface SienaFlow2stdParameters {
    "@type": "fsl.siena_flow2std";
    "fileroot1": string;
    "fileroot2": string;
    "sigma"?: number | null | undefined;
    "debug_flag": boolean;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "fsl.siena_flow2std": siena_flow2std_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `siena_flow2std(...)`.
 *
 * @interface
 */
interface SienaFlow2stdOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param fileroot1 Input file root 1
 * @param fileroot2 Input file root 2
 * @param sigma Spatial smoothing of standard-space edge-flow image, sigma (HWHM) in mm (default=5)
 * @param debug_flag Debug (don't delete intermediate files)
 *
 * @returns Parameter dictionary
 */
function siena_flow2std_params(
    fileroot1: string,
    fileroot2: string,
    sigma: number | null = 5,
    debug_flag: boolean = false,
): SienaFlow2stdParameters {
    const params = {
        "@type": "fsl.siena_flow2std" as const,
        "fileroot1": fileroot1,
        "fileroot2": fileroot2,
        "debug_flag": debug_flag,
    };
    if (sigma !== null) {
        params["sigma"] = sigma;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function siena_flow2std_cargs(
    params: SienaFlow2stdParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("siena_flow2std");
    cargs.push((params["fileroot1"] ?? null));
    cargs.push((params["fileroot2"] ?? null));
    if ((params["sigma"] ?? null) !== null) {
        cargs.push(
            "-s",
            String((params["sigma"] ?? null))
        );
    }
    if ((params["debug_flag"] ?? null)) {
        cargs.push("-d");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function siena_flow2std_outputs(
    params: SienaFlow2stdParameters,
    execution: Execution,
): SienaFlow2stdOutputs {
    const ret: SienaFlow2stdOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * siena_flow2std
 *
 * Convert edge flow to standard space.
 *
 * Author: FMRIB Analysis Group, University of Oxford
 *
 * URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `SienaFlow2stdOutputs`).
 */
function siena_flow2std_execute(
    params: SienaFlow2stdParameters,
    runner: Runner | null = null,
): SienaFlow2stdOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(SIENA_FLOW2STD_METADATA);
    params = execution.params(params)
    const cargs = siena_flow2std_cargs(params, execution)
    const ret = siena_flow2std_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * siena_flow2std
 *
 * Convert edge flow to standard space.
 *
 * Author: FMRIB Analysis Group, University of Oxford
 *
 * URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
 *
 * @param fileroot1 Input file root 1
 * @param fileroot2 Input file root 2
 * @param sigma Spatial smoothing of standard-space edge-flow image, sigma (HWHM) in mm (default=5)
 * @param debug_flag Debug (don't delete intermediate files)
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `SienaFlow2stdOutputs`).
 */
function siena_flow2std(
    fileroot1: string,
    fileroot2: string,
    sigma: number | null = 5,
    debug_flag: boolean = false,
    runner: Runner | null = null,
): SienaFlow2stdOutputs {
    const params = siena_flow2std_params(fileroot1, fileroot2, sigma, debug_flag)
    return siena_flow2std_execute(params, runner);
}


export {
      SIENA_FLOW2STD_METADATA,
      SienaFlow2stdOutputs,
      SienaFlow2stdParameters,
      siena_flow2std,
      siena_flow2std_execute,
      siena_flow2std_params,
};
