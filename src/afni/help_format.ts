// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const HELP_FORMAT_METADATA: Metadata = {
    id: "64e26d5d8479285f3b0f689c7f6ac596a8fab073.boutiques",
    name: "help_format",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface HelpFormatParameters {
    "@type"?: "afni/help_format";
    "stdin": string;
}
type HelpFormatParametersTagged = Required<Pick<HelpFormatParameters, '@type'>> & HelpFormatParameters;


/**
 * Output object returned when calling `HelpFormatParameters(...)`.
 *
 * @interface
 */
interface HelpFormatOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * The formatted text with hyperlinks
     */
    formatted_output: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param stdin Standard input text to be formatted
 *
 * @returns Parameter dictionary
 */
function help_format_params(
    stdin: string,
): HelpFormatParametersTagged {
    const params = {
        "@type": "afni/help_format" as const,
        "stdin": stdin,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function help_format_cargs(
    params: HelpFormatParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("help_format");
    cargs.push((params["stdin"] ?? null));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function help_format_outputs(
    params: HelpFormatParameters,
    execution: Execution,
): HelpFormatOutputs {
    const ret: HelpFormatOutputs = {
        root: execution.outputFile("."),
        formatted_output: execution.outputFile(["formatted_output.html"].join('')),
    };
    return ret;
}


/**
 * help_format
 *
 * Formats text by converting URLs into HTML hyperlinks.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `HelpFormatOutputs`).
 */
function help_format_execute(
    params: HelpFormatParameters,
    runner: Runner | null = null,
): HelpFormatOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(HELP_FORMAT_METADATA);
    params = execution.params(params)
    const cargs = help_format_cargs(params, execution)
    const ret = help_format_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * help_format
 *
 * Formats text by converting URLs into HTML hyperlinks.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param stdin Standard input text to be formatted
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `HelpFormatOutputs`).
 */
function help_format(
    stdin: string,
    runner: Runner | null = null,
): HelpFormatOutputs {
    const params = help_format_params(stdin)
    return help_format_execute(params, runner);
}


export {
      HELP_FORMAT_METADATA,
      HelpFormatOutputs,
      help_format,
      help_format_execute,
      help_format_params,
};
