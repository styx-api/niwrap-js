// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const QUANTIFY_HASUBREGIONS_SH_METADATA: Metadata = {
    id: "528c73385a4d95e317b02403967b6af61a7b7bfc.boutiques",
    name: "quantifyHAsubregions.sh",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface QuantifyHasubregionsShParameters {
    "@type"?: "freesurfer/quantifyHAsubregions.sh";
    "prefix": string;
    "suffix": string;
    "output_file": string;
    "subjects_directory"?: string | null | undefined;
}
type QuantifyHasubregionsShParametersTagged = Required<Pick<QuantifyHasubregionsShParameters, '@type'>> & QuantifyHasubregionsShParameters;


/**
 * Output object returned when calling `QuantifyHasubregionsShParameters(...)`.
 *
 * @interface
 */
interface QuantifyHasubregionsShOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * File containing the quantification results of hippocampal subregions.
     */
    output_file: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param prefix Prefix for the files to be processed.
 * @param suffix Suffix for the files to be processed.
 * @param output_file Output file name to store the results.
 * @param subjects_directory Directory containing the subject data. If not provided, the current directory is used.
 *
 * @returns Parameter dictionary
 */
function quantify_hasubregions_sh_params(
    prefix: string,
    suffix: string,
    output_file: string,
    subjects_directory: string | null = null,
): QuantifyHasubregionsShParametersTagged {
    const params = {
        "@type": "freesurfer/quantifyHAsubregions.sh" as const,
        "prefix": prefix,
        "suffix": suffix,
        "output_file": output_file,
    };
    if (subjects_directory !== null) {
        params["subjects_directory"] = subjects_directory;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function quantify_hasubregions_sh_cargs(
    params: QuantifyHasubregionsShParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("quantifyHAsubregions.sh");
    cargs.push((params["prefix"] ?? null));
    cargs.push((params["suffix"] ?? null));
    cargs.push((params["output_file"] ?? null));
    if ((params["subjects_directory"] ?? null) !== null) {
        cargs.push((params["subjects_directory"] ?? null));
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function quantify_hasubregions_sh_outputs(
    params: QuantifyHasubregionsShParameters,
    execution: Execution,
): QuantifyHasubregionsShOutputs {
    const ret: QuantifyHasubregionsShOutputs = {
        root: execution.outputFile("."),
        output_file: execution.outputFile([(params["output_file"] ?? null)].join('')),
    };
    return ret;
}


/**
 * quantifyHAsubregions.sh
 *
 * Tool to quantify hippocampal subregions using FreeSurfer.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `QuantifyHasubregionsShOutputs`).
 */
function quantify_hasubregions_sh_execute(
    params: QuantifyHasubregionsShParameters,
    runner: Runner | null = null,
): QuantifyHasubregionsShOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(QUANTIFY_HASUBREGIONS_SH_METADATA);
    params = execution.params(params)
    const cargs = quantify_hasubregions_sh_cargs(params, execution)
    const ret = quantify_hasubregions_sh_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * quantifyHAsubregions.sh
 *
 * Tool to quantify hippocampal subregions using FreeSurfer.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param prefix Prefix for the files to be processed.
 * @param suffix Suffix for the files to be processed.
 * @param output_file Output file name to store the results.
 * @param subjects_directory Directory containing the subject data. If not provided, the current directory is used.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `QuantifyHasubregionsShOutputs`).
 */
function quantify_hasubregions_sh(
    prefix: string,
    suffix: string,
    output_file: string,
    subjects_directory: string | null = null,
    runner: Runner | null = null,
): QuantifyHasubregionsShOutputs {
    const params = quantify_hasubregions_sh_params(prefix, suffix, output_file, subjects_directory)
    return quantify_hasubregions_sh_execute(params, runner);
}


export {
      QUANTIFY_HASUBREGIONS_SH_METADATA,
      QuantifyHasubregionsShOutputs,
      quantify_hasubregions_sh,
      quantify_hasubregions_sh_execute,
      quantify_hasubregions_sh_params,
};
