// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const WBSPARSE_MERGE_DENSE_METADATA: Metadata = {
    id: "678d6e48841edbd3b84295894b5e17d9b4f6d090.boutiques",
    name: "wbsparse-merge-dense",
    package: "workbench",
    container_image_tag: "brainlife/connectome_workbench:1.5.0-freesurfer-update",
};


interface WbsparseMergeDenseWbsparseParameters {
    "@type": "workbench.wbsparse-merge-dense.wbsparse";
    "wbsparse_in": string;
}


interface WbsparseMergeDenseParameters {
    "@type": "workbench.wbsparse-merge-dense";
    "direction": string;
    "wbsparse_out": string;
    "wbsparse"?: Array<WbsparseMergeDenseWbsparseParameters> | null | undefined;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "workbench.wbsparse-merge-dense": wbsparse_merge_dense_cargs,
        "workbench.wbsparse-merge-dense.wbsparse": wbsparse_merge_dense_wbsparse_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Build parameters.
 *
 * @param wbsparse_in a wbsparse file to merge
 *
 * @returns Parameter dictionary
 */
function wbsparse_merge_dense_wbsparse_params(
    wbsparse_in: string,
): WbsparseMergeDenseWbsparseParameters {
    const params = {
        "@type": "workbench.wbsparse-merge-dense.wbsparse" as const,
        "wbsparse_in": wbsparse_in,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function wbsparse_merge_dense_wbsparse_cargs(
    params: WbsparseMergeDenseWbsparseParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("-wbsparse");
    cargs.push((params["wbsparse_in"] ?? null));
    return cargs;
}


/**
 * Output object returned when calling `wbsparse_merge_dense(...)`.
 *
 * @interface
 */
interface WbsparseMergeDenseOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param direction which dimension to merge along, ROW or COLUMN
 * @param wbsparse_out output - the output wbsparse file
 * @param wbsparse specify an input wbsparse file
 *
 * @returns Parameter dictionary
 */
function wbsparse_merge_dense_params(
    direction: string,
    wbsparse_out: string,
    wbsparse: Array<WbsparseMergeDenseWbsparseParameters> | null = null,
): WbsparseMergeDenseParameters {
    const params = {
        "@type": "workbench.wbsparse-merge-dense" as const,
        "direction": direction,
        "wbsparse_out": wbsparse_out,
    };
    if (wbsparse !== null) {
        params["wbsparse"] = wbsparse;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function wbsparse_merge_dense_cargs(
    params: WbsparseMergeDenseParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("wb_command");
    cargs.push("-wbsparse-merge-dense");
    cargs.push((params["direction"] ?? null));
    cargs.push((params["wbsparse_out"] ?? null));
    if ((params["wbsparse"] ?? null) !== null) {
        cargs.push(...(params["wbsparse"] ?? null).map(s => dynCargs(s["@type"])(s, execution)).flat());
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function wbsparse_merge_dense_outputs(
    params: WbsparseMergeDenseParameters,
    execution: Execution,
): WbsparseMergeDenseOutputs {
    const ret: WbsparseMergeDenseOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * wbsparse-merge-dense
 *
 * Merge wbsparse files along dense dimension.
 *
 * The input wbsparse files must have matching mappings along the direction not specified, and the mapping along the specified direction must be brain models.
 *
 * Author: Connectome Workbench Developers
 *
 * URL: https://github.com/Washington-University/workbench
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `WbsparseMergeDenseOutputs`).
 */
function wbsparse_merge_dense_execute(
    params: WbsparseMergeDenseParameters,
    runner: Runner | null = null,
): WbsparseMergeDenseOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(WBSPARSE_MERGE_DENSE_METADATA);
    params = execution.params(params)
    const cargs = wbsparse_merge_dense_cargs(params, execution)
    const ret = wbsparse_merge_dense_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * wbsparse-merge-dense
 *
 * Merge wbsparse files along dense dimension.
 *
 * The input wbsparse files must have matching mappings along the direction not specified, and the mapping along the specified direction must be brain models.
 *
 * Author: Connectome Workbench Developers
 *
 * URL: https://github.com/Washington-University/workbench
 *
 * @param direction which dimension to merge along, ROW or COLUMN
 * @param wbsparse_out output - the output wbsparse file
 * @param wbsparse specify an input wbsparse file
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `WbsparseMergeDenseOutputs`).
 */
function wbsparse_merge_dense(
    direction: string,
    wbsparse_out: string,
    wbsparse: Array<WbsparseMergeDenseWbsparseParameters> | null = null,
    runner: Runner | null = null,
): WbsparseMergeDenseOutputs {
    const params = wbsparse_merge_dense_params(direction, wbsparse_out, wbsparse)
    return wbsparse_merge_dense_execute(params, runner);
}


export {
      WBSPARSE_MERGE_DENSE_METADATA,
      WbsparseMergeDenseOutputs,
      WbsparseMergeDenseParameters,
      WbsparseMergeDenseWbsparseParameters,
      wbsparse_merge_dense,
      wbsparse_merge_dense_execute,
      wbsparse_merge_dense_params,
      wbsparse_merge_dense_wbsparse_params,
};
