// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__CHAUFFEUR_AFNI_METADATA: Metadata = {
    id: "7bd1968eb762331f9eaee48a7484852a7e447634.boutiques",
    name: "@chauffeur_afni",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VChauffeurAfniParameters {
    "__STYXTYPE__": "@chauffeur_afni";
    "ulay": InputPathType;
    "olay"?: InputPathType | null | undefined;
    "prefix": string;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "@chauffeur_afni": v__chauffeur_afni_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "@chauffeur_afni": v__chauffeur_afni_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__chauffeur_afni(...)`.
 *
 * @interface
 */
interface VChauffeurAfniOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Generated montage image
     */
    output_image: OutputPathType;
    /**
     * Clusterization report
     */
    cluster_report: OutputPathType;
    /**
     * Whereami report for clusterized data
     */
    whereami_report: OutputPathType;
}


function v__chauffeur_afni_params(
    ulay: InputPathType,
    prefix: string,
    olay: InputPathType | null = null,
): VChauffeurAfniParameters {
    /**
     * Build parameters.
    
     * @param ulay Name of underlay dataset (required); can be 3D or 4D set
     * @param prefix Prefix for output files (required)
     * @param olay Name of overlay dataset (optional)
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "@chauffeur_afni" as const,
        "ulay": ulay,
        "prefix": prefix,
    };
    if (olay !== null) {
        params["olay"] = olay;
    }
    return params;
}


function v__chauffeur_afni_cargs(
    params: VChauffeurAfniParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("@chauffeur_afni");
    cargs.push(execution.inputFile((params["ulay"] ?? null)));
    if ((params["olay"] ?? null) !== null) {
        cargs.push(execution.inputFile((params["olay"] ?? null)));
    }
    cargs.push(
        "-prefix",
        (params["prefix"] ?? null)
    );
    cargs.push("[options]");
    return cargs;
}


function v__chauffeur_afni_outputs(
    params: VChauffeurAfniParameters,
    execution: Execution,
): VChauffeurAfniOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: VChauffeurAfniOutputs = {
        root: execution.outputFile("."),
        output_image: execution.outputFile([(params["prefix"] ?? null), ".png"].join('')),
        cluster_report: execution.outputFile([(params["prefix"] ?? null), "_clust_rep.txt"].join('')),
        whereami_report: execution.outputFile([(params["prefix"] ?? null), "_clust_whereami.txt"].join('')),
    };
    return ret;
}


function v__chauffeur_afni_execute(
    params: VChauffeurAfniParameters,
    execution: Execution,
): VChauffeurAfniOutputs {
    /**
     * Automated QC snapshots generator in AFNI.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `VChauffeurAfniOutputs`).
     */
    params = execution.params(params)
    const cargs = v__chauffeur_afni_cargs(params, execution)
    const ret = v__chauffeur_afni_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function v__chauffeur_afni(
    ulay: InputPathType,
    prefix: string,
    olay: InputPathType | null = null,
    runner: Runner | null = null,
): VChauffeurAfniOutputs {
    /**
     * Automated QC snapshots generator in AFNI.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param ulay Name of underlay dataset (required); can be 3D or 4D set
     * @param prefix Prefix for output files (required)
     * @param olay Name of overlay dataset (optional)
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `VChauffeurAfniOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__CHAUFFEUR_AFNI_METADATA);
    const params = v__chauffeur_afni_params(ulay, prefix, olay)
    return v__chauffeur_afni_execute(params, execution);
}


export {
      VChauffeurAfniOutputs,
      VChauffeurAfniParameters,
      V__CHAUFFEUR_AFNI_METADATA,
      v__chauffeur_afni,
      v__chauffeur_afni_params,
};
