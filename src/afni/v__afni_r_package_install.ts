// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__AFNI_R_PACKAGE_INSTALL_METADATA: Metadata = {
    id: "fbda411dd713485ac9f89d612bf7133847c9a67e.boutiques",
    name: "@afni_R_package_install",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VAfniRPackageInstallParameters {
    "__STYXTYPE__": "@afni_R_package_install";
    "afni": boolean;
    "shiny": boolean;
    "bayes_view": boolean;
    "circos": boolean;
    "custom_packages"?: string | null | undefined;
    "mirror"?: string | null | undefined;
    "help": boolean;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "@afni_R_package_install": v__afni_r_package_install_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "@afni_R_package_install": v__afni_r_package_install_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__afni_r_package_install(...)`.
 *
 * @interface
 */
interface VAfniRPackageInstallOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * A log file listing all installed R packages.
     */
    install_log: OutputPathType;
}


function v__afni_r_package_install_params(
    afni: boolean = false,
    shiny: boolean = false,
    bayes_view: boolean = false,
    circos: boolean = false,
    custom_packages: string | null = null,
    mirror: string | null = null,
    help: boolean = false,
): VAfniRPackageInstallParameters {
    /**
     * Build parameters.
    
     * @param afni Install AFNI related R packages.
     * @param shiny Install AFNI related shiny app packages.
     * @param bayes_view Install R packages for bayes_view.
     * @param circos Install OmicCircos for FATCAT_matplot.
     * @param custom_packages Install custom R packages (space-separated list). Must start and end with double quotes.
     * @param mirror Set the CRAN mirror to a custom URL.
     * @param help Show help message.
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "@afni_R_package_install" as const,
        "afni": afni,
        "shiny": shiny,
        "bayes_view": bayes_view,
        "circos": circos,
        "help": help,
    };
    if (custom_packages !== null) {
        params["custom_packages"] = custom_packages;
    }
    if (mirror !== null) {
        params["mirror"] = mirror;
    }
    return params;
}


function v__afni_r_package_install_cargs(
    params: VAfniRPackageInstallParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("@afni_R_package_install");
    if ((params["afni"] ?? null)) {
        cargs.push("-afni");
    }
    if ((params["shiny"] ?? null)) {
        cargs.push("-shiny");
    }
    if ((params["bayes_view"] ?? null)) {
        cargs.push("-bayes_view");
    }
    if ((params["circos"] ?? null)) {
        cargs.push("-circos");
    }
    if ((params["custom_packages"] ?? null) !== null) {
        cargs.push(
            "-custom",
            (params["custom_packages"] ?? null)
        );
    }
    if ((params["mirror"] ?? null) !== null) {
        cargs.push(
            "-mirror",
            (params["mirror"] ?? null)
        );
    }
    if ((params["help"] ?? null)) {
        cargs.push("-help");
    }
    return cargs;
}


function v__afni_r_package_install_outputs(
    params: VAfniRPackageInstallParameters,
    execution: Execution,
): VAfniRPackageInstallOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: VAfniRPackageInstallOutputs = {
        root: execution.outputFile("."),
        install_log: execution.outputFile(["R_packages_installed.txt"].join('')),
    };
    return ret;
}


function v__afni_r_package_install_execute(
    params: VAfniRPackageInstallParameters,
    execution: Execution,
): VAfniRPackageInstallOutputs {
    /**
     * Helper script to install R packages for various afni-ish purposes.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `VAfniRPackageInstallOutputs`).
     */
    params = execution.params(params)
    const cargs = v__afni_r_package_install_cargs(params, execution)
    const ret = v__afni_r_package_install_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function v__afni_r_package_install(
    afni: boolean = false,
    shiny: boolean = false,
    bayes_view: boolean = false,
    circos: boolean = false,
    custom_packages: string | null = null,
    mirror: string | null = null,
    help: boolean = false,
    runner: Runner | null = null,
): VAfniRPackageInstallOutputs {
    /**
     * Helper script to install R packages for various afni-ish purposes.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param afni Install AFNI related R packages.
     * @param shiny Install AFNI related shiny app packages.
     * @param bayes_view Install R packages for bayes_view.
     * @param circos Install OmicCircos for FATCAT_matplot.
     * @param custom_packages Install custom R packages (space-separated list). Must start and end with double quotes.
     * @param mirror Set the CRAN mirror to a custom URL.
     * @param help Show help message.
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `VAfniRPackageInstallOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__AFNI_R_PACKAGE_INSTALL_METADATA);
    const params = v__afni_r_package_install_params(afni, shiny, bayes_view, circos, custom_packages, mirror, help)
    return v__afni_r_package_install_execute(params, execution);
}


export {
      VAfniRPackageInstallOutputs,
      VAfniRPackageInstallParameters,
      V__AFNI_R_PACKAGE_INSTALL_METADATA,
      v__afni_r_package_install,
      v__afni_r_package_install_params,
};
