// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const SEGMENT_BS_SH_METADATA: Metadata = {
    id: "ea5de6d87d6861bdf790a471d88443f6b20986d7.boutiques",
    name: "segmentBS.sh",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface SegmentBsShParameters {
    "@type": "freesurfer.segmentBS.sh";
    "matlab_runtime"?: string | null | undefined;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.segmentBS.sh": segment_bs_sh_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `segment_bs_sh(...)`.
 *
 * @interface
 */
interface SegmentBsShOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param matlab_runtime Path to the Matlab 2019b runtime environment; necessary for running the segmentation tool.
 *
 * @returns Parameter dictionary
 */
function segment_bs_sh_params(
    matlab_runtime: string | null = "/usr/local/freesurfer/MCRv97",
): SegmentBsShParameters {
    const params = {
        "@type": "freesurfer.segmentBS.sh" as const,
    };
    if (matlab_runtime !== null) {
        params["matlab_runtime"] = matlab_runtime;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function segment_bs_sh_cargs(
    params: SegmentBsShParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("segmentBS.sh");
    if ((params["matlab_runtime"] ?? null) !== null) {
        cargs.push((params["matlab_runtime"] ?? null));
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function segment_bs_sh_outputs(
    params: SegmentBsShParameters,
    execution: Execution,
): SegmentBsShOutputs {
    const ret: SegmentBsShOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * Segmentation tool for hippocampal/amygdala and brainstem modules.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param execution The execution object.
 *
 * @returns NamedTuple of outputs (described in `SegmentBsShOutputs`).
 */
function segment_bs_sh_execute(
    params: SegmentBsShParameters,
    execution: Execution,
): SegmentBsShOutputs {
    params = execution.params(params)
    const cargs = segment_bs_sh_cargs(params, execution)
    const ret = segment_bs_sh_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * Segmentation tool for hippocampal/amygdala and brainstem modules.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param matlab_runtime Path to the Matlab 2019b runtime environment; necessary for running the segmentation tool.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `SegmentBsShOutputs`).
 */
function segment_bs_sh(
    matlab_runtime: string | null = "/usr/local/freesurfer/MCRv97",
    runner: Runner | null = null,
): SegmentBsShOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(SEGMENT_BS_SH_METADATA);
    const params = segment_bs_sh_params(matlab_runtime)
    return segment_bs_sh_execute(params, execution);
}


export {
      SEGMENT_BS_SH_METADATA,
      SegmentBsShOutputs,
      SegmentBsShParameters,
      segment_bs_sh,
      segment_bs_sh_cargs,
      segment_bs_sh_execute,
      segment_bs_sh_outputs,
      segment_bs_sh_params,
};
