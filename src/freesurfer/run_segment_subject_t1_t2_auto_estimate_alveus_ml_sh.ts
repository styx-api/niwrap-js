// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const RUN_SEGMENT_SUBJECT_T1_T2_AUTO_ESTIMATE_ALVEUS_ML_SH_METADATA: Metadata = {
    id: "bf2051c733cf330a51f7a8fb68683e56389c2d7f.boutiques",
    name: "run_segmentSubjectT1T2_autoEstimateAlveusML.sh",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface RunSegmentSubjectT1T2AutoEstimateAlveusMlShParameters {
    "@type": "freesurfer.run_segmentSubjectT1T2_autoEstimateAlveusML.sh";
    "deployed_mcr_root": string;
    "additional_args"?: string | null | undefined;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.run_segmentSubjectT1T2_autoEstimateAlveusML.sh": run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh(...)`.
 *
 * @interface
 */
interface RunSegmentSubjectT1T2AutoEstimateAlveusMlShOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param deployed_mcr_root Root directory for the deployed MATLAB Compiler Runtime (MCR).
 * @param additional_args Additional command-line arguments for the underlying processing tool.
 *
 * @returns Parameter dictionary
 */
function run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_params(
    deployed_mcr_root: string,
    additional_args: string | null = null,
): RunSegmentSubjectT1T2AutoEstimateAlveusMlShParameters {
    const params = {
        "@type": "freesurfer.run_segmentSubjectT1T2_autoEstimateAlveusML.sh" as const,
        "deployed_mcr_root": deployed_mcr_root,
    };
    if (additional_args !== null) {
        params["additional_args"] = additional_args;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_cargs(
    params: RunSegmentSubjectT1T2AutoEstimateAlveusMlShParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("run_segmentSubjectT1T2_autoEstimateAlveusML.sh");
    cargs.push((params["deployed_mcr_root"] ?? null));
    if ((params["additional_args"] ?? null) !== null) {
        cargs.push((params["additional_args"] ?? null));
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_outputs(
    params: RunSegmentSubjectT1T2AutoEstimateAlveusMlShParameters,
    execution: Execution,
): RunSegmentSubjectT1T2AutoEstimateAlveusMlShOutputs {
    const ret: RunSegmentSubjectT1T2AutoEstimateAlveusMlShOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * Automated segmentation tool for T1 and T2 weighted images to estimate the Alveus.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `RunSegmentSubjectT1T2AutoEstimateAlveusMlShOutputs`).
 */
function run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_execute(
    params: RunSegmentSubjectT1T2AutoEstimateAlveusMlShParameters,
    runner: Runner | null = null,
): RunSegmentSubjectT1T2AutoEstimateAlveusMlShOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(RUN_SEGMENT_SUBJECT_T1_T2_AUTO_ESTIMATE_ALVEUS_ML_SH_METADATA);
    params = execution.params(params)
    const cargs = run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_cargs(params, execution)
    const ret = run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * Automated segmentation tool for T1 and T2 weighted images to estimate the Alveus.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param deployed_mcr_root Root directory for the deployed MATLAB Compiler Runtime (MCR).
 * @param additional_args Additional command-line arguments for the underlying processing tool.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `RunSegmentSubjectT1T2AutoEstimateAlveusMlShOutputs`).
 */
function run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh(
    deployed_mcr_root: string,
    additional_args: string | null = null,
    runner: Runner | null = null,
): RunSegmentSubjectT1T2AutoEstimateAlveusMlShOutputs {
    const params = run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_params(deployed_mcr_root, additional_args)
    return run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_execute(params, runner);
}


export {
      RUN_SEGMENT_SUBJECT_T1_T2_AUTO_ESTIMATE_ALVEUS_ML_SH_METADATA,
      RunSegmentSubjectT1T2AutoEstimateAlveusMlShOutputs,
      RunSegmentSubjectT1T2AutoEstimateAlveusMlShParameters,
      run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh,
      run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_execute,
      run_segment_subject_t1_t2_auto_estimate_alveus_ml_sh_params,
};
