// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V_3D_DTTO_DWI_METADATA: Metadata = {
    id: "0f0fbb0dc2b7d522416ef673b66be8d6a5895cef.boutiques",
    name: "3dDTtoDWI",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface V3dDttoDwiParameters {
    "__STYXTYPE__": "3dDTtoDWI";
    "gradient_file": InputPathType;
    "i0_dataset": InputPathType;
    "dt_dataset": InputPathType;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "3dDTtoDWI": v_3d_dtto_dwi_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "3dDTtoDWI": v_3d_dtto_dwi_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v_3d_dtto_dwi(...)`.
 *
 * @interface
 */
interface V3dDttoDwiOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Computed DWI images including sub-brick for each gradient vector.
     */
    output_dwi: OutputPathType;
}


function v_3d_dtto_dwi_params(
    gradient_file: InputPathType,
    i0_dataset: InputPathType,
    dt_dataset: InputPathType,
): V3dDttoDwiParameters {
    /**
     * Build parameters.
    
     * @param gradient_file 1D file containing the gradient vectors (ASCII floats) for non-zero gradients.
     * @param i0_dataset Volume without any gradient applied.
     * @param dt_dataset 6-sub-brick dataset containing the diffusion tensor data (Dxx, Dxy, Dyy, Dxz, Dyz, Dzz).
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "3dDTtoDWI" as const,
        "gradient_file": gradient_file,
        "i0_dataset": i0_dataset,
        "dt_dataset": dt_dataset,
    };
    return params;
}


function v_3d_dtto_dwi_cargs(
    params: V3dDttoDwiParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("3dDTtoDWI");
    cargs.push("[OPTIONS]");
    cargs.push(execution.inputFile((params["gradient_file"] ?? null)));
    cargs.push(execution.inputFile((params["i0_dataset"] ?? null)));
    cargs.push(execution.inputFile((params["dt_dataset"] ?? null)));
    return cargs;
}


function v_3d_dtto_dwi_outputs(
    params: V3dDttoDwiParameters,
    execution: Execution,
): V3dDttoDwiOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: V3dDttoDwiOutputs = {
        root: execution.outputFile("."),
        output_dwi: execution.outputFile(["[PREFIX]*.HEAD"].join('')),
    };
    return ret;
}


function v_3d_dtto_dwi_execute(
    params: V3dDttoDwiParameters,
    execution: Execution,
): V3dDttoDwiOutputs {
    /**
     * Tool to compute multiple gradient images from tensors and gradient vector coordinates applied to the I0-dataset.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `V3dDttoDwiOutputs`).
     */
    params = execution.params(params)
    const cargs = v_3d_dtto_dwi_cargs(params, execution)
    const ret = v_3d_dtto_dwi_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function v_3d_dtto_dwi(
    gradient_file: InputPathType,
    i0_dataset: InputPathType,
    dt_dataset: InputPathType,
    runner: Runner | null = null,
): V3dDttoDwiOutputs {
    /**
     * Tool to compute multiple gradient images from tensors and gradient vector coordinates applied to the I0-dataset.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param gradient_file 1D file containing the gradient vectors (ASCII floats) for non-zero gradients.
     * @param i0_dataset Volume without any gradient applied.
     * @param dt_dataset 6-sub-brick dataset containing the diffusion tensor data (Dxx, Dxy, Dyy, Dxz, Dyz, Dzz).
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `V3dDttoDwiOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V_3D_DTTO_DWI_METADATA);
    const params = v_3d_dtto_dwi_params(gradient_file, i0_dataset, dt_dataset)
    return v_3d_dtto_dwi_execute(params, execution);
}


export {
      V3dDttoDwiOutputs,
      V3dDttoDwiParameters,
      V_3D_DTTO_DWI_METADATA,
      v_3d_dtto_dwi,
      v_3d_dtto_dwi_params,
};
