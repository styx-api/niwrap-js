// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V_3D_DETREND_METADATA: Metadata = {
    id: "8103447086a47281a149ad00588e72a68068176d.boutiques",
    name: "3dDetrend",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface V3dDetrendParameters {
    "@type": "afni.3dDetrend";
    "in_file": InputPathType;
    "outputtype"?: "NIFTI" | "AFNI" | "NIFTI_GZ" | null | undefined;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "afni.3dDetrend": v_3d_detrend_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "afni.3dDetrend": v_3d_detrend_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v_3d_detrend(...)`.
 *
 * @interface
 */
interface V3dDetrendOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output image file name.
     */
    out_file: OutputPathType;
    /**
     * Output file.
     */
    out_file_: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param in_file Input file to 3ddetrend.
 * @param outputtype 'nifti' or 'afni' or 'nifti_gz'. Afni output filetype.
 *
 * @returns Parameter dictionary
 */
function v_3d_detrend_params(
    in_file: InputPathType,
    outputtype: "NIFTI" | "AFNI" | "NIFTI_GZ" | null = null,
): V3dDetrendParameters {
    const params = {
        "@type": "afni.3dDetrend" as const,
        "in_file": in_file,
    };
    if (outputtype !== null) {
        params["outputtype"] = outputtype;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v_3d_detrend_cargs(
    params: V3dDetrendParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("3dDetrend");
    cargs.push(execution.inputFile((params["in_file"] ?? null)));
    if ((params["outputtype"] ?? null) !== null) {
        cargs.push((params["outputtype"] ?? null));
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v_3d_detrend_outputs(
    params: V3dDetrendParameters,
    execution: Execution,
): V3dDetrendOutputs {
    const ret: V3dDetrendOutputs = {
        root: execution.outputFile("."),
        out_file: execution.outputFile([path.basename((params["in_file"] ?? null)), "_detrend"].join('')),
        out_file_: execution.outputFile(["out_file"].join('')),
    };
    return ret;
}


/**
 * 3dDetrend
 *
 * This program removes components from voxel time series using linear least squares.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `V3dDetrendOutputs`).
 */
function v_3d_detrend_execute(
    params: V3dDetrendParameters,
    runner: Runner | null = null,
): V3dDetrendOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V_3D_DETREND_METADATA);
    params = execution.params(params)
    const cargs = v_3d_detrend_cargs(params, execution)
    const ret = v_3d_detrend_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * 3dDetrend
 *
 * This program removes components from voxel time series using linear least squares.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param in_file Input file to 3ddetrend.
 * @param outputtype 'nifti' or 'afni' or 'nifti_gz'. Afni output filetype.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `V3dDetrendOutputs`).
 */
function v_3d_detrend(
    in_file: InputPathType,
    outputtype: "NIFTI" | "AFNI" | "NIFTI_GZ" | null = null,
    runner: Runner | null = null,
): V3dDetrendOutputs {
    const params = v_3d_detrend_params(in_file, outputtype)
    return v_3d_detrend_execute(params, runner);
}


export {
      V3dDetrendOutputs,
      V3dDetrendParameters,
      V_3D_DETREND_METADATA,
      v_3d_detrend,
      v_3d_detrend_execute,
      v_3d_detrend_params,
};
