// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const MRI_GCAB_TRAIN_METADATA: Metadata = {
    id: "6ab5802648310f2f9fc90a566ab8717601903a85.boutiques",
    name: "mri_gcab_train",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface MriGcabTrainParameters {
    "@type"?: "freesurfer/mri_gcab_train";
    "removed_info"?: string | null | undefined;
}
type MriGcabTrainParametersTagged = Required<Pick<MriGcabTrainParameters, '@type'>> & MriGcabTrainParameters;


/**
 * Output object returned when calling `MriGcabTrainParameters(...)`.
 *
 * @interface
 */
interface MriGcabTrainOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param removed_info Command has been removed from the current version of FreeSurfer. For further information, please contact the support mailing list.
 *
 * @returns Parameter dictionary
 */
function mri_gcab_train_params(
    removed_info: string | null = null,
): MriGcabTrainParametersTagged {
    const params = {
        "@type": "freesurfer/mri_gcab_train" as const,
    };
    if (removed_info !== null) {
        params["removed_info"] = removed_info;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function mri_gcab_train_cargs(
    params: MriGcabTrainParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("mri_gcab_train");
    if ((params["removed_info"] ?? null) !== null) {
        cargs.push((params["removed_info"] ?? null));
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function mri_gcab_train_outputs(
    params: MriGcabTrainParameters,
    execution: Execution,
): MriGcabTrainOutputs {
    const ret: MriGcabTrainOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * mri_gcab_train
 *
 * Previously used command in FreeSurfer for training with Gaussian Classifier Atlas-based (GCAB) modeling; has been removed in the current version.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `MriGcabTrainOutputs`).
 */
function mri_gcab_train_execute(
    params: MriGcabTrainParameters,
    runner: Runner | null = null,
): MriGcabTrainOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(MRI_GCAB_TRAIN_METADATA);
    params = execution.params(params)
    const cargs = mri_gcab_train_cargs(params, execution)
    const ret = mri_gcab_train_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * mri_gcab_train
 *
 * Previously used command in FreeSurfer for training with Gaussian Classifier Atlas-based (GCAB) modeling; has been removed in the current version.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param removed_info Command has been removed from the current version of FreeSurfer. For further information, please contact the support mailing list.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `MriGcabTrainOutputs`).
 */
function mri_gcab_train(
    removed_info: string | null = null,
    runner: Runner | null = null,
): MriGcabTrainOutputs {
    const params = mri_gcab_train_params(removed_info)
    return mri_gcab_train_execute(params, runner);
}


export {
      MRI_GCAB_TRAIN_METADATA,
      MriGcabTrainOutputs,
      mri_gcab_train,
      mri_gcab_train_execute,
      mri_gcab_train_params,
};
