// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const BUILD_DESIKAN_KILLIANY_GCS_CSH_METADATA: Metadata = {
    id: "5e5a2f630a4fc0d2ffc6f6330bdbd3389407c897.boutiques",
    name: "build_desikan_killiany_gcs.csh",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface BuildDesikanKillianyGcsCshParameters {
    "@type": "freesurfer.build_desikan_killiany_gcs.csh";
    "hemi": string;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.build_desikan_killiany_gcs.csh": build_desikan_killiany_gcs_csh_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `build_desikan_killiany_gcs_csh(...)`.
 *
 * @interface
 */
interface BuildDesikanKillianyGcsCshOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param hemi Hemisphere designation for the operation. Should be 'rh' for right hemisphere or 'lh' for left hemisphere.
 *
 * @returns Parameter dictionary
 */
function build_desikan_killiany_gcs_csh_params(
    hemi: string,
): BuildDesikanKillianyGcsCshParameters {
    const params = {
        "@type": "freesurfer.build_desikan_killiany_gcs.csh" as const,
        "hemi": hemi,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function build_desikan_killiany_gcs_csh_cargs(
    params: BuildDesikanKillianyGcsCshParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("build_desikan_killiany_gcs.csh");
    cargs.push((params["hemi"] ?? null));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function build_desikan_killiany_gcs_csh_outputs(
    params: BuildDesikanKillianyGcsCshParameters,
    execution: Execution,
): BuildDesikanKillianyGcsCshOutputs {
    const ret: BuildDesikanKillianyGcsCshOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * Tool to build Desikan-Killiany cortical parcellation in FreeSurfer.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `BuildDesikanKillianyGcsCshOutputs`).
 */
function build_desikan_killiany_gcs_csh_execute(
    params: BuildDesikanKillianyGcsCshParameters,
    runner: Runner | null = null,
): BuildDesikanKillianyGcsCshOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(BUILD_DESIKAN_KILLIANY_GCS_CSH_METADATA);
    params = execution.params(params)
    const cargs = build_desikan_killiany_gcs_csh_cargs(params, execution)
    const ret = build_desikan_killiany_gcs_csh_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * Tool to build Desikan-Killiany cortical parcellation in FreeSurfer.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param hemi Hemisphere designation for the operation. Should be 'rh' for right hemisphere or 'lh' for left hemisphere.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `BuildDesikanKillianyGcsCshOutputs`).
 */
function build_desikan_killiany_gcs_csh(
    hemi: string,
    runner: Runner | null = null,
): BuildDesikanKillianyGcsCshOutputs {
    const params = build_desikan_killiany_gcs_csh_params(hemi)
    return build_desikan_killiany_gcs_csh_execute(params, runner);
}


export {
      BUILD_DESIKAN_KILLIANY_GCS_CSH_METADATA,
      BuildDesikanKillianyGcsCshOutputs,
      BuildDesikanKillianyGcsCshParameters,
      build_desikan_killiany_gcs_csh,
      build_desikan_killiany_gcs_csh_execute,
      build_desikan_killiany_gcs_csh_params,
};
