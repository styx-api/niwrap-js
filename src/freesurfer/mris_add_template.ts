// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const MRIS_ADD_TEMPLATE_METADATA: Metadata = {
    id: "cad5f1397d4979ef787014fa2412a1f0a10cfe8b.boutiques",
    name: "mris_add_template",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface MrisAddTemplateParameters {
    "__STYXTYPE__": "mris_add_template";
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "mris_add_template": mris_add_template_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "mris_add_template": mris_add_template_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `mris_add_template(...)`.
 *
 * @interface
 */
interface MrisAddTemplateOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * No outputs available as the tool has been removed.
     */
    placeholder_output: OutputPathType;
}


function mris_add_template_params(
): MrisAddTemplateParameters {
    /**
     * Build parameters.
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "mris_add_template" as const,
    };
    return params;
}


function mris_add_template_cargs(
    params: MrisAddTemplateParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("mris_add_template");
    return cargs;
}


function mris_add_template_outputs(
    params: MrisAddTemplateParameters,
    execution: Execution,
): MrisAddTemplateOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: MrisAddTemplateOutputs = {
        root: execution.outputFile("."),
        placeholder_output: execution.outputFile(["[PLACEHOLDER_OUTPUT]"].join('')),
    };
    return ret;
}


function mris_add_template_execute(
    params: MrisAddTemplateParameters,
    execution: Execution,
): MrisAddTemplateOutputs {
    /**
     * This tool has been removed from the current version of FreeSurfer.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `MrisAddTemplateOutputs`).
     */
    params = execution.params(params)
    const cargs = mris_add_template_cargs(params, execution)
    const ret = mris_add_template_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function mris_add_template(
    runner: Runner | null = null,
): MrisAddTemplateOutputs {
    /**
     * This tool has been removed from the current version of FreeSurfer.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `MrisAddTemplateOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(MRIS_ADD_TEMPLATE_METADATA);
    const params = mris_add_template_params()
    return mris_add_template_execute(params, execution);
}


export {
      MRIS_ADD_TEMPLATE_METADATA,
      MrisAddTemplateOutputs,
      MrisAddTemplateParameters,
      mris_add_template,
      mris_add_template_params,
};
