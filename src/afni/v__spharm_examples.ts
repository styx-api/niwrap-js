// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__SPHARM_EXAMPLES_METADATA: Metadata = {
    id: "4b0f2ed5a72a84bddb5e61fd3628bb505b66adab.boutiques",
    name: "@Spharm.examples",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VSpharmExamplesParameters {
    "@type": "afni.@Spharm.examples";
    "help_web": boolean;
    "help_web_alias": boolean;
    "help_view": boolean;
    "help_view_alias": boolean;
    "all_opts": boolean;
    "help_find"?: string | null | undefined;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "afni.@Spharm.examples": v__spharm_examples_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__spharm_examples(...)`.
 *
 * @interface
 */
interface VSpharmExamplesOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param help_web Open webpage with help for this program
 * @param help_web_alias Same as -h_web
 * @param help_view Open -help output in a GUI editor
 * @param help_view_alias Same as -h_view
 * @param all_opts List all of the options for this script
 * @param help_find Search for lines containing WORD in -help output. Search is approximate.
 *
 * @returns Parameter dictionary
 */
function v__spharm_examples_params(
    help_web: boolean = false,
    help_web_alias: boolean = false,
    help_view: boolean = false,
    help_view_alias: boolean = false,
    all_opts: boolean = false,
    help_find: string | null = null,
): VSpharmExamplesParameters {
    const params = {
        "@type": "afni.@Spharm.examples" as const,
        "help_web": help_web,
        "help_web_alias": help_web_alias,
        "help_view": help_view,
        "help_view_alias": help_view_alias,
        "all_opts": all_opts,
    };
    if (help_find !== null) {
        params["help_find"] = help_find;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v__spharm_examples_cargs(
    params: VSpharmExamplesParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("@Spharm.examples");
    if ((params["help_web"] ?? null)) {
        cargs.push("-h_web");
    }
    if ((params["help_web_alias"] ?? null)) {
        cargs.push("-hweb");
    }
    if ((params["help_view"] ?? null)) {
        cargs.push("-h_view");
    }
    if ((params["help_view_alias"] ?? null)) {
        cargs.push("-hview");
    }
    if ((params["all_opts"] ?? null)) {
        cargs.push("-all_opts");
    }
    if ((params["help_find"] ?? null) !== null) {
        cargs.push(
            "-h_find",
            (params["help_find"] ?? null)
        );
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v__spharm_examples_outputs(
    params: VSpharmExamplesParameters,
    execution: Execution,
): VSpharmExamplesOutputs {
    const ret: VSpharmExamplesOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * @Spharm.examples
 *
 * A script to demonstrate the usage of spherical harmonics decomposition with SUMA.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VSpharmExamplesOutputs`).
 */
function v__spharm_examples_execute(
    params: VSpharmExamplesParameters,
    runner: Runner | null = null,
): VSpharmExamplesOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__SPHARM_EXAMPLES_METADATA);
    params = execution.params(params)
    const cargs = v__spharm_examples_cargs(params, execution)
    const ret = v__spharm_examples_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * @Spharm.examples
 *
 * A script to demonstrate the usage of spherical harmonics decomposition with SUMA.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param help_web Open webpage with help for this program
 * @param help_web_alias Same as -h_web
 * @param help_view Open -help output in a GUI editor
 * @param help_view_alias Same as -h_view
 * @param all_opts List all of the options for this script
 * @param help_find Search for lines containing WORD in -help output. Search is approximate.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VSpharmExamplesOutputs`).
 */
function v__spharm_examples(
    help_web: boolean = false,
    help_web_alias: boolean = false,
    help_view: boolean = false,
    help_view_alias: boolean = false,
    all_opts: boolean = false,
    help_find: string | null = null,
    runner: Runner | null = null,
): VSpharmExamplesOutputs {
    const params = v__spharm_examples_params(help_web, help_web_alias, help_view, help_view_alias, all_opts, help_find)
    return v__spharm_examples_execute(params, runner);
}


export {
      VSpharmExamplesOutputs,
      VSpharmExamplesParameters,
      V__SPHARM_EXAMPLES_METADATA,
      v__spharm_examples,
      v__spharm_examples_execute,
      v__spharm_examples_params,
};
