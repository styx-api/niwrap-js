// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const FIX_SUBJECT_METADATA: Metadata = {
    id: "61bfaf4767ebcb038e8eec8be58f3650a3ee7f43.boutiques",
    name: "fix_subject",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface FixSubjectParameters {
    "@type": "freesurfer.fix_subject";
    "arguments"?: string | null | undefined;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.fix_subject": fix_subject_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `fix_subject(...)`.
 *
 * @interface
 */
interface FixSubjectOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param arguments_ Arguments for fix_subject command. Currently, help output shows directory errors. Ensure the correct paths are used.
 *
 * @returns Parameter dictionary
 */
function fix_subject_params(
    arguments_: string | null = null,
): FixSubjectParameters {
    const params = {
        "@type": "freesurfer.fix_subject" as const,
    };
    if (arguments_ !== null) {
        params["arguments"] = arguments_;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function fix_subject_cargs(
    params: FixSubjectParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("fix_subject");
    if ((params["arguments"] ?? null) !== null) {
        cargs.push((params["arguments"] ?? null));
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function fix_subject_outputs(
    params: FixSubjectParameters,
    execution: Execution,
): FixSubjectOutputs {
    const ret: FixSubjectOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * Tool to fix subjects in FreeSurfer, encountered errors due to incorrect path handling.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param execution The execution object.
 *
 * @returns NamedTuple of outputs (described in `FixSubjectOutputs`).
 */
function fix_subject_execute(
    params: FixSubjectParameters,
    execution: Execution,
): FixSubjectOutputs {
    params = execution.params(params)
    const cargs = fix_subject_cargs(params, execution)
    const ret = fix_subject_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * Tool to fix subjects in FreeSurfer, encountered errors due to incorrect path handling.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param arguments_ Arguments for fix_subject command. Currently, help output shows directory errors. Ensure the correct paths are used.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `FixSubjectOutputs`).
 */
function fix_subject(
    arguments_: string | null = null,
    runner: Runner | null = null,
): FixSubjectOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(FIX_SUBJECT_METADATA);
    const params = fix_subject_params(arguments_)
    return fix_subject_execute(params, execution);
}


export {
      FIX_SUBJECT_METADATA,
      FixSubjectOutputs,
      FixSubjectParameters,
      fix_subject,
      fix_subject_cargs,
      fix_subject_execute,
      fix_subject_outputs,
      fix_subject_params,
};
