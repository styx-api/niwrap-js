// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const INFLATE_SUBJECT_NEW_RH_METADATA: Metadata = {
    id: "d1e34d6eb3e7d1be418620a47b88a358aecca528.boutiques",
    name: "inflate_subject_new-rh",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface InflateSubjectNewRhParameters {
    "@type": "freesurfer.inflate_subject_new-rh";
    "args"?: string | null | undefined;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.inflate_subject_new-rh": inflate_subject_new_rh_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `inflate_subject_new_rh(...)`.
 *
 * @interface
 */
interface InflateSubjectNewRhOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param args Additional command-line arguments for inflate_subject_new-rh.
 *
 * @returns Parameter dictionary
 */
function inflate_subject_new_rh_params(
    args: string | null = null,
): InflateSubjectNewRhParameters {
    const params = {
        "@type": "freesurfer.inflate_subject_new-rh" as const,
    };
    if (args !== null) {
        params["args"] = args;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function inflate_subject_new_rh_cargs(
    params: InflateSubjectNewRhParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("inflate_subject_new-rh");
    if ((params["args"] ?? null) !== null) {
        cargs.push(
            "-rh",
            (params["args"] ?? null)
        );
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function inflate_subject_new_rh_outputs(
    params: InflateSubjectNewRhParameters,
    execution: Execution,
): InflateSubjectNewRhOutputs {
    const ret: InflateSubjectNewRhOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * inflate_subject_new-rh
 *
 * This is a placeholder descriptor for the 'inflate_subject_new-rh' command. The tool appears to be part of FreeSurfer but the specific inputs, outputs or options couldn't be extracted from the help text.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `InflateSubjectNewRhOutputs`).
 */
function inflate_subject_new_rh_execute(
    params: InflateSubjectNewRhParameters,
    runner: Runner | null = null,
): InflateSubjectNewRhOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(INFLATE_SUBJECT_NEW_RH_METADATA);
    params = execution.params(params)
    const cargs = inflate_subject_new_rh_cargs(params, execution)
    const ret = inflate_subject_new_rh_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * inflate_subject_new-rh
 *
 * This is a placeholder descriptor for the 'inflate_subject_new-rh' command. The tool appears to be part of FreeSurfer but the specific inputs, outputs or options couldn't be extracted from the help text.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param args Additional command-line arguments for inflate_subject_new-rh.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `InflateSubjectNewRhOutputs`).
 */
function inflate_subject_new_rh(
    args: string | null = null,
    runner: Runner | null = null,
): InflateSubjectNewRhOutputs {
    const params = inflate_subject_new_rh_params(args)
    return inflate_subject_new_rh_execute(params, runner);
}


export {
      INFLATE_SUBJECT_NEW_RH_METADATA,
      InflateSubjectNewRhOutputs,
      InflateSubjectNewRhParameters,
      inflate_subject_new_rh,
      inflate_subject_new_rh_execute,
      inflate_subject_new_rh_params,
};
