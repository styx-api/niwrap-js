// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__DO_EXAMPLES_METADATA: Metadata = {
    id: "041620951ff1456ed8b022d545939d5cc49449c1.boutiques",
    name: "@DO.examples",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VDoExamplesParameters {
    "@type": "afni.@DO.examples";
    "auto_test": boolean;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "afni.@DO.examples": v__do_examples_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "afni.@DO.examples": v__do_examples_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__do_examples(...)`.
 *
 * @interface
 */
interface VDoExamplesOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output log file when running in auto test mode
     */
    output_log: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param auto_test Run this script in test mode where user prompts are timed out at 2 seconds, and the command output log is preserved in a file called __testlog.txt
 *
 * @returns Parameter dictionary
 */
function v__do_examples_params(
    auto_test: boolean = false,
): VDoExamplesParameters {
    const params = {
        "@type": "afni.@DO.examples" as const,
        "auto_test": auto_test,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v__do_examples_cargs(
    params: VDoExamplesParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("@DO.examples");
    if ((params["auto_test"] ?? null)) {
        cargs.push("-auto_test");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v__do_examples_outputs(
    params: VDoExamplesParameters,
    execution: Execution,
): VDoExamplesOutputs {
    const ret: VDoExamplesOutputs = {
        root: execution.outputFile("."),
        output_log: execution.outputFile(["__testlog.txt"].join('')),
    };
    return ret;
}


/**
 * A script to illustrate the use of Displayable Objects in SUMA.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param execution The execution object.
 *
 * @returns NamedTuple of outputs (described in `VDoExamplesOutputs`).
 */
function v__do_examples_execute(
    params: VDoExamplesParameters,
    execution: Execution,
): VDoExamplesOutputs {
    params = execution.params(params)
    const cargs = v__do_examples_cargs(params, execution)
    const ret = v__do_examples_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * A script to illustrate the use of Displayable Objects in SUMA.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param auto_test Run this script in test mode where user prompts are timed out at 2 seconds, and the command output log is preserved in a file called __testlog.txt
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VDoExamplesOutputs`).
 */
function v__do_examples(
    auto_test: boolean = false,
    runner: Runner | null = null,
): VDoExamplesOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__DO_EXAMPLES_METADATA);
    const params = v__do_examples_params(auto_test)
    return v__do_examples_execute(params, execution);
}


export {
      VDoExamplesOutputs,
      VDoExamplesParameters,
      V__DO_EXAMPLES_METADATA,
      v__do_examples,
      v__do_examples_cargs,
      v__do_examples_execute,
      v__do_examples_outputs,
      v__do_examples_params,
};
