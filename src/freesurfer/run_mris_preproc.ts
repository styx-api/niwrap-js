// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const RUN_MRIS_PREPROC_METADATA: Metadata = {
    id: "3629333e45a8eb1987148cec6b9546163e9cda0d.boutiques",
    name: "run_mris_preproc",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface RunMrisPreprocParameters {
    "__STYXTYPE__": "run_mris_preproc";
    "qdec_table": InputPathType;
    "target_average"?: string | null | undefined;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "run_mris_preproc": run_mris_preproc_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `run_mris_preproc(...)`.
 *
 * @interface
 */
interface RunMrisPreprocOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


function run_mris_preproc_params(
    qdec_table: InputPathType,
    target_average: string | null = null,
): RunMrisPreprocParameters {
    /**
     * Build parameters.
    
     * @param qdec_table Text file of subject data used by qdec
     * @param target_average Specify a target average, default is fsaverage
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "run_mris_preproc" as const,
        "qdec_table": qdec_table,
    };
    if (target_average !== null) {
        params["target_average"] = target_average;
    }
    return params;
}


function run_mris_preproc_cargs(
    params: RunMrisPreprocParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("run_mris_preproc");
    cargs.push(execution.inputFile((params["qdec_table"] ?? null)));
    if ((params["target_average"] ?? null) !== null) {
        cargs.push((params["target_average"] ?? null));
    }
    return cargs;
}


function run_mris_preproc_outputs(
    params: RunMrisPreprocParameters,
    execution: Execution,
): RunMrisPreprocOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: RunMrisPreprocOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


function run_mris_preproc_execute(
    params: RunMrisPreprocParameters,
    execution: Execution,
): RunMrisPreprocOutputs {
    /**
     * Utility to create pre-smoothed surface data on a target average subject for Qdec application.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `RunMrisPreprocOutputs`).
     */
    params = execution.params(params)
    const cargs = run_mris_preproc_cargs(params, execution)
    const ret = run_mris_preproc_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function run_mris_preproc(
    qdec_table: InputPathType,
    target_average: string | null = null,
    runner: Runner | null = null,
): RunMrisPreprocOutputs {
    /**
     * Utility to create pre-smoothed surface data on a target average subject for Qdec application.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param qdec_table Text file of subject data used by qdec
     * @param target_average Specify a target average, default is fsaverage
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `RunMrisPreprocOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(RUN_MRIS_PREPROC_METADATA);
    const params = run_mris_preproc_params(qdec_table, target_average)
    return run_mris_preproc_execute(params, execution);
}


export {
      RUN_MRIS_PREPROC_METADATA,
      RunMrisPreprocOutputs,
      RunMrisPreprocParameters,
      run_mris_preproc,
      run_mris_preproc_params,
};
