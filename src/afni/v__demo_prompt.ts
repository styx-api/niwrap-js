// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__DEMO_PROMPT_METADATA: Metadata = {
    id: "28759d07ed8faa73243bb8713758a156bb9ca999.boutiques",
    name: "@demo_prompt",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VDemoPromptParameters {
    "__STYXTYPE__": "@demo_prompt";
    "message": string;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "@demo_prompt": v__demo_prompt_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "@demo_prompt": v__demo_prompt_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__demo_prompt(...)`.
 *
 * @interface
 */
interface VDemoPromptOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Status output: 0 if user presses OK, 1 if user cancels
     */
    status: OutputPathType;
}


function v__demo_prompt_params(
    message: string,
): VDemoPromptParameters {
    /**
     * Build parameters.
    
     * @param message The message to display in the prompt
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "@demo_prompt" as const,
        "message": message,
    };
    return params;
}


function v__demo_prompt_cargs(
    params: VDemoPromptParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("@demo_prompt");
    cargs.push((params["message"] ?? null));
    return cargs;
}


function v__demo_prompt_outputs(
    params: VDemoPromptParameters,
    execution: Execution,
): VDemoPromptOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: VDemoPromptOutputs = {
        root: execution.outputFile("."),
        status: execution.outputFile(["status"].join('')),
    };
    return ret;
}


function v__demo_prompt_execute(
    params: VDemoPromptParameters,
    execution: Execution,
): VDemoPromptOutputs {
    /**
     * Prompts user with a message and waits for acknowledgment.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `VDemoPromptOutputs`).
     */
    params = execution.params(params)
    const cargs = v__demo_prompt_cargs(params, execution)
    const ret = v__demo_prompt_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function v__demo_prompt(
    message: string,
    runner: Runner | null = null,
): VDemoPromptOutputs {
    /**
     * Prompts user with a message and waits for acknowledgment.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param message The message to display in the prompt
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `VDemoPromptOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__DEMO_PROMPT_METADATA);
    const params = v__demo_prompt_params(message)
    return v__demo_prompt_execute(params, execution);
}


export {
      VDemoPromptOutputs,
      VDemoPromptParameters,
      V__DEMO_PROMPT_METADATA,
      v__demo_prompt,
      v__demo_prompt_params,
};
