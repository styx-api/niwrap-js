// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__DJUNCT_4D_SLICES_TO_3D_VOL_METADATA: Metadata = {
    id: "d33d93b8039f4982d3532e2434ea65801211058f.boutiques",
    name: "@djunct_4d_slices_to_3d_vol",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VDjunct4dSlicesTo3dVolParameters {
    "@type"?: "afni/@djunct_4d_slices_to_3d_vol";
    "do_something": boolean;
}
type VDjunct4dSlicesTo3dVolParametersTagged = Required<Pick<VDjunct4dSlicesTo3dVolParameters, '@type'>> & VDjunct4dSlicesTo3dVolParameters;


/**
 * Output object returned when calling `VDjunct4dSlicesTo3dVolParameters(...)`.
 *
 * @interface
 */
interface VDjunct4dSlicesTo3dVolOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output file generated by the tool
     */
    outfile: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param do_something Do something really useful
 *
 * @returns Parameter dictionary
 */
function v__djunct_4d_slices_to_3d_vol_params(
    do_something: boolean = false,
): VDjunct4dSlicesTo3dVolParametersTagged {
    const params = {
        "@type": "afni/@djunct_4d_slices_to_3d_vol" as const,
        "do_something": do_something,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v__djunct_4d_slices_to_3d_vol_cargs(
    params: VDjunct4dSlicesTo3dVolParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("@djunct_4d_slices_to_3d_vol");
    if ((params["do_something"] ?? false)) {
        cargs.push("-do-something");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v__djunct_4d_slices_to_3d_vol_outputs(
    params: VDjunct4dSlicesTo3dVolParameters,
    execution: Execution,
): VDjunct4dSlicesTo3dVolOutputs {
    const ret: VDjunct4dSlicesTo3dVolOutputs = {
        root: execution.outputFile("."),
        outfile: execution.outputFile(["output_file"].join('')),
    };
    return ret;
}


/**
 * @djunct_4d_slices_to_3d_vol
 *
 * Tool description goes here.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VDjunct4dSlicesTo3dVolOutputs`).
 */
function v__djunct_4d_slices_to_3d_vol_execute(
    params: VDjunct4dSlicesTo3dVolParameters,
    runner: Runner | null = null,
): VDjunct4dSlicesTo3dVolOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__DJUNCT_4D_SLICES_TO_3D_VOL_METADATA);
    params = execution.params(params)
    const cargs = v__djunct_4d_slices_to_3d_vol_cargs(params, execution)
    const ret = v__djunct_4d_slices_to_3d_vol_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * @djunct_4d_slices_to_3d_vol
 *
 * Tool description goes here.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param do_something Do something really useful
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VDjunct4dSlicesTo3dVolOutputs`).
 */
function v__djunct_4d_slices_to_3d_vol(
    do_something: boolean = false,
    runner: Runner | null = null,
): VDjunct4dSlicesTo3dVolOutputs {
    const params = v__djunct_4d_slices_to_3d_vol_params(do_something)
    return v__djunct_4d_slices_to_3d_vol_execute(params, runner);
}


export {
      VDjunct4dSlicesTo3dVolOutputs,
      V__DJUNCT_4D_SLICES_TO_3D_VOL_METADATA,
      v__djunct_4d_slices_to_3d_vol,
      v__djunct_4d_slices_to_3d_vol_execute,
      v__djunct_4d_slices_to_3d_vol_params,
};
