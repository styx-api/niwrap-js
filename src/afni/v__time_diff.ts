// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__TIME_DIFF_METADATA: Metadata = {
    id: "7e8bc6e92b918a3b7096b6a3812790f55706dc50.boutiques",
    name: "@TimeDiff",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VTimeDiffParameters {
    "@type": "afni.@TimeDiff";
    "file1": InputPathType;
    "file2": InputPathType;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "afni.@TimeDiff": v__time_diff_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__time_diff(...)`.
 *
 * @interface
 */
interface VTimeDiffOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param file1 First file to compare (e.g., file1.txt)
 * @param file2 Second file to compare (e.g., file2.txt)
 *
 * @returns Parameter dictionary
 */
function v__time_diff_params(
    file1: InputPathType,
    file2: InputPathType,
): VTimeDiffParameters {
    const params = {
        "@type": "afni.@TimeDiff" as const,
        "file1": file1,
        "file2": file2,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v__time_diff_cargs(
    params: VTimeDiffParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("@TimeDiff");
    cargs.push(execution.inputFile((params["file1"] ?? null)));
    cargs.push(execution.inputFile((params["file2"] ?? null)));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v__time_diff_outputs(
    params: VTimeDiffParameters,
    execution: Execution,
): VTimeDiffOutputs {
    const ret: VTimeDiffOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * @TimeDiff
 *
 * A tool to compare the modification times of two files.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VTimeDiffOutputs`).
 */
function v__time_diff_execute(
    params: VTimeDiffParameters,
    runner: Runner | null = null,
): VTimeDiffOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__TIME_DIFF_METADATA);
    params = execution.params(params)
    const cargs = v__time_diff_cargs(params, execution)
    const ret = v__time_diff_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * @TimeDiff
 *
 * A tool to compare the modification times of two files.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param file1 First file to compare (e.g., file1.txt)
 * @param file2 Second file to compare (e.g., file2.txt)
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VTimeDiffOutputs`).
 */
function v__time_diff(
    file1: InputPathType,
    file2: InputPathType,
    runner: Runner | null = null,
): VTimeDiffOutputs {
    const params = v__time_diff_params(file1, file2)
    return v__time_diff_execute(params, runner);
}


export {
      VTimeDiffOutputs,
      VTimeDiffParameters,
      V__TIME_DIFF_METADATA,
      v__time_diff,
      v__time_diff_execute,
      v__time_diff_params,
};
