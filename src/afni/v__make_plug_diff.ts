// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__MAKE_PLUG_DIFF_METADATA: Metadata = {
    id: "b2f0f17eb81cb2af9f53307b7c9521014f7908a4.boutiques",
    name: "@make_plug_diff",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VMakePlugDiffParameters {
    "@type": "afni.@make_plug_diff";
    "vtk_dir": string;
    "xm_dir": string;
    "afni_src_dir": string;
    "afni_bin_dir": string;
    "comments": boolean;
    "linux": boolean;
    "diff_dir": string;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "afni.@make_plug_diff": v__make_plug_diff_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__make_plug_diff(...)`.
 *
 * @interface
 */
interface VMakePlugDiffOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param vtk_dir Directory where vtk is installed
 * @param xm_dir Directory where motif is installed
 * @param afni_src_dir Full path to AFNI's src/ directory
 * @param afni_bin_dir Path, relative to ASRCDIR, to abin
 * @param diff_dir Name of directory containing diffusion code
 * @param comments Output comments only
 * @param linux Flag for doing linuxy things
 *
 * @returns Parameter dictionary
 */
function v__make_plug_diff_params(
    vtk_dir: string,
    xm_dir: string,
    afni_src_dir: string,
    afni_bin_dir: string,
    diff_dir: string,
    comments: boolean = false,
    linux: boolean = false,
): VMakePlugDiffParameters {
    const params = {
        "@type": "afni.@make_plug_diff" as const,
        "vtk_dir": vtk_dir,
        "xm_dir": xm_dir,
        "afni_src_dir": afni_src_dir,
        "afni_bin_dir": afni_bin_dir,
        "comments": comments,
        "linux": linux,
        "diff_dir": diff_dir,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v__make_plug_diff_cargs(
    params: VMakePlugDiffParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("@make_plug_diff");
    cargs.push(
        "-vtk",
        (params["vtk_dir"] ?? null)
    );
    cargs.push(
        "-xm",
        (params["xm_dir"] ?? null)
    );
    cargs.push(
        "-asrc",
        (params["afni_src_dir"] ?? null)
    );
    cargs.push(
        "-abin",
        (params["afni_bin_dir"] ?? null)
    );
    if ((params["comments"] ?? null)) {
        cargs.push("-comments");
    }
    if ((params["linux"] ?? null)) {
        cargs.push("-linux");
    }
    cargs.push(
        "-diff",
        (params["diff_dir"] ?? null)
    );
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v__make_plug_diff_outputs(
    params: VMakePlugDiffParameters,
    execution: Execution,
): VMakePlugDiffOutputs {
    const ret: VMakePlugDiffOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * @make_plug_diff
 *
 * Compiles AFNI's diffusion plugin.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VMakePlugDiffOutputs`).
 */
function v__make_plug_diff_execute(
    params: VMakePlugDiffParameters,
    runner: Runner | null = null,
): VMakePlugDiffOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__MAKE_PLUG_DIFF_METADATA);
    params = execution.params(params)
    const cargs = v__make_plug_diff_cargs(params, execution)
    const ret = v__make_plug_diff_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * @make_plug_diff
 *
 * Compiles AFNI's diffusion plugin.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param vtk_dir Directory where vtk is installed
 * @param xm_dir Directory where motif is installed
 * @param afni_src_dir Full path to AFNI's src/ directory
 * @param afni_bin_dir Path, relative to ASRCDIR, to abin
 * @param diff_dir Name of directory containing diffusion code
 * @param comments Output comments only
 * @param linux Flag for doing linuxy things
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VMakePlugDiffOutputs`).
 */
function v__make_plug_diff(
    vtk_dir: string,
    xm_dir: string,
    afni_src_dir: string,
    afni_bin_dir: string,
    diff_dir: string,
    comments: boolean = false,
    linux: boolean = false,
    runner: Runner | null = null,
): VMakePlugDiffOutputs {
    const params = v__make_plug_diff_params(vtk_dir, xm_dir, afni_src_dir, afni_bin_dir, diff_dir, comments, linux)
    return v__make_plug_diff_execute(params, runner);
}


export {
      VMakePlugDiffOutputs,
      VMakePlugDiffParameters,
      V__MAKE_PLUG_DIFF_METADATA,
      v__make_plug_diff,
      v__make_plug_diff_execute,
      v__make_plug_diff_params,
};
