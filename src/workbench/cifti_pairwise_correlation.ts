// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const CIFTI_PAIRWISE_CORRELATION_METADATA: Metadata = {
    id: "028724c21d89b563d8ea997344bbbb94f43f23a0.boutiques",
    name: "cifti-pairwise-correlation",
    package: "workbench",
    container_image_tag: "brainlife/connectome_workbench:1.5.0-freesurfer-update",
};


interface CiftiPairwiseCorrelationParameters {
    "@type"?: "workbench/cifti-pairwise-correlation";
    "cifti_a": InputPathType;
    "cifti_b": InputPathType;
    "cifti_out": string;
    "opt_fisher_z": boolean;
    "opt_override_mapping_check": boolean;
}
type CiftiPairwiseCorrelationParametersTagged = Required<Pick<CiftiPairwiseCorrelationParameters, '@type'>> & CiftiPairwiseCorrelationParameters;


/**
 * Output object returned when calling `CiftiPairwiseCorrelationParameters(...)`.
 *
 * @interface
 */
interface CiftiPairwiseCorrelationOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * output cifti file
     */
    cifti_out: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param cifti_a first input cifti file
 * @param cifti_b second input cifti file
 * @param cifti_out output cifti file
 * @param opt_fisher_z apply fisher small z transform (ie, artanh) to correlation
 * @param opt_override_mapping_check don't check the mappings for compatibility, only check length
 *
 * @returns Parameter dictionary
 */
function cifti_pairwise_correlation_params(
    cifti_a: InputPathType,
    cifti_b: InputPathType,
    cifti_out: string,
    opt_fisher_z: boolean = false,
    opt_override_mapping_check: boolean = false,
): CiftiPairwiseCorrelationParametersTagged {
    const params = {
        "@type": "workbench/cifti-pairwise-correlation" as const,
        "cifti_a": cifti_a,
        "cifti_b": cifti_b,
        "cifti_out": cifti_out,
        "opt_fisher_z": opt_fisher_z,
        "opt_override_mapping_check": opt_override_mapping_check,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function cifti_pairwise_correlation_cargs(
    params: CiftiPairwiseCorrelationParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("wb_command");
    cargs.push("-cifti-pairwise-correlation");
    cargs.push(execution.inputFile((params["cifti_a"] ?? null)));
    cargs.push(execution.inputFile((params["cifti_b"] ?? null)));
    cargs.push((params["cifti_out"] ?? null));
    if ((params["opt_fisher_z"] ?? false)) {
        cargs.push("-fisher-z");
    }
    if ((params["opt_override_mapping_check"] ?? false)) {
        cargs.push("-override-mapping-check");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function cifti_pairwise_correlation_outputs(
    params: CiftiPairwiseCorrelationParameters,
    execution: Execution,
): CiftiPairwiseCorrelationOutputs {
    const ret: CiftiPairwiseCorrelationOutputs = {
        root: execution.outputFile("."),
        cifti_out: execution.outputFile([(params["cifti_out"] ?? null)].join('')),
    };
    return ret;
}


/**
 * cifti-pairwise-correlation
 *
 * Correlate paired rows between two cifti files.
 *
 * For each row in <cifti-a>, correlate it with the same row in <cifti-b>, and put the result in the same row of <cifti-out>, which has only one column.
 *
 * Author: Connectome Workbench Developers
 *
 * URL: https://github.com/Washington-University/workbench
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `CiftiPairwiseCorrelationOutputs`).
 */
function cifti_pairwise_correlation_execute(
    params: CiftiPairwiseCorrelationParameters,
    runner: Runner | null = null,
): CiftiPairwiseCorrelationOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(CIFTI_PAIRWISE_CORRELATION_METADATA);
    params = execution.params(params)
    const cargs = cifti_pairwise_correlation_cargs(params, execution)
    const ret = cifti_pairwise_correlation_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * cifti-pairwise-correlation
 *
 * Correlate paired rows between two cifti files.
 *
 * For each row in <cifti-a>, correlate it with the same row in <cifti-b>, and put the result in the same row of <cifti-out>, which has only one column.
 *
 * Author: Connectome Workbench Developers
 *
 * URL: https://github.com/Washington-University/workbench
 *
 * @param cifti_a first input cifti file
 * @param cifti_b second input cifti file
 * @param cifti_out output cifti file
 * @param opt_fisher_z apply fisher small z transform (ie, artanh) to correlation
 * @param opt_override_mapping_check don't check the mappings for compatibility, only check length
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `CiftiPairwiseCorrelationOutputs`).
 */
function cifti_pairwise_correlation(
    cifti_a: InputPathType,
    cifti_b: InputPathType,
    cifti_out: string,
    opt_fisher_z: boolean = false,
    opt_override_mapping_check: boolean = false,
    runner: Runner | null = null,
): CiftiPairwiseCorrelationOutputs {
    const params = cifti_pairwise_correlation_params(cifti_a, cifti_b, cifti_out, opt_fisher_z, opt_override_mapping_check)
    return cifti_pairwise_correlation_execute(params, runner);
}


export {
      CIFTI_PAIRWISE_CORRELATION_METADATA,
      CiftiPairwiseCorrelationOutputs,
      cifti_pairwise_correlation,
      cifti_pairwise_correlation_execute,
      cifti_pairwise_correlation_params,
};
