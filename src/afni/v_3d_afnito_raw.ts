// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V_3D_AFNITO_RAW_METADATA: Metadata = {
    id: "67bff5ed68a691d8da5e7aa97ecf946e7772101e.boutiques",
    name: "3dAFNItoRaw",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface V3dAfnitoRawParameters {
    "__STYXTYPE__": "3dAFNItoRaw";
    "output_file"?: string | null | undefined;
    "force_float": boolean;
    "dataset": string;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "3dAFNItoRaw": v_3d_afnito_raw_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v_3d_afnito_raw(...)`.
 *
 * @interface
 */
interface V3dAfnitoRawOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


function v_3d_afnito_raw_params(
    dataset: string,
    output_file: string | null = null,
    force_float: boolean = false,
): V3dAfnitoRawParameters {
    /**
     * Build parameters.
    
     * @param dataset Input AFNI dataset with possible modifiers for sub-brick and sub-range selection.
     * @param output_file Name of the output file (not an AFNI dataset prefix). Default is rawxyz.dat.
     * @param force_float Force floating point output. Floating point forced if any sub-brik scale factors not equal to 1.
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "3dAFNItoRaw" as const,
        "force_float": force_float,
        "dataset": dataset,
    };
    if (output_file !== null) {
        params["output_file"] = output_file;
    }
    return params;
}


function v_3d_afnito_raw_cargs(
    params: V3dAfnitoRawParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("3dAFNItoRaw");
    if ((params["output_file"] ?? null) !== null) {
        cargs.push(
            "-output",
            (params["output_file"] ?? null)
        );
    }
    if ((params["force_float"] ?? null)) {
        cargs.push("-datum float");
    }
    cargs.push((params["dataset"] ?? null));
    return cargs;
}


function v_3d_afnito_raw_outputs(
    params: V3dAfnitoRawParameters,
    execution: Execution,
): V3dAfnitoRawOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: V3dAfnitoRawOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


function v_3d_afnito_raw_execute(
    params: V3dAfnitoRawParameters,
    execution: Execution,
): V3dAfnitoRawOutputs {
    /**
     * Convert an AFNI brik file with multiple sub-briks to a raw file with each sub-brik voxel concatenated voxel-wise.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `V3dAfnitoRawOutputs`).
     */
    params = execution.params(params)
    const cargs = v_3d_afnito_raw_cargs(params, execution)
    const ret = v_3d_afnito_raw_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function v_3d_afnito_raw(
    dataset: string,
    output_file: string | null = null,
    force_float: boolean = false,
    runner: Runner | null = null,
): V3dAfnitoRawOutputs {
    /**
     * Convert an AFNI brik file with multiple sub-briks to a raw file with each sub-brik voxel concatenated voxel-wise.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param dataset Input AFNI dataset with possible modifiers for sub-brick and sub-range selection.
     * @param output_file Name of the output file (not an AFNI dataset prefix). Default is rawxyz.dat.
     * @param force_float Force floating point output. Floating point forced if any sub-brik scale factors not equal to 1.
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `V3dAfnitoRawOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V_3D_AFNITO_RAW_METADATA);
    const params = v_3d_afnito_raw_params(dataset, output_file, force_float)
    return v_3d_afnito_raw_execute(params, execution);
}


export {
      V3dAfnitoRawOutputs,
      V3dAfnitoRawParameters,
      V_3D_AFNITO_RAW_METADATA,
      v_3d_afnito_raw,
      v_3d_afnito_raw_params,
};
