// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V_3D_EXCHANGE_METADATA: Metadata = {
    id: "718b78c0aa7d2f4eb3cb6a05bf3fe4b27fbec0cd.boutiques",
    name: "3dExchange",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface V3dExchangeParameters {
    "@type"?: "afni/3dExchange";
    "prefix": string;
    "infile": InputPathType;
    "mapfile": InputPathType;
    "version": boolean;
    "help": boolean;
}
type V3dExchangeParametersTagged = Required<Pick<V3dExchangeParameters, '@type'>> & V3dExchangeParameters;


/**
 * Output object returned when calling `V3dExchangeParameters(...)`.
 *
 * @interface
 */
interface V3dExchangeOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output HEAD file
     */
    output_head: OutputPathType;
    /**
     * Output BRIK file
     */
    output_brik: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param prefix Output prefix
 * @param infile Input dataset. Acceptable data types are byte, short, and floats.
 * @param mapfile Mapping columns. Input values in the first column, output values in the second column
 * @param version Print author and version info
 * @param help Print this help screen
 *
 * @returns Parameter dictionary
 */
function v_3d_exchange_params(
    prefix: string,
    infile: InputPathType,
    mapfile: InputPathType,
    version: boolean = false,
    help: boolean = false,
): V3dExchangeParametersTagged {
    const params = {
        "@type": "afni/3dExchange" as const,
        "prefix": prefix,
        "infile": infile,
        "mapfile": mapfile,
        "version": version,
        "help": help,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v_3d_exchange_cargs(
    params: V3dExchangeParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("3dExchange");
    cargs.push(
        "-prefix",
        (params["prefix"] ?? null)
    );
    cargs.push(
        "-input",
        execution.inputFile((params["infile"] ?? null))
    );
    cargs.push(
        "-map",
        execution.inputFile((params["mapfile"] ?? null))
    );
    if ((params["version"] ?? false)) {
        cargs.push("-ver");
    }
    if ((params["help"] ?? false)) {
        cargs.push("-help");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v_3d_exchange_outputs(
    params: V3dExchangeParameters,
    execution: Execution,
): V3dExchangeOutputs {
    const ret: V3dExchangeOutputs = {
        root: execution.outputFile("."),
        output_head: execution.outputFile([(params["prefix"] ?? null), "+orig.HEAD"].join('')),
        output_brik: execution.outputFile([(params["prefix"] ?? null), "+orig.BRIK"].join('')),
    };
    return ret;
}


/**
 * 3dExchange
 *
 * Replaces voxel values using a mapping file with specified columns.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `V3dExchangeOutputs`).
 */
function v_3d_exchange_execute(
    params: V3dExchangeParameters,
    runner: Runner | null = null,
): V3dExchangeOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V_3D_EXCHANGE_METADATA);
    params = execution.params(params)
    const cargs = v_3d_exchange_cargs(params, execution)
    const ret = v_3d_exchange_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * 3dExchange
 *
 * Replaces voxel values using a mapping file with specified columns.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param prefix Output prefix
 * @param infile Input dataset. Acceptable data types are byte, short, and floats.
 * @param mapfile Mapping columns. Input values in the first column, output values in the second column
 * @param version Print author and version info
 * @param help Print this help screen
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `V3dExchangeOutputs`).
 */
function v_3d_exchange(
    prefix: string,
    infile: InputPathType,
    mapfile: InputPathType,
    version: boolean = false,
    help: boolean = false,
    runner: Runner | null = null,
): V3dExchangeOutputs {
    const params = v_3d_exchange_params(prefix, infile, mapfile, version, help)
    return v_3d_exchange_execute(params, runner);
}


export {
      V3dExchangeOutputs,
      V_3D_EXCHANGE_METADATA,
      v_3d_exchange,
      v_3d_exchange_execute,
      v_3d_exchange_params,
};
