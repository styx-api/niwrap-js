// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const APQC_MAKE_HTML_PY_METADATA: Metadata = {
    id: "5a0a0655640ca3011ee8b320cb3dec8f45de5e54.boutiques",
    name: "apqc_make_html.py",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface ApqcMakeHtmlPyParameters {
    "@type": "afni.apqc_make_html.py";
    "qc_dir": string;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "afni.apqc_make_html.py": apqc_make_html_py_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `apqc_make_html_py(...)`.
 *
 * @interface
 */
interface ApqcMakeHtmlPyOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param qc_dir Directory where QC files will be saved
 *
 * @returns Parameter dictionary
 */
function apqc_make_html_py_params(
    qc_dir: string,
): ApqcMakeHtmlPyParameters {
    const params = {
        "@type": "afni.apqc_make_html.py" as const,
        "qc_dir": qc_dir,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function apqc_make_html_py_cargs(
    params: ApqcMakeHtmlPyParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("apqc_make_html.py");
    cargs.push(
        "-qc_dir",
        (params["qc_dir"] ?? null)
    );
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function apqc_make_html_py_outputs(
    params: ApqcMakeHtmlPyParameters,
    execution: Execution,
): ApqcMakeHtmlPyOutputs {
    const ret: ApqcMakeHtmlPyOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * apqc_make_html.py
 *
 * Tool to generate HTML reports.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `ApqcMakeHtmlPyOutputs`).
 */
function apqc_make_html_py_execute(
    params: ApqcMakeHtmlPyParameters,
    runner: Runner | null = null,
): ApqcMakeHtmlPyOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(APQC_MAKE_HTML_PY_METADATA);
    params = execution.params(params)
    const cargs = apqc_make_html_py_cargs(params, execution)
    const ret = apqc_make_html_py_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * apqc_make_html.py
 *
 * Tool to generate HTML reports.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param qc_dir Directory where QC files will be saved
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `ApqcMakeHtmlPyOutputs`).
 */
function apqc_make_html_py(
    qc_dir: string,
    runner: Runner | null = null,
): ApqcMakeHtmlPyOutputs {
    const params = apqc_make_html_py_params(qc_dir)
    return apqc_make_html_py_execute(params, runner);
}


export {
      APQC_MAKE_HTML_PY_METADATA,
      ApqcMakeHtmlPyOutputs,
      ApqcMakeHtmlPyParameters,
      apqc_make_html_py,
      apqc_make_html_py_execute,
      apqc_make_html_py_params,
};
