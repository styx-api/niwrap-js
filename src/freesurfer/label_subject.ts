// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const LABEL_SUBJECT_METADATA: Metadata = {
    id: "2eaea9f29422b9c705dee85559c5b10d1adba05b.boutiques",
    name: "label_subject",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface LabelSubjectParameters {
    "@type": "freesurfer.label_subject";
    "nu_file"?: InputPathType | null | undefined;
    "orig_dir"?: string | null | undefined;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.label_subject": label_subject_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "freesurfer.label_subject": label_subject_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `label_subject(...)`.
 *
 * @interface
 */
interface LabelSubjectOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Converted MNC file from the original MRI data
     */
    converted_mnc: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param nu_file Path to the nu.mgz file. If not provided, defaults to nu.mgz.
 * @param orig_dir The original MRI data directory. If the nu file is not found, it will search in the given directory.
 *
 * @returns Parameter dictionary
 */
function label_subject_params(
    nu_file: InputPathType | null = null,
    orig_dir: string | null = "/usr/local/freesurfer/subjects",
): LabelSubjectParameters {
    const params = {
        "@type": "freesurfer.label_subject" as const,
    };
    if (nu_file !== null) {
        params["nu_file"] = nu_file;
    }
    if (orig_dir !== null) {
        params["orig_dir"] = orig_dir;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function label_subject_cargs(
    params: LabelSubjectParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("label_subject");
    if ((params["nu_file"] ?? null) !== null) {
        cargs.push(execution.inputFile((params["nu_file"] ?? null)));
    }
    if ((params["orig_dir"] ?? null) !== null) {
        cargs.push((params["orig_dir"] ?? null));
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function label_subject_outputs(
    params: LabelSubjectParameters,
    execution: Execution,
): LabelSubjectOutputs {
    const ret: LabelSubjectOutputs = {
        root: execution.outputFile("."),
        converted_mnc: execution.outputFile(["/tmp/nu*.mnc"].join('')),
    };
    return ret;
}


/**
 * label_subject
 *
 * A tool for labeling subject MRI data in FreeSurfer.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `LabelSubjectOutputs`).
 */
function label_subject_execute(
    params: LabelSubjectParameters,
    runner: Runner | null = null,
): LabelSubjectOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(LABEL_SUBJECT_METADATA);
    params = execution.params(params)
    const cargs = label_subject_cargs(params, execution)
    const ret = label_subject_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * label_subject
 *
 * A tool for labeling subject MRI data in FreeSurfer.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param nu_file Path to the nu.mgz file. If not provided, defaults to nu.mgz.
 * @param orig_dir The original MRI data directory. If the nu file is not found, it will search in the given directory.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `LabelSubjectOutputs`).
 */
function label_subject(
    nu_file: InputPathType | null = null,
    orig_dir: string | null = "/usr/local/freesurfer/subjects",
    runner: Runner | null = null,
): LabelSubjectOutputs {
    const params = label_subject_params(nu_file, orig_dir)
    return label_subject_execute(params, runner);
}


export {
      LABEL_SUBJECT_METADATA,
      LabelSubjectOutputs,
      LabelSubjectParameters,
      label_subject,
      label_subject_execute,
      label_subject_params,
};
