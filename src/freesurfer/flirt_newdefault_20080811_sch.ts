// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const FLIRT_NEWDEFAULT_20080811_SCH_METADATA: Metadata = {
    id: "a098601132318cbfe2ff266fbec4a2a5cae16d22.boutiques",
    name: "flirt.newdefault.20080811.sch",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface FlirtNewdefault20080811SchParameters {
    "@type"?: "freesurfer/flirt.newdefault.20080811.sch";
    "term_option"?: string | null | undefined;
    "curses_flag": boolean;
    "scrollback_flag": boolean;
}
type FlirtNewdefault20080811SchParametersTagged = Required<Pick<FlirtNewdefault20080811SchParameters, '@type'>> & FlirtNewdefault20080811SchParameters;


/**
 * Output object returned when calling `FlirtNewdefault20080811SchParameters(...)`.
 *
 * @interface
 */
interface FlirtNewdefault20080811SchOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param term_option Use this terminal type instead of $TERM
 * @param curses_flag Print curses-version
 * @param scrollback_flag Do not try to clear scrollback
 *
 * @returns Parameter dictionary
 */
function flirt_newdefault_20080811_sch_params(
    term_option: string | null = null,
    curses_flag: boolean = false,
    scrollback_flag: boolean = false,
): FlirtNewdefault20080811SchParametersTagged {
    const params = {
        "@type": "freesurfer/flirt.newdefault.20080811.sch" as const,
        "curses_flag": curses_flag,
        "scrollback_flag": scrollback_flag,
    };
    if (term_option !== null) {
        params["term_option"] = term_option;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function flirt_newdefault_20080811_sch_cargs(
    params: FlirtNewdefault20080811SchParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("flirt.newdefault.20080811.sch");
    if ((params["term_option"] ?? null) !== null) {
        cargs.push(
            "-T",
            (params["term_option"] ?? null)
        );
    }
    if ((params["curses_flag"] ?? false)) {
        cargs.push("-V");
    }
    if ((params["scrollback_flag"] ?? false)) {
        cargs.push("-x");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function flirt_newdefault_20080811_sch_outputs(
    params: FlirtNewdefault20080811SchParameters,
    execution: Execution,
): FlirtNewdefault20080811SchOutputs {
    const ret: FlirtNewdefault20080811SchOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * flirt.newdefault.20080811.sch
 *
 * FLIRT (FMRIB's Linear Image Registration Tool) new default configuration script.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `FlirtNewdefault20080811SchOutputs`).
 */
function flirt_newdefault_20080811_sch_execute(
    params: FlirtNewdefault20080811SchParameters,
    runner: Runner | null = null,
): FlirtNewdefault20080811SchOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(FLIRT_NEWDEFAULT_20080811_SCH_METADATA);
    params = execution.params(params)
    const cargs = flirt_newdefault_20080811_sch_cargs(params, execution)
    const ret = flirt_newdefault_20080811_sch_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * flirt.newdefault.20080811.sch
 *
 * FLIRT (FMRIB's Linear Image Registration Tool) new default configuration script.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param term_option Use this terminal type instead of $TERM
 * @param curses_flag Print curses-version
 * @param scrollback_flag Do not try to clear scrollback
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `FlirtNewdefault20080811SchOutputs`).
 */
function flirt_newdefault_20080811_sch(
    term_option: string | null = null,
    curses_flag: boolean = false,
    scrollback_flag: boolean = false,
    runner: Runner | null = null,
): FlirtNewdefault20080811SchOutputs {
    const params = flirt_newdefault_20080811_sch_params(term_option, curses_flag, scrollback_flag)
    return flirt_newdefault_20080811_sch_execute(params, runner);
}


export {
      FLIRT_NEWDEFAULT_20080811_SCH_METADATA,
      FlirtNewdefault20080811SchOutputs,
      flirt_newdefault_20080811_sch,
      flirt_newdefault_20080811_sch_execute,
      flirt_newdefault_20080811_sch_params,
};
