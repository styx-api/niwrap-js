// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const UBER_ALIGN_TEST_PY_METADATA: Metadata = {
    id: "1cdb35a694ecfd6f154d70ecf75d0b5138262e0f.boutiques",
    name: "uber_align_test.py",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface UberAlignTestPyParameters {
    "__STYXTYPE__": "uber_align_test.py";
    "no_gui": boolean;
    "print_script": boolean;
    "save_script"?: string | null | undefined;
    "user_variable"?: Array<string> | null | undefined;
    "qt_opts"?: string | null | undefined;
    "help": boolean;
    "help_gui": boolean;
    "history": boolean;
    "show_valid_opts": boolean;
    "version": boolean;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "uber_align_test.py": uber_align_test_py_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `uber_align_test_py(...)`.
 *
 * @interface
 */
interface UberAlignTestPyOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


function uber_align_test_py_params(
    no_gui: boolean = false,
    print_script: boolean = false,
    save_script: string | null = null,
    user_variable: Array<string> | null = null,
    qt_opts: string | null = null,
    help: boolean = false,
    help_gui: boolean = false,
    history: boolean = false,
    show_valid_opts: boolean = false,
    version: boolean = false,
): UberAlignTestPyParameters {
    /**
     * Build parameters.
    
     * @param no_gui Run without the graphical user interface (GUI)
     * @param print_script Print the generated script to standard output
     * @param save_script Save the generated script to the specified file
     * @param user_variable Specify user variables for alignment
     * @param qt_opts Pass PyQt4 options directly to the GUI
     * @param help Show help information
     * @param help_gui Show help information for the GUI
     * @param history Show command history
     * @param show_valid_opts Show valid options
     * @param version Show version information
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "uber_align_test.py" as const,
        "no_gui": no_gui,
        "print_script": print_script,
        "help": help,
        "help_gui": help_gui,
        "history": history,
        "show_valid_opts": show_valid_opts,
        "version": version,
    };
    if (save_script !== null) {
        params["save_script"] = save_script;
    }
    if (user_variable !== null) {
        params["user_variable"] = user_variable;
    }
    if (qt_opts !== null) {
        params["qt_opts"] = qt_opts;
    }
    return params;
}


function uber_align_test_py_cargs(
    params: UberAlignTestPyParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("uber_align_test.py");
    if ((params["no_gui"] ?? null)) {
        cargs.push("-no_gui");
    }
    if ((params["print_script"] ?? null)) {
        cargs.push("-print_script");
    }
    if ((params["save_script"] ?? null) !== null) {
        cargs.push(
            "-save_script",
            (params["save_script"] ?? null)
        );
    }
    if ((params["user_variable"] ?? null) !== null) {
        cargs.push(
            "-uvar",
            ...(params["user_variable"] ?? null)
        );
    }
    if ((params["qt_opts"] ?? null) !== null) {
        cargs.push(
            "-qt_opts",
            (params["qt_opts"] ?? null)
        );
    }
    if ((params["help"] ?? null)) {
        cargs.push("-help");
    }
    if ((params["help_gui"] ?? null)) {
        cargs.push("-help_gui");
    }
    if ((params["history"] ?? null)) {
        cargs.push("-hist");
    }
    if ((params["show_valid_opts"] ?? null)) {
        cargs.push("-show_valid_opts");
    }
    if ((params["version"] ?? null)) {
        cargs.push("-ver");
    }
    return cargs;
}


function uber_align_test_py_outputs(
    params: UberAlignTestPyParameters,
    execution: Execution,
): UberAlignTestPyOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: UberAlignTestPyOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


function uber_align_test_py_execute(
    params: UberAlignTestPyParameters,
    execution: Execution,
): UberAlignTestPyOutputs {
    /**
     * Generate script to test anatomical/EPI alignment.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `UberAlignTestPyOutputs`).
     */
    params = execution.params(params)
    const cargs = uber_align_test_py_cargs(params, execution)
    const ret = uber_align_test_py_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function uber_align_test_py(
    no_gui: boolean = false,
    print_script: boolean = false,
    save_script: string | null = null,
    user_variable: Array<string> | null = null,
    qt_opts: string | null = null,
    help: boolean = false,
    help_gui: boolean = false,
    history: boolean = false,
    show_valid_opts: boolean = false,
    version: boolean = false,
    runner: Runner | null = null,
): UberAlignTestPyOutputs {
    /**
     * Generate script to test anatomical/EPI alignment.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param no_gui Run without the graphical user interface (GUI)
     * @param print_script Print the generated script to standard output
     * @param save_script Save the generated script to the specified file
     * @param user_variable Specify user variables for alignment
     * @param qt_opts Pass PyQt4 options directly to the GUI
     * @param help Show help information
     * @param help_gui Show help information for the GUI
     * @param history Show command history
     * @param show_valid_opts Show valid options
     * @param version Show version information
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `UberAlignTestPyOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(UBER_ALIGN_TEST_PY_METADATA);
    const params = uber_align_test_py_params(no_gui, print_script, save_script, user_variable, qt_opts, help, help_gui, history, show_valid_opts, version)
    return uber_align_test_py_execute(params, execution);
}


export {
      UBER_ALIGN_TEST_PY_METADATA,
      UberAlignTestPyOutputs,
      UberAlignTestPyParameters,
      uber_align_test_py,
      uber_align_test_py_params,
};
