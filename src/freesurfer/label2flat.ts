// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const LABEL2FLAT_METADATA: Metadata = {
    id: "90c34f8dd4c3992195ca9cfd336c415fc13321a8.boutiques",
    name: "label2flat",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface Label2flatParameters {
    "__STYXTYPE__": "label2flat";
    "subject_name": string;
    "label_file": InputPathType;
    "patch_file": InputPathType;
    "output_file": string;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "label2flat": label2flat_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "label2flat": label2flat_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `label2flat(...)`.
 *
 * @interface
 */
interface Label2flatOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * The processed output file generated by label2flat.
     */
    result_file: OutputPathType;
}


function label2flat_params(
    subject_name: string,
    label_file: InputPathType,
    patch_file: InputPathType,
    output_file: string,
): Label2flatParameters {
    /**
     * Build parameters.
    
     * @param subject_name The name of the subject.
     * @param label_file The label file path.
     * @param patch_file The patch file path.
     * @param output_file The output file path.
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "label2flat" as const,
        "subject_name": subject_name,
        "label_file": label_file,
        "patch_file": patch_file,
        "output_file": output_file,
    };
    return params;
}


function label2flat_cargs(
    params: Label2flatParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("label2flat");
    cargs.push((params["subject_name"] ?? null));
    cargs.push(execution.inputFile((params["label_file"] ?? null)));
    cargs.push(execution.inputFile((params["patch_file"] ?? null)));
    cargs.push((params["output_file"] ?? null));
    return cargs;
}


function label2flat_outputs(
    params: Label2flatParameters,
    execution: Execution,
): Label2flatOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: Label2flatOutputs = {
        root: execution.outputFile("."),
        result_file: execution.outputFile([(params["output_file"] ?? null)].join('')),
    };
    return ret;
}


function label2flat_execute(
    params: Label2flatParameters,
    execution: Execution,
): Label2flatOutputs {
    /**
     * A tool used in FreeSurfer to process labeling and patch files.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `Label2flatOutputs`).
     */
    params = execution.params(params)
    const cargs = label2flat_cargs(params, execution)
    const ret = label2flat_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function label2flat(
    subject_name: string,
    label_file: InputPathType,
    patch_file: InputPathType,
    output_file: string,
    runner: Runner | null = null,
): Label2flatOutputs {
    /**
     * A tool used in FreeSurfer to process labeling and patch files.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param subject_name The name of the subject.
     * @param label_file The label file path.
     * @param patch_file The patch file path.
     * @param output_file The output file path.
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `Label2flatOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(LABEL2FLAT_METADATA);
    const params = label2flat_params(subject_name, label_file, patch_file, output_file)
    return label2flat_execute(params, execution);
}


export {
      LABEL2FLAT_METADATA,
      Label2flatOutputs,
      Label2flatParameters,
      label2flat,
      label2flat_params,
};
