// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const IMAGE_INTENSITY_STATISTICS_METADATA: Metadata = {
    id: "13115421d02f4d4791558b1d1762658a49f0b9b9.boutiques",
    name: "ImageIntensityStatistics",
    package: "ants",
    container_image_tag: "antsx/ants:v2.5.3",
};


interface ImageIntensityStatisticsParameters {
    "@type": "ants.ImageIntensityStatistics";
    "image_dimension": number;
    "input_image": InputPathType;
    "label_image"?: InputPathType | null | undefined;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "ants.ImageIntensityStatistics": image_intensity_statistics_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "ants.ImageIntensityStatistics": image_intensity_statistics_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `image_intensity_statistics(...)`.
 *
 * @interface
 */
interface ImageIntensityStatisticsOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * The output file containing intensity statistics.
     */
    intensity_statistics: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param image_dimension The dimensionality of the image (e.g., 2D, 3D).
 * @param input_image The input image for which intensity statistics will be computed.
 * @param label_image An optional label image which defines regions of interest.
 *
 * @returns Parameter dictionary
 */
function image_intensity_statistics_params(
    image_dimension: number,
    input_image: InputPathType,
    label_image: InputPathType | null = null,
): ImageIntensityStatisticsParameters {
    const params = {
        "@type": "ants.ImageIntensityStatistics" as const,
        "image_dimension": image_dimension,
        "input_image": input_image,
    };
    if (label_image !== null) {
        params["label_image"] = label_image;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function image_intensity_statistics_cargs(
    params: ImageIntensityStatisticsParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("ImageIntensityStatistics");
    cargs.push(String((params["image_dimension"] ?? null)));
    cargs.push(execution.inputFile((params["input_image"] ?? null)));
    if ((params["label_image"] ?? null) !== null) {
        cargs.push(execution.inputFile((params["label_image"] ?? null)));
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function image_intensity_statistics_outputs(
    params: ImageIntensityStatisticsParameters,
    execution: Execution,
): ImageIntensityStatisticsOutputs {
    const ret: ImageIntensityStatisticsOutputs = {
        root: execution.outputFile("."),
        intensity_statistics: execution.outputFile(["intensity_statistics.txt"].join('')),
    };
    return ret;
}


/**
 * ImageIntensityStatistics
 *
 * This tool computes intensity statistics of an input image, optionally given a label image.
 *
 * Author: ANTs Developers
 *
 * URL: https://github.com/ANTsX/ANTs
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `ImageIntensityStatisticsOutputs`).
 */
function image_intensity_statistics_execute(
    params: ImageIntensityStatisticsParameters,
    runner: Runner | null = null,
): ImageIntensityStatisticsOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(IMAGE_INTENSITY_STATISTICS_METADATA);
    params = execution.params(params)
    const cargs = image_intensity_statistics_cargs(params, execution)
    const ret = image_intensity_statistics_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * ImageIntensityStatistics
 *
 * This tool computes intensity statistics of an input image, optionally given a label image.
 *
 * Author: ANTs Developers
 *
 * URL: https://github.com/ANTsX/ANTs
 *
 * @param image_dimension The dimensionality of the image (e.g., 2D, 3D).
 * @param input_image The input image for which intensity statistics will be computed.
 * @param label_image An optional label image which defines regions of interest.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `ImageIntensityStatisticsOutputs`).
 */
function image_intensity_statistics(
    image_dimension: number,
    input_image: InputPathType,
    label_image: InputPathType | null = null,
    runner: Runner | null = null,
): ImageIntensityStatisticsOutputs {
    const params = image_intensity_statistics_params(image_dimension, input_image, label_image)
    return image_intensity_statistics_execute(params, runner);
}


export {
      IMAGE_INTENSITY_STATISTICS_METADATA,
      ImageIntensityStatisticsOutputs,
      ImageIntensityStatisticsParameters,
      image_intensity_statistics,
      image_intensity_statistics_execute,
      image_intensity_statistics_params,
};
