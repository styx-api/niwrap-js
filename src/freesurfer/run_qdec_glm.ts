// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const RUN_QDEC_GLM_METADATA: Metadata = {
    id: "7d86461bf7f65d864302de80bed43c2de8adbb76.boutiques",
    name: "run-qdec-glm",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface RunQdecGlmParameters {
    "__STYXTYPE__": "run-qdec-glm";
    "qdec_directory": string;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "run-qdec-glm": run_qdec_glm_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `run_qdec_glm(...)`.
 *
 * @interface
 */
interface RunQdecGlmOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


function run_qdec_glm_params(
    qdec_directory: string,
): RunQdecGlmParameters {
    /**
     * Build parameters.
    
     * @param qdec_directory Directory containing QDEC data
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "run-qdec-glm" as const,
        "qdec_directory": qdec_directory,
    };
    return params;
}


function run_qdec_glm_cargs(
    params: RunQdecGlmParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("run-qdec-glm");
    cargs.push(
        "-glm",
        (params["qdec_directory"] ?? null)
    );
    return cargs;
}


function run_qdec_glm_outputs(
    params: RunQdecGlmParameters,
    execution: Execution,
): RunQdecGlmOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: RunQdecGlmOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


function run_qdec_glm_execute(
    params: RunQdecGlmParameters,
    execution: Execution,
): RunQdecGlmOutputs {
    /**
     * QDEC GLM (General Linear Model) execution tool for statistical analysis.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `RunQdecGlmOutputs`).
     */
    params = execution.params(params)
    const cargs = run_qdec_glm_cargs(params, execution)
    const ret = run_qdec_glm_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function run_qdec_glm(
    qdec_directory: string,
    runner: Runner | null = null,
): RunQdecGlmOutputs {
    /**
     * QDEC GLM (General Linear Model) execution tool for statistical analysis.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param qdec_directory Directory containing QDEC data
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `RunQdecGlmOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(RUN_QDEC_GLM_METADATA);
    const params = run_qdec_glm_params(qdec_directory)
    return run_qdec_glm_execute(params, execution);
}


export {
      RUN_QDEC_GLM_METADATA,
      RunQdecGlmOutputs,
      RunQdecGlmParameters,
      run_qdec_glm,
      run_qdec_glm_params,
};
