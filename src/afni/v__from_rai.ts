// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__FROM_RAI_METADATA: Metadata = {
    id: "606aa9259f1b8916cc82e8ce0bda762e7da64528.boutiques",
    name: "@FromRAI",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VFromRaiParameters {
    "@type": "afni.@FromRAI";
    "rai_coordinates": Array<number>;
    "orientation": string;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "afni.@FromRAI": v__from_rai_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__from_rai(...)`.
 *
 * @interface
 */
interface VFromRaiOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param rai_coordinates RAI coordinates X, Y, and Z
 * @param orientation Orientation format
 *
 * @returns Parameter dictionary
 */
function v__from_rai_params(
    rai_coordinates: Array<number>,
    orientation: string,
): VFromRaiParameters {
    const params = {
        "@type": "afni.@FromRAI" as const,
        "rai_coordinates": rai_coordinates,
        "orientation": orientation,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v__from_rai_cargs(
    params: VFromRaiParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("@FromRAI");
    cargs.push(
        "-xyz",
        ...(params["rai_coordinates"] ?? null).map(String)
    );
    cargs.push(
        "-or",
        (params["orientation"] ?? null)
    );
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v__from_rai_outputs(
    params: VFromRaiParameters,
    execution: Execution,
): VFromRaiOutputs {
    const ret: VFromRaiOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * @FromRAI
 *
 * Changes the RAI coordinates to the specified orientation.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VFromRaiOutputs`).
 */
function v__from_rai_execute(
    params: VFromRaiParameters,
    runner: Runner | null = null,
): VFromRaiOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__FROM_RAI_METADATA);
    params = execution.params(params)
    const cargs = v__from_rai_cargs(params, execution)
    const ret = v__from_rai_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * @FromRAI
 *
 * Changes the RAI coordinates to the specified orientation.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param rai_coordinates RAI coordinates X, Y, and Z
 * @param orientation Orientation format
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VFromRaiOutputs`).
 */
function v__from_rai(
    rai_coordinates: Array<number>,
    orientation: string,
    runner: Runner | null = null,
): VFromRaiOutputs {
    const params = v__from_rai_params(rai_coordinates, orientation)
    return v__from_rai_execute(params, runner);
}


export {
      VFromRaiOutputs,
      VFromRaiParameters,
      V__FROM_RAI_METADATA,
      v__from_rai,
      v__from_rai_execute,
      v__from_rai_params,
};
