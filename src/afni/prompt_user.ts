// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const PROMPT_USER_METADATA: Metadata = {
    id: "eeffbea4e522408c1d4978572830a23c9b27d7fb.boutiques",
    name: "prompt_user",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface PromptUserParameters {
    "__STYXTYPE__": "prompt_user";
    "pause_message": string;
    "timeout_alias"?: number | null | undefined;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "prompt_user": prompt_user_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `prompt_user(...)`.
 *
 * @interface
 */
interface PromptUserOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


function prompt_user_params(
    pause_message: string,
    timeout_alias: number | null = null,
): PromptUserParameters {
    /**
     * Build parameters.
    
     * @param pause_message Pops a window prompting the user with MESSAGE. If MESSAGE is '-', it is read from stdin.
     * @param timeout_alias Alias for -timeout
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "prompt_user" as const,
        "pause_message": pause_message,
    };
    if (timeout_alias !== null) {
        params["timeout_alias"] = timeout_alias;
    }
    return params;
}


function prompt_user_cargs(
    params: PromptUserParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("prompt_user");
    cargs.push(
        "<-pause>",
        (params["pause_message"] ?? null)
    );
    if ((params["timeout_alias"] ?? null) !== null) {
        cargs.push(
            "-to",
            String((params["timeout_alias"] ?? null))
        );
    }
    return cargs;
}


function prompt_user_outputs(
    params: PromptUserParameters,
    execution: Execution,
): PromptUserOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: PromptUserOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


function prompt_user_execute(
    params: PromptUserParameters,
    execution: Execution,
): PromptUserOutputs {
    /**
     * Tool that prompts a window requesting user input with a custom message.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `PromptUserOutputs`).
     */
    params = execution.params(params)
    const cargs = prompt_user_cargs(params, execution)
    const ret = prompt_user_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function prompt_user(
    pause_message: string,
    timeout_alias: number | null = null,
    runner: Runner | null = null,
): PromptUserOutputs {
    /**
     * Tool that prompts a window requesting user input with a custom message.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param pause_message Pops a window prompting the user with MESSAGE. If MESSAGE is '-', it is read from stdin.
     * @param timeout_alias Alias for -timeout
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `PromptUserOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(PROMPT_USER_METADATA);
    const params = prompt_user_params(pause_message, timeout_alias)
    return prompt_user_execute(params, execution);
}


export {
      PROMPT_USER_METADATA,
      PromptUserOutputs,
      PromptUserParameters,
      prompt_user,
      prompt_user_params,
};
