// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const FIRST_ROI_SLICESDIR_METADATA: Metadata = {
    id: "a80103f2b9ed79c20cd5e7f27987d2c4ae93111f.boutiques",
    name: "first_roi_slicesdir",
    package: "fsl",
    container_image_tag: "brainlife/fsl:6.0.4-patched2",
};


interface FirstRoiSlicesdirParameters {
    "@type": "fsl.first_roi_slicesdir";
    "input_t1_images": string;
    "input_label_images": string;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "fsl.first_roi_slicesdir": first_roi_slicesdir_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "fsl.first_roi_slicesdir": first_roi_slicesdir_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `first_roi_slicesdir(...)`.
 *
 * @interface
 */
interface FirstRoiSlicesdirOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Generated slice directory for the input T1 images
     */
    t1_slicesdir: OutputPathType;
    /**
     * Generated slice directory for the input label images
     */
    label_slicesdir: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param input_t1_images Input T1-weighted images of the brain (pattern-matched); for example, *_t1.nii.gz
 * @param input_label_images Input label images corresponding to the T1 images (pattern-matched); for example, *_L_Hipp_first.nii.gz
 *
 * @returns Parameter dictionary
 */
function first_roi_slicesdir_params(
    input_t1_images: string,
    input_label_images: string,
): FirstRoiSlicesdirParameters {
    const params = {
        "@type": "fsl.first_roi_slicesdir" as const,
        "input_t1_images": input_t1_images,
        "input_label_images": input_label_images,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function first_roi_slicesdir_cargs(
    params: FirstRoiSlicesdirParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("first_roi_slicesdir");
    cargs.push((params["input_t1_images"] ?? null));
    cargs.push((params["input_label_images"] ?? null));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function first_roi_slicesdir_outputs(
    params: FirstRoiSlicesdirParameters,
    execution: Execution,
): FirstRoiSlicesdirOutputs {
    const ret: FirstRoiSlicesdirOutputs = {
        root: execution.outputFile("."),
        t1_slicesdir: execution.outputFile([(params["input_t1_images"] ?? null), "_slicesdir"].join('')),
        label_slicesdir: execution.outputFile([(params["input_label_images"] ?? null), "_slicesdir"].join('')),
    };
    return ret;
}


/**
 * A utility for generating slice directories for FIRST-ROI.
 *
 * Author: FMRIB Analysis Group, University of Oxford
 *
 * URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `FirstRoiSlicesdirOutputs`).
 */
function first_roi_slicesdir_execute(
    params: FirstRoiSlicesdirParameters,
    runner: Runner | null = null,
): FirstRoiSlicesdirOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(FIRST_ROI_SLICESDIR_METADATA);
    params = execution.params(params)
    const cargs = first_roi_slicesdir_cargs(params, execution)
    const ret = first_roi_slicesdir_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * A utility for generating slice directories for FIRST-ROI.
 *
 * Author: FMRIB Analysis Group, University of Oxford
 *
 * URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
 *
 * @param input_t1_images Input T1-weighted images of the brain (pattern-matched); for example, *_t1.nii.gz
 * @param input_label_images Input label images corresponding to the T1 images (pattern-matched); for example, *_L_Hipp_first.nii.gz
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `FirstRoiSlicesdirOutputs`).
 */
function first_roi_slicesdir(
    input_t1_images: string,
    input_label_images: string,
    runner: Runner | null = null,
): FirstRoiSlicesdirOutputs {
    const params = first_roi_slicesdir_params(input_t1_images, input_label_images)
    return first_roi_slicesdir_execute(params, runner);
}


export {
      FIRST_ROI_SLICESDIR_METADATA,
      FirstRoiSlicesdirOutputs,
      FirstRoiSlicesdirParameters,
      first_roi_slicesdir,
      first_roi_slicesdir_execute,
      first_roi_slicesdir_params,
};
