// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const SURFACE_MODIFY_SPHERE_METADATA: Metadata = {
    id: "b6752fce36bc891ebf63ba732b88d1a648b22e5d.boutiques",
    name: "surface-modify-sphere",
    package: "workbench",
    container_image_tag: "brainlife/connectome_workbench:1.5.0-freesurfer-update",
};


interface SurfaceModifySphereParameters {
    "@type": "workbench.surface-modify-sphere";
    "sphere_in": InputPathType;
    "radius": number;
    "sphere_out": string;
    "opt_recenter": boolean;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "workbench.surface-modify-sphere": surface_modify_sphere_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "workbench.surface-modify-sphere": surface_modify_sphere_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `surface_modify_sphere(...)`.
 *
 * @interface
 */
interface SurfaceModifySphereOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * the output sphere
     */
    sphere_out: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param sphere_in the sphere to modify
 * @param radius the radius the output sphere should have
 * @param sphere_out the output sphere
 * @param opt_recenter recenter the sphere by means of the bounding box
 *
 * @returns Parameter dictionary
 */
function surface_modify_sphere_params(
    sphere_in: InputPathType,
    radius: number,
    sphere_out: string,
    opt_recenter: boolean = false,
): SurfaceModifySphereParameters {
    const params = {
        "@type": "workbench.surface-modify-sphere" as const,
        "sphere_in": sphere_in,
        "radius": radius,
        "sphere_out": sphere_out,
        "opt_recenter": opt_recenter,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function surface_modify_sphere_cargs(
    params: SurfaceModifySphereParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("wb_command");
    cargs.push("-surface-modify-sphere");
    cargs.push(execution.inputFile((params["sphere_in"] ?? null)));
    cargs.push(String((params["radius"] ?? null)));
    cargs.push((params["sphere_out"] ?? null));
    if ((params["opt_recenter"] ?? null)) {
        cargs.push("-recenter");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function surface_modify_sphere_outputs(
    params: SurfaceModifySphereParameters,
    execution: Execution,
): SurfaceModifySphereOutputs {
    const ret: SurfaceModifySphereOutputs = {
        root: execution.outputFile("."),
        sphere_out: execution.outputFile([(params["sphere_out"] ?? null)].join('')),
    };
    return ret;
}


/**
 * surface-modify-sphere
 *
 * Change radius and optionally recenter a sphere.
 *
 * This command may be useful if you have used -surface-resample to resample a sphere, which can suffer from problems generally not present in -surface-sphere-project-unproject.  If the sphere should already be centered around the origin, using -recenter may still shift it slightly before changing the radius, which is likely to be undesireable.
 *
 * If <sphere-in> is not close to spherical, or not centered around the origin and -recenter is not used, a warning is printed.
 *
 * Author: Connectome Workbench Developers
 *
 * URL: https://github.com/Washington-University/workbench
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `SurfaceModifySphereOutputs`).
 */
function surface_modify_sphere_execute(
    params: SurfaceModifySphereParameters,
    runner: Runner | null = null,
): SurfaceModifySphereOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(SURFACE_MODIFY_SPHERE_METADATA);
    params = execution.params(params)
    const cargs = surface_modify_sphere_cargs(params, execution)
    const ret = surface_modify_sphere_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * surface-modify-sphere
 *
 * Change radius and optionally recenter a sphere.
 *
 * This command may be useful if you have used -surface-resample to resample a sphere, which can suffer from problems generally not present in -surface-sphere-project-unproject.  If the sphere should already be centered around the origin, using -recenter may still shift it slightly before changing the radius, which is likely to be undesireable.
 *
 * If <sphere-in> is not close to spherical, or not centered around the origin and -recenter is not used, a warning is printed.
 *
 * Author: Connectome Workbench Developers
 *
 * URL: https://github.com/Washington-University/workbench
 *
 * @param sphere_in the sphere to modify
 * @param radius the radius the output sphere should have
 * @param sphere_out the output sphere
 * @param opt_recenter recenter the sphere by means of the bounding box
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `SurfaceModifySphereOutputs`).
 */
function surface_modify_sphere(
    sphere_in: InputPathType,
    radius: number,
    sphere_out: string,
    opt_recenter: boolean = false,
    runner: Runner | null = null,
): SurfaceModifySphereOutputs {
    const params = surface_modify_sphere_params(sphere_in, radius, sphere_out, opt_recenter)
    return surface_modify_sphere_execute(params, runner);
}


export {
      SURFACE_MODIFY_SPHERE_METADATA,
      SurfaceModifySphereOutputs,
      SurfaceModifySphereParameters,
      surface_modify_sphere,
      surface_modify_sphere_execute,
      surface_modify_sphere_params,
};
