// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const FIX_SUBJECT_RH_METADATA: Metadata = {
    id: "7b0c00f96ed707e5becf1e78fffdf851eb61fdf4.boutiques",
    name: "fix_subject-rh",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface FixSubjectRhParameters {
    "@type"?: "freesurfer/fix_subject-rh";
    "input_directory": string;
    "help_flag": boolean;
}
type FixSubjectRhParametersTagged = Required<Pick<FixSubjectRhParameters, '@type'>> & FixSubjectRhParameters;


/**
 * Output object returned when calling `FixSubjectRhParameters(...)`.
 *
 * @interface
 */
interface FixSubjectRhOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param input_directory Directory where the subject's right hemisphere data is located.
 * @param help_flag Displays help information for fix_subject-rh.
 *
 * @returns Parameter dictionary
 */
function fix_subject_rh_params(
    input_directory: string,
    help_flag: boolean = false,
): FixSubjectRhParametersTagged {
    const params = {
        "@type": "freesurfer/fix_subject-rh" as const,
        "input_directory": input_directory,
        "help_flag": help_flag,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function fix_subject_rh_cargs(
    params: FixSubjectRhParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("fix_subject-rh");
    cargs.push(
        "-rh",
        (params["input_directory"] ?? null)
    );
    if ((params["help_flag"] ?? false)) {
        cargs.push("--help");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function fix_subject_rh_outputs(
    params: FixSubjectRhParameters,
    execution: Execution,
): FixSubjectRhOutputs {
    const ret: FixSubjectRhOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * fix_subject-rh
 *
 * A tool from FreeSurfer that performs operations on the right hemisphere data within a specified directory.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `FixSubjectRhOutputs`).
 */
function fix_subject_rh_execute(
    params: FixSubjectRhParameters,
    runner: Runner | null = null,
): FixSubjectRhOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(FIX_SUBJECT_RH_METADATA);
    params = execution.params(params)
    const cargs = fix_subject_rh_cargs(params, execution)
    const ret = fix_subject_rh_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * fix_subject-rh
 *
 * A tool from FreeSurfer that performs operations on the right hemisphere data within a specified directory.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param input_directory Directory where the subject's right hemisphere data is located.
 * @param help_flag Displays help information for fix_subject-rh.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `FixSubjectRhOutputs`).
 */
function fix_subject_rh(
    input_directory: string,
    help_flag: boolean = false,
    runner: Runner | null = null,
): FixSubjectRhOutputs {
    const params = fix_subject_rh_params(input_directory, help_flag)
    return fix_subject_rh_execute(params, runner);
}


export {
      FIX_SUBJECT_RH_METADATA,
      FixSubjectRhOutputs,
      fix_subject_rh,
      fix_subject_rh_execute,
      fix_subject_rh_params,
};
