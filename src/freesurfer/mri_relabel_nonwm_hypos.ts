// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const MRI_RELABEL_NONWM_HYPOS_METADATA: Metadata = {
    id: "19db68adb409161945a2632065dac7657655dfc6.boutiques",
    name: "mri_relabel_nonwm_hypos",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface MriRelabelNonwmHyposParameters {
    "@type": "freesurfer.mri_relabel_nonwm_hypos";
    "inputseg": InputPathType;
    "outputseg": string;
    "segments"?: Array<string> | null | undefined;
    "seg_default": boolean;
    "debug": boolean;
    "checkopts": boolean;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.mri_relabel_nonwm_hypos": mri_relabel_nonwm_hypos_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "freesurfer.mri_relabel_nonwm_hypos": mri_relabel_nonwm_hypos_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `mri_relabel_nonwm_hypos(...)`.
 *
 * @interface
 */
interface MriRelabelNonwmHyposOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output segmentation with non-WM hypointensities relabeled.
     */
    out_segmentation: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param inputseg Input segmentation file with non-wm-hypos labeled as 80, 81, or 82.
 * @param outputseg Output segmentation file with non-wm-hypos relabeled.
 * @param segments Label hypos adjacent to specified segment as a new segment (can be used multiple times).
 * @param seg_default Use the default relabeling scheme.
 * @param debug Turn on debugging.
 * @param checkopts Don't run anything, just check options and exit.
 *
 * @returns Parameter dictionary
 */
function mri_relabel_nonwm_hypos_params(
    inputseg: InputPathType,
    outputseg: string,
    segments: Array<string> | null = null,
    seg_default: boolean = false,
    debug: boolean = false,
    checkopts: boolean = false,
): MriRelabelNonwmHyposParameters {
    const params = {
        "@type": "freesurfer.mri_relabel_nonwm_hypos" as const,
        "inputseg": inputseg,
        "outputseg": outputseg,
        "seg_default": seg_default,
        "debug": debug,
        "checkopts": checkopts,
    };
    if (segments !== null) {
        params["segments"] = segments;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function mri_relabel_nonwm_hypos_cargs(
    params: MriRelabelNonwmHyposParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("mri_relabel_nonwm_hypos");
    cargs.push(
        "-i",
        execution.inputFile((params["inputseg"] ?? null))
    );
    cargs.push(
        "-o",
        (params["outputseg"] ?? null)
    );
    if ((params["segments"] ?? null) !== null) {
        cargs.push(
            "--seg",
            ...(params["segments"] ?? null)
        );
    }
    if ((params["seg_default"] ?? null)) {
        cargs.push("--seg-default");
    }
    if ((params["debug"] ?? null)) {
        cargs.push("--debug");
    }
    if ((params["checkopts"] ?? null)) {
        cargs.push("--checkopts");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function mri_relabel_nonwm_hypos_outputs(
    params: MriRelabelNonwmHyposParameters,
    execution: Execution,
): MriRelabelNonwmHyposOutputs {
    const ret: MriRelabelNonwmHyposOutputs = {
        root: execution.outputFile("."),
        out_segmentation: execution.outputFile([(params["outputseg"] ?? null)].join('')),
    };
    return ret;
}


/**
 * mri_relabel_nonwm_hypos
 *
 * Relabels non-WM hypointensities based on proximity to a nearby label.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `MriRelabelNonwmHyposOutputs`).
 */
function mri_relabel_nonwm_hypos_execute(
    params: MriRelabelNonwmHyposParameters,
    runner: Runner | null = null,
): MriRelabelNonwmHyposOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(MRI_RELABEL_NONWM_HYPOS_METADATA);
    params = execution.params(params)
    const cargs = mri_relabel_nonwm_hypos_cargs(params, execution)
    const ret = mri_relabel_nonwm_hypos_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * mri_relabel_nonwm_hypos
 *
 * Relabels non-WM hypointensities based on proximity to a nearby label.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param inputseg Input segmentation file with non-wm-hypos labeled as 80, 81, or 82.
 * @param outputseg Output segmentation file with non-wm-hypos relabeled.
 * @param segments Label hypos adjacent to specified segment as a new segment (can be used multiple times).
 * @param seg_default Use the default relabeling scheme.
 * @param debug Turn on debugging.
 * @param checkopts Don't run anything, just check options and exit.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `MriRelabelNonwmHyposOutputs`).
 */
function mri_relabel_nonwm_hypos(
    inputseg: InputPathType,
    outputseg: string,
    segments: Array<string> | null = null,
    seg_default: boolean = false,
    debug: boolean = false,
    checkopts: boolean = false,
    runner: Runner | null = null,
): MriRelabelNonwmHyposOutputs {
    const params = mri_relabel_nonwm_hypos_params(inputseg, outputseg, segments, seg_default, debug, checkopts)
    return mri_relabel_nonwm_hypos_execute(params, runner);
}


export {
      MRI_RELABEL_NONWM_HYPOS_METADATA,
      MriRelabelNonwmHyposOutputs,
      MriRelabelNonwmHyposParameters,
      mri_relabel_nonwm_hypos,
      mri_relabel_nonwm_hypos_execute,
      mri_relabel_nonwm_hypos_params,
};
