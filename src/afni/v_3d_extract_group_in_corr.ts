// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V_3D_EXTRACT_GROUP_IN_CORR_METADATA: Metadata = {
    id: "bf4ab9978725a057e015773eda00c5d63ac89f4d.boutiques",
    name: "3dExtractGroupInCorr",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface V3dExtractGroupInCorrParameters {
    "@type": "afni.3dExtractGroupInCorr";
    "group_in_corr_file": InputPathType;
    "prefix"?: string | null | undefined;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "afni.3dExtractGroupInCorr": v_3d_extract_group_in_corr_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "afni.3dExtractGroupInCorr": v_3d_extract_group_in_corr_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v_3d_extract_group_in_corr(...)`.
 *
 * @interface
 */
interface V3dExtractGroupInCorrOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output dataset reconstructed from GroupInCorr data
     */
    output_dataset: OutputPathType | null;
}


/**
 * Build parameters.
 *
 * @param group_in_corr_file GroupInCorr file to extract datasets from (e.g. AAA.grpincorr.niml)
 * @param prefix Prefix to prepend to dataset labels. Use 'NULL' to skip the use of the prefix.
 *
 * @returns Parameter dictionary
 */
function v_3d_extract_group_in_corr_params(
    group_in_corr_file: InputPathType,
    prefix: string | null = null,
): V3dExtractGroupInCorrParameters {
    const params = {
        "@type": "afni.3dExtractGroupInCorr" as const,
        "group_in_corr_file": group_in_corr_file,
    };
    if (prefix !== null) {
        params["prefix"] = prefix;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v_3d_extract_group_in_corr_cargs(
    params: V3dExtractGroupInCorrParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("3dExtractGroupInCorr");
    cargs.push(execution.inputFile((params["group_in_corr_file"] ?? null)));
    if ((params["prefix"] ?? null) !== null) {
        cargs.push(
            "-prefix",
            (params["prefix"] ?? null)
        );
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v_3d_extract_group_in_corr_outputs(
    params: V3dExtractGroupInCorrParameters,
    execution: Execution,
): V3dExtractGroupInCorrOutputs {
    const ret: V3dExtractGroupInCorrOutputs = {
        root: execution.outputFile("."),
        output_dataset: ((params["prefix"] ?? null) !== null) ? execution.outputFile([(params["prefix"] ?? null), "_[DATASET_LABEL].nii"].join('')) : null,
    };
    return ret;
}


/**
 * 3dExtractGroupInCorr
 *
 * This program breaks the collection of images from a GroupInCorr file back into individual AFNI 3D+time datasets.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `V3dExtractGroupInCorrOutputs`).
 */
function v_3d_extract_group_in_corr_execute(
    params: V3dExtractGroupInCorrParameters,
    runner: Runner | null = null,
): V3dExtractGroupInCorrOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V_3D_EXTRACT_GROUP_IN_CORR_METADATA);
    params = execution.params(params)
    const cargs = v_3d_extract_group_in_corr_cargs(params, execution)
    const ret = v_3d_extract_group_in_corr_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * 3dExtractGroupInCorr
 *
 * This program breaks the collection of images from a GroupInCorr file back into individual AFNI 3D+time datasets.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param group_in_corr_file GroupInCorr file to extract datasets from (e.g. AAA.grpincorr.niml)
 * @param prefix Prefix to prepend to dataset labels. Use 'NULL' to skip the use of the prefix.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `V3dExtractGroupInCorrOutputs`).
 */
function v_3d_extract_group_in_corr(
    group_in_corr_file: InputPathType,
    prefix: string | null = null,
    runner: Runner | null = null,
): V3dExtractGroupInCorrOutputs {
    const params = v_3d_extract_group_in_corr_params(group_in_corr_file, prefix)
    return v_3d_extract_group_in_corr_execute(params, runner);
}


export {
      V3dExtractGroupInCorrOutputs,
      V3dExtractGroupInCorrParameters,
      V_3D_EXTRACT_GROUP_IN_CORR_METADATA,
      v_3d_extract_group_in_corr,
      v_3d_extract_group_in_corr_execute,
      v_3d_extract_group_in_corr_params,
};
