// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const RENORMALIZE_SUBJECT_KEEP_EDITTING_METADATA: Metadata = {
    id: "d1c64f0c85672d74bb2cb15852e56662e6d58c32.boutiques",
    name: "renormalize_subject_keep_editting",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface RenormalizeSubjectKeepEdittingParameters {
    "__STYXTYPE__": "renormalize_subject_keep_editting";
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "renormalize_subject_keep_editting": renormalize_subject_keep_editting_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "renormalize_subject_keep_editting": renormalize_subject_keep_editting_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `renormalize_subject_keep_editting(...)`.
 *
 * @interface
 */
interface RenormalizeSubjectKeepEdittingOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Placeholder output file since tool details are not available.
     */
    outfile: OutputPathType;
}


function renormalize_subject_keep_editting_params(
): RenormalizeSubjectKeepEdittingParameters {
    /**
     * Build parameters.
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "renormalize_subject_keep_editting" as const,
    };
    return params;
}


function renormalize_subject_keep_editting_cargs(
    params: RenormalizeSubjectKeepEdittingParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("renormalize_subject_keep_editting");
    return cargs;
}


function renormalize_subject_keep_editting_outputs(
    params: RenormalizeSubjectKeepEdittingParameters,
    execution: Execution,
): RenormalizeSubjectKeepEdittingOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: RenormalizeSubjectKeepEdittingOutputs = {
        root: execution.outputFile("."),
        outfile: execution.outputFile(["output.txt"].join('')),
    };
    return ret;
}


function renormalize_subject_keep_editting_execute(
    params: RenormalizeSubjectKeepEdittingParameters,
    execution: Execution,
): RenormalizeSubjectKeepEdittingOutputs {
    /**
     * A placeholder for the renormalize_subject_keep_editting tool, details not available.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `RenormalizeSubjectKeepEdittingOutputs`).
     */
    params = execution.params(params)
    const cargs = renormalize_subject_keep_editting_cargs(params, execution)
    const ret = renormalize_subject_keep_editting_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function renormalize_subject_keep_editting(
    runner: Runner | null = null,
): RenormalizeSubjectKeepEdittingOutputs {
    /**
     * A placeholder for the renormalize_subject_keep_editting tool, details not available.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `RenormalizeSubjectKeepEdittingOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(RENORMALIZE_SUBJECT_KEEP_EDITTING_METADATA);
    const params = renormalize_subject_keep_editting_params()
    return renormalize_subject_keep_editting_execute(params, execution);
}


export {
      RENORMALIZE_SUBJECT_KEEP_EDITTING_METADATA,
      RenormalizeSubjectKeepEdittingOutputs,
      RenormalizeSubjectKeepEdittingParameters,
      renormalize_subject_keep_editting,
      renormalize_subject_keep_editting_params,
};
