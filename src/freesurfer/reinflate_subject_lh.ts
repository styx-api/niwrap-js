// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const REINFLATE_SUBJECT_LH_METADATA: Metadata = {
    id: "42bb32324b2005eaf17fd4aaa28dc1b4f5722181.boutiques",
    name: "reinflate_subject-lh",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface ReinflateSubjectLhParameters {
    "@type": "freesurfer.reinflate_subject-lh";
    "subject_id": string;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.reinflate_subject-lh": reinflate_subject_lh_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "freesurfer.reinflate_subject-lh": reinflate_subject_lh_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `reinflate_subject_lh(...)`.
 *
 * @interface
 */
interface ReinflateSubjectLhOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Reinflated left hemisphere cortical surface
     */
    inflated_surface: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param subject_id Subject identifier
 *
 * @returns Parameter dictionary
 */
function reinflate_subject_lh_params(
    subject_id: string,
): ReinflateSubjectLhParameters {
    const params = {
        "@type": "freesurfer.reinflate_subject-lh" as const,
        "subject_id": subject_id,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function reinflate_subject_lh_cargs(
    params: ReinflateSubjectLhParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("reinflate_subject-lh");
    cargs.push(
        "-lh",
        (params["subject_id"] ?? null)
    );
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function reinflate_subject_lh_outputs(
    params: ReinflateSubjectLhParameters,
    execution: Execution,
): ReinflateSubjectLhOutputs {
    const ret: ReinflateSubjectLhOutputs = {
        root: execution.outputFile("."),
        inflated_surface: execution.outputFile([(params["subject_id"] ?? null), "/surf/lh.inflated"].join('')),
    };
    return ret;
}


/**
 * Utility to reinflate cortical surfaces for left hemisphere in FreeSurfer.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `ReinflateSubjectLhOutputs`).
 */
function reinflate_subject_lh_execute(
    params: ReinflateSubjectLhParameters,
    runner: Runner | null = null,
): ReinflateSubjectLhOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(REINFLATE_SUBJECT_LH_METADATA);
    params = execution.params(params)
    const cargs = reinflate_subject_lh_cargs(params, execution)
    const ret = reinflate_subject_lh_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * Utility to reinflate cortical surfaces for left hemisphere in FreeSurfer.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param subject_id Subject identifier
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `ReinflateSubjectLhOutputs`).
 */
function reinflate_subject_lh(
    subject_id: string,
    runner: Runner | null = null,
): ReinflateSubjectLhOutputs {
    const params = reinflate_subject_lh_params(subject_id)
    return reinflate_subject_lh_execute(params, runner);
}


export {
      REINFLATE_SUBJECT_LH_METADATA,
      ReinflateSubjectLhOutputs,
      ReinflateSubjectLhParameters,
      reinflate_subject_lh,
      reinflate_subject_lh_execute,
      reinflate_subject_lh_params,
};
