// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const MRIS_REMOVE_NEGATIVE_VERTICES_METADATA: Metadata = {
    id: "c1064a10c7344f9e696303964c7ecc7e48d65433.boutiques",
    name: "mris_remove_negative_vertices",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface MrisRemoveNegativeVerticesParameters {
    "__STYXTYPE__": "mris_remove_negative_vertices";
    "surface_file": InputPathType;
    "patch_file": InputPathType;
    "output_patch": string;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "mris_remove_negative_vertices": mris_remove_negative_vertices_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "mris_remove_negative_vertices": mris_remove_negative_vertices_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `mris_remove_negative_vertices(...)`.
 *
 * @interface
 */
interface MrisRemoveNegativeVerticesOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * The resulting output patch file
     */
    output_patch_file: OutputPathType;
}


function mris_remove_negative_vertices_params(
    surface_file: InputPathType,
    patch_file: InputPathType,
    output_patch: string,
): MrisRemoveNegativeVerticesParameters {
    /**
     * Build parameters.
    
     * @param surface_file Input surface file
     * @param patch_file Patch file name
     * @param output_patch Output patch file
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "mris_remove_negative_vertices" as const,
        "surface_file": surface_file,
        "patch_file": patch_file,
        "output_patch": output_patch,
    };
    return params;
}


function mris_remove_negative_vertices_cargs(
    params: MrisRemoveNegativeVerticesParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("mris_remove_negative_vertices");
    cargs.push(execution.inputFile((params["surface_file"] ?? null)));
    cargs.push(execution.inputFile((params["patch_file"] ?? null)));
    cargs.push((params["output_patch"] ?? null));
    return cargs;
}


function mris_remove_negative_vertices_outputs(
    params: MrisRemoveNegativeVerticesParameters,
    execution: Execution,
): MrisRemoveNegativeVerticesOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: MrisRemoveNegativeVerticesOutputs = {
        root: execution.outputFile("."),
        output_patch_file: execution.outputFile([(params["output_patch"] ?? null)].join('')),
    };
    return ret;
}


function mris_remove_negative_vertices_execute(
    params: MrisRemoveNegativeVerticesParameters,
    execution: Execution,
): MrisRemoveNegativeVerticesOutputs {
    /**
     * This program adds a template into an average surface.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `MrisRemoveNegativeVerticesOutputs`).
     */
    params = execution.params(params)
    const cargs = mris_remove_negative_vertices_cargs(params, execution)
    const ret = mris_remove_negative_vertices_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function mris_remove_negative_vertices(
    surface_file: InputPathType,
    patch_file: InputPathType,
    output_patch: string,
    runner: Runner | null = null,
): MrisRemoveNegativeVerticesOutputs {
    /**
     * This program adds a template into an average surface.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param surface_file Input surface file
     * @param patch_file Patch file name
     * @param output_patch Output patch file
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `MrisRemoveNegativeVerticesOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(MRIS_REMOVE_NEGATIVE_VERTICES_METADATA);
    const params = mris_remove_negative_vertices_params(surface_file, patch_file, output_patch)
    return mris_remove_negative_vertices_execute(params, execution);
}


export {
      MRIS_REMOVE_NEGATIVE_VERTICES_METADATA,
      MrisRemoveNegativeVerticesOutputs,
      MrisRemoveNegativeVerticesParameters,
      mris_remove_negative_vertices,
      mris_remove_negative_vertices_params,
};
