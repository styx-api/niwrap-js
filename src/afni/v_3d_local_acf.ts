// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V_3D_LOCAL_ACF_METADATA: Metadata = {
    id: "13a5cf4d62e86aaa1c39140c70391cd1c06bc003.boutiques",
    name: "3dLocalACF",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface V3dLocalAcfParameters {
    "@type"?: "afni/3dLocalACF";
    "prefix": string;
    "input_file": InputPathType;
    "neighborhood"?: string | null | undefined;
    "mask_file"?: InputPathType | null | undefined;
    "auto_mask": boolean;
}
type V3dLocalAcfParametersTagged = Required<Pick<V3dLocalAcfParameters, '@type'>> & V3dLocalAcfParameters;


/**
 * Output object returned when calling `V3dLocalAcfParameters(...)`.
 *
 * @interface
 */
interface V3dLocalAcfOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output dataset with ACF estimates
     */
    output_file: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param prefix Prefix for output dataset
 * @param input_file Input time series dataset
 * @param neighborhood Neighborhood specification (e.g., SPHERE(25))
 * @param mask_file Dataset to mask the analysis
 * @param auto_mask Automatically generate brain mask from input dataset
 *
 * @returns Parameter dictionary
 */
function v_3d_local_acf_params(
    prefix: string,
    input_file: InputPathType,
    neighborhood: string | null = null,
    mask_file: InputPathType | null = null,
    auto_mask: boolean = false,
): V3dLocalAcfParametersTagged {
    const params = {
        "@type": "afni/3dLocalACF" as const,
        "prefix": prefix,
        "input_file": input_file,
        "auto_mask": auto_mask,
    };
    if (neighborhood !== null) {
        params["neighborhood"] = neighborhood;
    }
    if (mask_file !== null) {
        params["mask_file"] = mask_file;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v_3d_local_acf_cargs(
    params: V3dLocalAcfParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("3dLocalACF");
    cargs.push(
        "-prefix",
        (params["prefix"] ?? null)
    );
    cargs.push(execution.inputFile((params["input_file"] ?? null)));
    if ((params["neighborhood"] ?? null) !== null) {
        cargs.push(
            "-nbhd",
            (params["neighborhood"] ?? null)
        );
    }
    if ((params["mask_file"] ?? null) !== null) {
        cargs.push(
            "-mask",
            execution.inputFile((params["mask_file"] ?? null))
        );
    }
    if ((params["auto_mask"] ?? false)) {
        cargs.push("-automask");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v_3d_local_acf_outputs(
    params: V3dLocalAcfParameters,
    execution: Execution,
): V3dLocalAcfOutputs {
    const ret: V3dLocalAcfOutputs = {
        root: execution.outputFile("."),
        output_file: execution.outputFile([(params["prefix"] ?? null), ".nii.gz"].join('')),
    };
    return ret;
}


/**
 * 3dLocalACF
 *
 * Estimate the spatial AutoCorrelation Function (ACF) locally in a neighborhood around each voxel.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `V3dLocalAcfOutputs`).
 */
function v_3d_local_acf_execute(
    params: V3dLocalAcfParameters,
    runner: Runner | null = null,
): V3dLocalAcfOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V_3D_LOCAL_ACF_METADATA);
    params = execution.params(params)
    const cargs = v_3d_local_acf_cargs(params, execution)
    const ret = v_3d_local_acf_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * 3dLocalACF
 *
 * Estimate the spatial AutoCorrelation Function (ACF) locally in a neighborhood around each voxel.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param prefix Prefix for output dataset
 * @param input_file Input time series dataset
 * @param neighborhood Neighborhood specification (e.g., SPHERE(25))
 * @param mask_file Dataset to mask the analysis
 * @param auto_mask Automatically generate brain mask from input dataset
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `V3dLocalAcfOutputs`).
 */
function v_3d_local_acf(
    prefix: string,
    input_file: InputPathType,
    neighborhood: string | null = null,
    mask_file: InputPathType | null = null,
    auto_mask: boolean = false,
    runner: Runner | null = null,
): V3dLocalAcfOutputs {
    const params = v_3d_local_acf_params(prefix, input_file, neighborhood, mask_file, auto_mask)
    return v_3d_local_acf_execute(params, runner);
}


export {
      V3dLocalAcfOutputs,
      V_3D_LOCAL_ACF_METADATA,
      v_3d_local_acf,
      v_3d_local_acf_execute,
      v_3d_local_acf_params,
};
