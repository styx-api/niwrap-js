// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const MRI_STRIP_NONWHITE_METADATA: Metadata = {
    id: "cc892c1e9e9a51e9ab528d65d83b412f48deb425.boutiques",
    name: "mri_strip_nonwhite",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface MriStripNonwhiteParameters {
    "__STYXTYPE__": "mri_strip_nonwhite";
    "input_volume": InputPathType;
    "transform": InputPathType;
    "template_volume": InputPathType;
    "output_volume": string;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "mri_strip_nonwhite": mri_strip_nonwhite_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "mri_strip_nonwhite": mri_strip_nonwhite_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `mri_strip_nonwhite(...)`.
 *
 * @interface
 */
interface MriStripNonwhiteOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Processed output volume file
     */
    output_file: OutputPathType;
}


function mri_strip_nonwhite_params(
    input_volume: InputPathType,
    transform: InputPathType,
    template_volume: InputPathType,
    output_volume: string,
): MriStripNonwhiteParameters {
    /**
     * Build parameters.
    
     * @param input_volume Input MRI volume file
     * @param transform Transformation file to be applied to the input volume
     * @param template_volume Template volume file used in conjunction with the transform
     * @param output_volume Name of the output volume file
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "mri_strip_nonwhite" as const,
        "input_volume": input_volume,
        "transform": transform,
        "template_volume": template_volume,
        "output_volume": output_volume,
    };
    return params;
}


function mri_strip_nonwhite_cargs(
    params: MriStripNonwhiteParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("mri_strip_nonwhite");
    cargs.push(execution.inputFile((params["input_volume"] ?? null)));
    cargs.push(execution.inputFile((params["transform"] ?? null)));
    cargs.push(execution.inputFile((params["template_volume"] ?? null)));
    cargs.push((params["output_volume"] ?? null));
    return cargs;
}


function mri_strip_nonwhite_outputs(
    params: MriStripNonwhiteParameters,
    execution: Execution,
): MriStripNonwhiteOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: MriStripNonwhiteOutputs = {
        root: execution.outputFile("."),
        output_file: execution.outputFile([(params["output_volume"] ?? null)].join('')),
    };
    return ret;
}


function mri_strip_nonwhite_execute(
    params: MriStripNonwhiteParameters,
    execution: Execution,
): MriStripNonwhiteOutputs {
    /**
     * Tool for processing MRI images, transforming volumetric data using provided transformation and template files.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `MriStripNonwhiteOutputs`).
     */
    params = execution.params(params)
    const cargs = mri_strip_nonwhite_cargs(params, execution)
    const ret = mri_strip_nonwhite_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function mri_strip_nonwhite(
    input_volume: InputPathType,
    transform: InputPathType,
    template_volume: InputPathType,
    output_volume: string,
    runner: Runner | null = null,
): MriStripNonwhiteOutputs {
    /**
     * Tool for processing MRI images, transforming volumetric data using provided transformation and template files.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param input_volume Input MRI volume file
     * @param transform Transformation file to be applied to the input volume
     * @param template_volume Template volume file used in conjunction with the transform
     * @param output_volume Name of the output volume file
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `MriStripNonwhiteOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(MRI_STRIP_NONWHITE_METADATA);
    const params = mri_strip_nonwhite_params(input_volume, transform, template_volume, output_volume)
    return mri_strip_nonwhite_execute(params, execution);
}


export {
      MRI_STRIP_NONWHITE_METADATA,
      MriStripNonwhiteOutputs,
      MriStripNonwhiteParameters,
      mri_strip_nonwhite,
      mri_strip_nonwhite_params,
};
