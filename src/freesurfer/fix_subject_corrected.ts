// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const FIX_SUBJECT_CORRECTED_METADATA: Metadata = {
    id: "e9683c6b2300288726f90faacf8034788b095c6c.boutiques",
    name: "fix_subject_corrected",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface FixSubjectCorrectedParameters {
    "@type": "freesurfer.fix_subject_corrected";
    "subject_directory": string;
    "output_directory": string;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.fix_subject_corrected": fix_subject_corrected_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `fix_subject_corrected(...)`.
 *
 * @interface
 */
interface FixSubjectCorrectedOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param subject_directory Path to the subject's directory
 * @param output_directory Path to the output directory
 *
 * @returns Parameter dictionary
 */
function fix_subject_corrected_params(
    subject_directory: string,
    output_directory: string,
): FixSubjectCorrectedParameters {
    const params = {
        "@type": "freesurfer.fix_subject_corrected" as const,
        "subject_directory": subject_directory,
        "output_directory": output_directory,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function fix_subject_corrected_cargs(
    params: FixSubjectCorrectedParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("fix_subject_corrected");
    cargs.push((params["subject_directory"] ?? null));
    cargs.push((params["output_directory"] ?? null));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function fix_subject_corrected_outputs(
    params: FixSubjectCorrectedParameters,
    execution: Execution,
): FixSubjectCorrectedOutputs {
    const ret: FixSubjectCorrectedOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * Corrects subject data in FreeSurfer.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param execution The execution object.
 *
 * @returns NamedTuple of outputs (described in `FixSubjectCorrectedOutputs`).
 */
function fix_subject_corrected_execute(
    params: FixSubjectCorrectedParameters,
    execution: Execution,
): FixSubjectCorrectedOutputs {
    params = execution.params(params)
    const cargs = fix_subject_corrected_cargs(params, execution)
    const ret = fix_subject_corrected_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * Corrects subject data in FreeSurfer.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param subject_directory Path to the subject's directory
 * @param output_directory Path to the output directory
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `FixSubjectCorrectedOutputs`).
 */
function fix_subject_corrected(
    subject_directory: string,
    output_directory: string,
    runner: Runner | null = null,
): FixSubjectCorrectedOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(FIX_SUBJECT_CORRECTED_METADATA);
    const params = fix_subject_corrected_params(subject_directory, output_directory)
    return fix_subject_corrected_execute(params, execution);
}


export {
      FIX_SUBJECT_CORRECTED_METADATA,
      FixSubjectCorrectedOutputs,
      FixSubjectCorrectedParameters,
      fix_subject_corrected,
      fix_subject_corrected_cargs,
      fix_subject_corrected_execute,
      fix_subject_corrected_outputs,
      fix_subject_corrected_params,
};
