// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V_3DREFIT_METADATA: Metadata = {
    id: "1b32a8e5d836e884c437e83b1af640f8bc0937f0.boutiques",
    name: "3drefit",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface V3drefitParameters {
    "@type"?: "afni/3drefit";
    "atrcopy"?: Array<string> | null | undefined;
    "atrfloat"?: Array<string> | null | undefined;
    "atrint"?: Array<string> | null | undefined;
    "atrstring"?: Array<string> | null | undefined;
    "deoblique": boolean;
    "duporigin_file"?: InputPathType | null | undefined;
    "in_file": InputPathType;
    "nosaveatr": boolean;
    "saveatr": boolean;
    "space"?: "TLRC" | "MNI" | "ORIG" | null | undefined;
    "xdel"?: number | null | undefined;
    "xorigin"?: string | null | undefined;
    "xyzscale"?: number | null | undefined;
    "ydel"?: number | null | undefined;
    "yorigin"?: string | null | undefined;
    "zdel"?: number | null | undefined;
    "zorigin"?: string | null | undefined;
}
type V3drefitParametersTagged = Required<Pick<V3drefitParameters, '@type'>> & V3drefitParameters;


/**
 * Output object returned when calling `V3drefitParameters(...)`.
 *
 * @interface
 */
interface V3drefitOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output file.
     */
    out_file: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param in_file Input file to 3drefit.
 * @param atrcopy (file, string). Copy afni header attribute from the given file into the header of the dataset(s) being modified. for more information on afni header attributes, see documentation file readme.attributes. more than one '-atrcopy' option can be used. for afni advanced users only. do not use -atrcopy or -atrstring with other modification options. see also -copyaux.
 * @param atrfloat (a string, a string). Create or modify floating point attributes. the input values may be specified as a single string in quotes or as a 1d filename or string, example '1 0.2 0 0 -0.2 1 0 0 0 0 1 0' or flipz.1d or '1d:1,0.2,2@0,-0.2,1,2@0,2@0,1,0'.
 * @param atrint (a string, a string). Create or modify integer attributes. the input values may be specified as a single string in quotes or as a 1d filename or string, example '1 0 0 0 0 1 0 0 0 0 1 0' or flipz.1d or '1d:1,0,2@0,-0,1,2@0,2@0,1,0'.
 * @param atrstring (a string, a string). Copy the last given string into the dataset(s) being modified, giving it the attribute name given by the last string.to be safe, the last string should be in quotes.
 * @param deoblique Replace current transformation matrix with cardinal matrix.
 * @param duporigin_file Copies the xorigin, yorigin, and zorigin values from the header of the given dataset.
 * @param nosaveatr Opposite of -saveatr.
 * @param saveatr (default) copy the attributes that are known to afni into the dset->dblk structure thereby forcing changes to known attributes to be present in the output. this option only makes sense with -atrcopy.
 * @param space 'tlrc' or 'mni' or 'orig'. Associates the dataset with a specific template type, e.g. tlrc, mni, orig.
 * @param xdel New x voxel dimension in mm.
 * @param xorigin X distance for edge voxel offset.
 * @param xyzscale Scale the size of the dataset voxels by the given factor.
 * @param ydel New y voxel dimension in mm.
 * @param yorigin Y distance for edge voxel offset.
 * @param zdel New z voxel dimension in mm.
 * @param zorigin Z distance for edge voxel offset.
 *
 * @returns Parameter dictionary
 */
function v_3drefit_params(
    in_file: InputPathType,
    atrcopy: Array<string> | null = null,
    atrfloat: Array<string> | null = null,
    atrint: Array<string> | null = null,
    atrstring: Array<string> | null = null,
    deoblique: boolean = false,
    duporigin_file: InputPathType | null = null,
    nosaveatr: boolean = false,
    saveatr: boolean = false,
    space: "TLRC" | "MNI" | "ORIG" | null = null,
    xdel: number | null = null,
    xorigin: string | null = null,
    xyzscale: number | null = null,
    ydel: number | null = null,
    yorigin: string | null = null,
    zdel: number | null = null,
    zorigin: string | null = null,
): V3drefitParametersTagged {
    const params = {
        "@type": "afni/3drefit" as const,
        "deoblique": deoblique,
        "in_file": in_file,
        "nosaveatr": nosaveatr,
        "saveatr": saveatr,
    };
    if (atrcopy !== null) {
        params["atrcopy"] = atrcopy;
    }
    if (atrfloat !== null) {
        params["atrfloat"] = atrfloat;
    }
    if (atrint !== null) {
        params["atrint"] = atrint;
    }
    if (atrstring !== null) {
        params["atrstring"] = atrstring;
    }
    if (duporigin_file !== null) {
        params["duporigin_file"] = duporigin_file;
    }
    if (space !== null) {
        params["space"] = space;
    }
    if (xdel !== null) {
        params["xdel"] = xdel;
    }
    if (xorigin !== null) {
        params["xorigin"] = xorigin;
    }
    if (xyzscale !== null) {
        params["xyzscale"] = xyzscale;
    }
    if (ydel !== null) {
        params["ydel"] = ydel;
    }
    if (yorigin !== null) {
        params["yorigin"] = yorigin;
    }
    if (zdel !== null) {
        params["zdel"] = zdel;
    }
    if (zorigin !== null) {
        params["zorigin"] = zorigin;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v_3drefit_cargs(
    params: V3drefitParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("3drefit");
    if ((params["atrcopy"] ?? null) !== null) {
        cargs.push(
            "-atrcopy",
            ...(params["atrcopy"] ?? null)
        );
    }
    if ((params["atrfloat"] ?? null) !== null) {
        cargs.push(
            "-atrfloat",
            ...(params["atrfloat"] ?? null)
        );
    }
    if ((params["atrint"] ?? null) !== null) {
        cargs.push(
            "-atrint",
            ...(params["atrint"] ?? null)
        );
    }
    if ((params["atrstring"] ?? null) !== null) {
        cargs.push(
            "-atrstring",
            ...(params["atrstring"] ?? null)
        );
    }
    if ((params["deoblique"] ?? false)) {
        cargs.push("-deoblique");
    }
    if ((params["duporigin_file"] ?? null) !== null) {
        cargs.push(
            "-duporigin",
            execution.inputFile((params["duporigin_file"] ?? null))
        );
    }
    cargs.push(execution.inputFile((params["in_file"] ?? null), { mutable: true }));
    if ((params["nosaveatr"] ?? false)) {
        cargs.push("-nosaveatr");
    }
    if ((params["saveatr"] ?? false)) {
        cargs.push("-saveatr");
    }
    if ((params["space"] ?? null) !== null) {
        cargs.push(
            "-space",
            (params["space"] ?? null)
        );
    }
    if ((params["xdel"] ?? null) !== null) {
        cargs.push(
            "-xdel",
            String((params["xdel"] ?? null))
        );
    }
    if ((params["xorigin"] ?? null) !== null) {
        cargs.push(
            "-xorigin",
            (params["xorigin"] ?? null)
        );
    }
    if ((params["xyzscale"] ?? null) !== null) {
        cargs.push(
            "-xyzscale",
            String((params["xyzscale"] ?? null))
        );
    }
    if ((params["ydel"] ?? null) !== null) {
        cargs.push(
            "-ydel",
            String((params["ydel"] ?? null))
        );
    }
    if ((params["yorigin"] ?? null) !== null) {
        cargs.push(
            "-yorigin",
            (params["yorigin"] ?? null)
        );
    }
    if ((params["zdel"] ?? null) !== null) {
        cargs.push(
            "-zdel",
            String((params["zdel"] ?? null))
        );
    }
    if ((params["zorigin"] ?? null) !== null) {
        cargs.push(
            "-zorigin",
            (params["zorigin"] ?? null)
        );
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v_3drefit_outputs(
    params: V3drefitParameters,
    execution: Execution,
): V3drefitOutputs {
    const ret: V3drefitOutputs = {
        root: execution.outputFile("."),
        out_file: execution.outputFile(["out_file"].join('')),
    };
    return ret;
}


/**
 * 3drefit
 *
 * Changes some of the information inside a 3D dataset's header.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `V3drefitOutputs`).
 */
function v_3drefit_execute(
    params: V3drefitParameters,
    runner: Runner | null = null,
): V3drefitOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V_3DREFIT_METADATA);
    params = execution.params(params)
    const cargs = v_3drefit_cargs(params, execution)
    const ret = v_3drefit_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * 3drefit
 *
 * Changes some of the information inside a 3D dataset's header.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param in_file Input file to 3drefit.
 * @param atrcopy (file, string). Copy afni header attribute from the given file into the header of the dataset(s) being modified. for more information on afni header attributes, see documentation file readme.attributes. more than one '-atrcopy' option can be used. for afni advanced users only. do not use -atrcopy or -atrstring with other modification options. see also -copyaux.
 * @param atrfloat (a string, a string). Create or modify floating point attributes. the input values may be specified as a single string in quotes or as a 1d filename or string, example '1 0.2 0 0 -0.2 1 0 0 0 0 1 0' or flipz.1d or '1d:1,0.2,2@0,-0.2,1,2@0,2@0,1,0'.
 * @param atrint (a string, a string). Create or modify integer attributes. the input values may be specified as a single string in quotes or as a 1d filename or string, example '1 0 0 0 0 1 0 0 0 0 1 0' or flipz.1d or '1d:1,0,2@0,-0,1,2@0,2@0,1,0'.
 * @param atrstring (a string, a string). Copy the last given string into the dataset(s) being modified, giving it the attribute name given by the last string.to be safe, the last string should be in quotes.
 * @param deoblique Replace current transformation matrix with cardinal matrix.
 * @param duporigin_file Copies the xorigin, yorigin, and zorigin values from the header of the given dataset.
 * @param nosaveatr Opposite of -saveatr.
 * @param saveatr (default) copy the attributes that are known to afni into the dset->dblk structure thereby forcing changes to known attributes to be present in the output. this option only makes sense with -atrcopy.
 * @param space 'tlrc' or 'mni' or 'orig'. Associates the dataset with a specific template type, e.g. tlrc, mni, orig.
 * @param xdel New x voxel dimension in mm.
 * @param xorigin X distance for edge voxel offset.
 * @param xyzscale Scale the size of the dataset voxels by the given factor.
 * @param ydel New y voxel dimension in mm.
 * @param yorigin Y distance for edge voxel offset.
 * @param zdel New z voxel dimension in mm.
 * @param zorigin Z distance for edge voxel offset.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `V3drefitOutputs`).
 */
function v_3drefit(
    in_file: InputPathType,
    atrcopy: Array<string> | null = null,
    atrfloat: Array<string> | null = null,
    atrint: Array<string> | null = null,
    atrstring: Array<string> | null = null,
    deoblique: boolean = false,
    duporigin_file: InputPathType | null = null,
    nosaveatr: boolean = false,
    saveatr: boolean = false,
    space: "TLRC" | "MNI" | "ORIG" | null = null,
    xdel: number | null = null,
    xorigin: string | null = null,
    xyzscale: number | null = null,
    ydel: number | null = null,
    yorigin: string | null = null,
    zdel: number | null = null,
    zorigin: string | null = null,
    runner: Runner | null = null,
): V3drefitOutputs {
    const params = v_3drefit_params(in_file, atrcopy, atrfloat, atrint, atrstring, deoblique, duporigin_file, nosaveatr, saveatr, space, xdel, xorigin, xyzscale, ydel, yorigin, zdel, zorigin)
    return v_3drefit_execute(params, runner);
}


export {
      V3drefitOutputs,
      V_3DREFIT_METADATA,
      v_3drefit,
      v_3drefit_execute,
      v_3drefit_params,
};
