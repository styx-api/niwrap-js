// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const INFLATE_SUBJECT_SC_METADATA: Metadata = {
    id: "0813ce358c83e50fc62e002b6de9508d35f9a2be.boutiques",
    name: "inflate_subject_sc",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface InflateSubjectScParameters {
    "__STYXTYPE__": "inflate_subject_sc";
    "subject_dir": string;
    "verbose": boolean;
    "debug": boolean;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "inflate_subject_sc": inflate_subject_sc_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "inflate_subject_sc": inflate_subject_sc_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `inflate_subject_sc(...)`.
 *
 * @interface
 */
interface InflateSubjectScOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Inflated subject surface output.
     */
    inflated_output: OutputPathType;
}


function inflate_subject_sc_params(
    subject_dir: string,
    verbose: boolean = false,
    debug: boolean = false,
): InflateSubjectScParameters {
    /**
     * Build parameters.
    
     * @param subject_dir Path to the subject directory.
     * @param verbose Enable verbose output.
     * @param debug Enable debug mode.
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "inflate_subject_sc" as const,
        "subject_dir": subject_dir,
        "verbose": verbose,
        "debug": debug,
    };
    return params;
}


function inflate_subject_sc_cargs(
    params: InflateSubjectScParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("inflate_subject_sc");
    cargs.push((params["subject_dir"] ?? null));
    if ((params["verbose"] ?? null)) {
        cargs.push("--verbose");
    }
    if ((params["debug"] ?? null)) {
        cargs.push("--debug");
    }
    return cargs;
}


function inflate_subject_sc_outputs(
    params: InflateSubjectScParameters,
    execution: Execution,
): InflateSubjectScOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: InflateSubjectScOutputs = {
        root: execution.outputFile("."),
        inflated_output: execution.outputFile([(params["subject_dir"] ?? null), "/inflated_output"].join('')),
    };
    return ret;
}


function inflate_subject_sc_execute(
    params: InflateSubjectScParameters,
    execution: Execution,
): InflateSubjectScOutputs {
    /**
     * Inferred description: Tool for inflating subject surfaces, specific details unavailable.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `InflateSubjectScOutputs`).
     */
    params = execution.params(params)
    const cargs = inflate_subject_sc_cargs(params, execution)
    const ret = inflate_subject_sc_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function inflate_subject_sc(
    subject_dir: string,
    verbose: boolean = false,
    debug: boolean = false,
    runner: Runner | null = null,
): InflateSubjectScOutputs {
    /**
     * Inferred description: Tool for inflating subject surfaces, specific details unavailable.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param subject_dir Path to the subject directory.
     * @param verbose Enable verbose output.
     * @param debug Enable debug mode.
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `InflateSubjectScOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(INFLATE_SUBJECT_SC_METADATA);
    const params = inflate_subject_sc_params(subject_dir, verbose, debug)
    return inflate_subject_sc_execute(params, execution);
}


export {
      INFLATE_SUBJECT_SC_METADATA,
      InflateSubjectScOutputs,
      InflateSubjectScParameters,
      inflate_subject_sc,
      inflate_subject_sc_params,
};
