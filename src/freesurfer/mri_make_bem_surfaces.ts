// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const MRI_MAKE_BEM_SURFACES_METADATA: Metadata = {
    id: "bf604b98772344df00f9c5bf8df0b04b2b8ed831.boutiques",
    name: "mri_make_bem_surfaces",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface MriMakeBemSurfacesParameters {
    "@type": "freesurfer.mri_make_bem_surfaces";
    "name": string;
    "mfile"?: InputPathType | null | undefined;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.mri_make_bem_surfaces": mri_make_bem_surfaces_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "freesurfer.mri_make_bem_surfaces": mri_make_bem_surfaces_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `mri_make_bem_surfaces(...)`.
 *
 * @interface
 */
interface MriMakeBemSurfacesOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Generated inner skull surface triangle file.
     */
    inner_skull_tri: OutputPathType;
    /**
     * Temporary file for best guess at inner skull surface.
     */
    inner_skull_tmp_tri: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param name The name of the subject or session to process.
 * @param mfile Optional mfile parameter to provide additional settings.
 *
 * @returns Parameter dictionary
 */
function mri_make_bem_surfaces_params(
    name: string,
    mfile: InputPathType | null = null,
): MriMakeBemSurfacesParameters {
    const params = {
        "@type": "freesurfer.mri_make_bem_surfaces" as const,
        "name": name,
    };
    if (mfile !== null) {
        params["mfile"] = mfile;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function mri_make_bem_surfaces_cargs(
    params: MriMakeBemSurfacesParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("mri_make_bem_surfaces");
    cargs.push((params["name"] ?? null));
    if ((params["mfile"] ?? null) !== null) {
        cargs.push(execution.inputFile((params["mfile"] ?? null)));
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function mri_make_bem_surfaces_outputs(
    params: MriMakeBemSurfacesParameters,
    execution: Execution,
): MriMakeBemSurfacesOutputs {
    const ret: MriMakeBemSurfacesOutputs = {
        root: execution.outputFile("."),
        inner_skull_tri: execution.outputFile(["inner_skull.tri"].join('')),
        inner_skull_tmp_tri: execution.outputFile(["inner_skull_tmp.tri"].join('')),
    };
    return ret;
}


/**
 * mri_make_bem_surfaces
 *
 * Tool to create Boundary Element Method (BEM) surfaces.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `MriMakeBemSurfacesOutputs`).
 */
function mri_make_bem_surfaces_execute(
    params: MriMakeBemSurfacesParameters,
    runner: Runner | null = null,
): MriMakeBemSurfacesOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(MRI_MAKE_BEM_SURFACES_METADATA);
    params = execution.params(params)
    const cargs = mri_make_bem_surfaces_cargs(params, execution)
    const ret = mri_make_bem_surfaces_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * mri_make_bem_surfaces
 *
 * Tool to create Boundary Element Method (BEM) surfaces.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param name The name of the subject or session to process.
 * @param mfile Optional mfile parameter to provide additional settings.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `MriMakeBemSurfacesOutputs`).
 */
function mri_make_bem_surfaces(
    name: string,
    mfile: InputPathType | null = null,
    runner: Runner | null = null,
): MriMakeBemSurfacesOutputs {
    const params = mri_make_bem_surfaces_params(name, mfile)
    return mri_make_bem_surfaces_execute(params, runner);
}


export {
      MRI_MAKE_BEM_SURFACES_METADATA,
      MriMakeBemSurfacesOutputs,
      MriMakeBemSurfacesParameters,
      mri_make_bem_surfaces,
      mri_make_bem_surfaces_execute,
      mri_make_bem_surfaces_params,
};
