// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const TKSURFER_METADATA: Metadata = {
    id: "603cb4c673862d6704782330c4df67ab125e67dd.boutiques",
    name: "tksurfer",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface TksurferParameters {
    "__STYXTYPE__": "tksurfer";
    "subject_id": string;
    "hemisphere": string;
    "surface_name": string;
    "options"?: string | null | undefined;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "tksurfer": tksurfer_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `tksurfer(...)`.
 *
 * @interface
 */
interface TksurferOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


function tksurfer_params(
    subject_id: string,
    hemisphere: string,
    surface_name: string,
    options: string | null = null,
): TksurferParameters {
    /**
     * Build parameters.
    
     * @param subject_id Subject identifier
     * @param hemisphere Cortical hemisphere (e.g., lh or rh)
     * @param surface_name Surface name (e.g., inflated, sphere, white)
     * @param options Optional flags and parameters
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "tksurfer" as const,
        "subject_id": subject_id,
        "hemisphere": hemisphere,
        "surface_name": surface_name,
    };
    if (options !== null) {
        params["options"] = options;
    }
    return params;
}


function tksurfer_cargs(
    params: TksurferParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("tksurfer");
    cargs.push((params["subject_id"] ?? null));
    cargs.push((params["hemisphere"] ?? null));
    cargs.push((params["surface_name"] ?? null));
    if ((params["options"] ?? null) !== null) {
        cargs.push((params["options"] ?? null));
    }
    return cargs;
}


function tksurfer_outputs(
    params: TksurferParameters,
    execution: Execution,
): TksurferOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: TksurferOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


function tksurfer_execute(
    params: TksurferParameters,
    execution: Execution,
): TksurferOutputs {
    /**
     * 3D visualization tool for cortical surface models (part of FreeSurfer).
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `TksurferOutputs`).
     */
    params = execution.params(params)
    const cargs = tksurfer_cargs(params, execution)
    const ret = tksurfer_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function tksurfer(
    subject_id: string,
    hemisphere: string,
    surface_name: string,
    options: string | null = null,
    runner: Runner | null = null,
): TksurferOutputs {
    /**
     * 3D visualization tool for cortical surface models (part of FreeSurfer).
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param subject_id Subject identifier
     * @param hemisphere Cortical hemisphere (e.g., lh or rh)
     * @param surface_name Surface name (e.g., inflated, sphere, white)
     * @param options Optional flags and parameters
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `TksurferOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(TKSURFER_METADATA);
    const params = tksurfer_params(subject_id, hemisphere, surface_name, options)
    return tksurfer_execute(params, execution);
}


export {
      TKSURFER_METADATA,
      TksurferOutputs,
      TksurferParameters,
      tksurfer,
      tksurfer_params,
};
