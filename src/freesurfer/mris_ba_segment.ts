// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const MRIS_BA_SEGMENT_METADATA: Metadata = {
    id: "e0fadf7acd0d12f0486a76ae95700c41ad05ab2c.boutiques",
    name: "mris_BA_segment",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface MrisBaSegmentParameters {
    "__STYXTYPE__": "mris_BA_segment";
    "surface": InputPathType;
    "profiles": InputPathType;
    "prior_label": InputPathType;
    "output_label": string;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "mris_BA_segment": mris_ba_segment_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "mris_BA_segment": mris_ba_segment_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `mris_ba_segment(...)`.
 *
 * @interface
 */
interface MrisBaSegmentOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output label file
     */
    output_label_file: OutputPathType;
}


function mris_ba_segment_params(
    surface: InputPathType,
    profiles: InputPathType,
    prior_label: InputPathType,
    output_label: string,
): MrisBaSegmentParameters {
    /**
     * Build parameters.
    
     * @param surface Input surface file
     * @param profiles Input profiles file
     * @param prior_label Input prior label file
     * @param output_label Output label file
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "mris_BA_segment" as const,
        "surface": surface,
        "profiles": profiles,
        "prior_label": prior_label,
        "output_label": output_label,
    };
    return params;
}


function mris_ba_segment_cargs(
    params: MrisBaSegmentParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("mris_BA_segment");
    cargs.push(execution.inputFile((params["surface"] ?? null)));
    cargs.push(execution.inputFile((params["profiles"] ?? null)));
    cargs.push(execution.inputFile((params["prior_label"] ?? null)));
    cargs.push((params["output_label"] ?? null));
    return cargs;
}


function mris_ba_segment_outputs(
    params: MrisBaSegmentParameters,
    execution: Execution,
): MrisBaSegmentOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: MrisBaSegmentOutputs = {
        root: execution.outputFile("."),
        output_label_file: execution.outputFile([(params["output_label"] ?? null)].join('')),
    };
    return ret;
}


function mris_ba_segment_execute(
    params: MrisBaSegmentParameters,
    execution: Execution,
): MrisBaSegmentOutputs {
    /**
     * Segments a Brodmann area (MT currently) from a laminar intensity profile overlay.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `MrisBaSegmentOutputs`).
     */
    params = execution.params(params)
    const cargs = mris_ba_segment_cargs(params, execution)
    const ret = mris_ba_segment_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function mris_ba_segment(
    surface: InputPathType,
    profiles: InputPathType,
    prior_label: InputPathType,
    output_label: string,
    runner: Runner | null = null,
): MrisBaSegmentOutputs {
    /**
     * Segments a Brodmann area (MT currently) from a laminar intensity profile overlay.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param surface Input surface file
     * @param profiles Input profiles file
     * @param prior_label Input prior label file
     * @param output_label Output label file
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `MrisBaSegmentOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(MRIS_BA_SEGMENT_METADATA);
    const params = mris_ba_segment_params(surface, profiles, prior_label, output_label)
    return mris_ba_segment_execute(params, execution);
}


export {
      MRIS_BA_SEGMENT_METADATA,
      MrisBaSegmentOutputs,
      MrisBaSegmentParameters,
      mris_ba_segment,
      mris_ba_segment_params,
};
