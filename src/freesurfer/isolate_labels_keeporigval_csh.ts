// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const ISOLATE_LABELS_KEEPORIGVAL_CSH_METADATA: Metadata = {
    id: "1326bd6d6c5da13df656f1de4b71d08c81e0847b.boutiques",
    name: "isolate_labels_keeporigval.csh",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface IsolateLabelsKeeporigvalCshParameters {
    "@type"?: "freesurfer/isolate_labels_keeporigval.csh";
    "vol": InputPathType;
    "outprefix": string;
    "label"?: string | null | undefined;
    "version": boolean;
    "help": boolean;
}
type IsolateLabelsKeeporigvalCshParametersTagged = Required<Pick<IsolateLabelsKeeporigvalCshParameters, '@type'>> & IsolateLabelsKeeporigvalCshParameters;


/**
 * Output object returned when calling `IsolateLabelsKeeporigvalCshParameters(...)`.
 *
 * @interface
 */
interface IsolateLabelsKeeporigvalCshOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param vol Label volume to be analyzed
 * @param outprefix Prefix for output binary label file(s)
 * @param label The particular label to be analyzed. By default, it is ALL labels in the volume.
 * @param version Print version and exit
 * @param help Print help and exit
 *
 * @returns Parameter dictionary
 */
function isolate_labels_keeporigval_csh_params(
    vol: InputPathType,
    outprefix: string,
    label: string | null = null,
    version: boolean = false,
    help: boolean = false,
): IsolateLabelsKeeporigvalCshParametersTagged {
    const params = {
        "@type": "freesurfer/isolate_labels_keeporigval.csh" as const,
        "vol": vol,
        "outprefix": outprefix,
        "version": version,
        "help": help,
    };
    if (label !== null) {
        params["label"] = label;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function isolate_labels_keeporigval_csh_cargs(
    params: IsolateLabelsKeeporigvalCshParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("isolate_labels_keeporigval.csh");
    cargs.push(
        "--vol",
        execution.inputFile((params["vol"] ?? null))
    );
    cargs.push(
        "--outprefix",
        (params["outprefix"] ?? null)
    );
    if ((params["label"] ?? null) !== null) {
        cargs.push(
            "--l",
            (params["label"] ?? null)
        );
    }
    if ((params["version"] ?? false)) {
        cargs.push("--version");
    }
    if ((params["help"] ?? false)) {
        cargs.push("--help");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function isolate_labels_keeporigval_csh_outputs(
    params: IsolateLabelsKeeporigvalCshParameters,
    execution: Execution,
): IsolateLabelsKeeporigvalCshOutputs {
    const ret: IsolateLabelsKeeporigvalCshOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * isolate_labels_keeporigval.csh
 *
 * Separates out a particular or all labels into individual binary files keeping the original label values for subsequent shape analysis.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `IsolateLabelsKeeporigvalCshOutputs`).
 */
function isolate_labels_keeporigval_csh_execute(
    params: IsolateLabelsKeeporigvalCshParameters,
    runner: Runner | null = null,
): IsolateLabelsKeeporigvalCshOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(ISOLATE_LABELS_KEEPORIGVAL_CSH_METADATA);
    params = execution.params(params)
    const cargs = isolate_labels_keeporigval_csh_cargs(params, execution)
    const ret = isolate_labels_keeporigval_csh_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * isolate_labels_keeporigval.csh
 *
 * Separates out a particular or all labels into individual binary files keeping the original label values for subsequent shape analysis.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param vol Label volume to be analyzed
 * @param outprefix Prefix for output binary label file(s)
 * @param label The particular label to be analyzed. By default, it is ALL labels in the volume.
 * @param version Print version and exit
 * @param help Print help and exit
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `IsolateLabelsKeeporigvalCshOutputs`).
 */
function isolate_labels_keeporigval_csh(
    vol: InputPathType,
    outprefix: string,
    label: string | null = null,
    version: boolean = false,
    help: boolean = false,
    runner: Runner | null = null,
): IsolateLabelsKeeporigvalCshOutputs {
    const params = isolate_labels_keeporigval_csh_params(vol, outprefix, label, version, help)
    return isolate_labels_keeporigval_csh_execute(params, runner);
}


export {
      ISOLATE_LABELS_KEEPORIGVAL_CSH_METADATA,
      IsolateLabelsKeeporigvalCshOutputs,
      isolate_labels_keeporigval_csh,
      isolate_labels_keeporigval_csh_execute,
      isolate_labels_keeporigval_csh_params,
};
