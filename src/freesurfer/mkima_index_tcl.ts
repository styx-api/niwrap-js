// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const MKIMA_INDEX_TCL_METADATA: Metadata = {
    id: "c105809b402206036812e673c076cf9989e47ed5.boutiques",
    name: "mkima_index.tcl",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface MkimaIndexTclParameters {
    "__STYXTYPE__": "mkima_index.tcl";
    "input_file": InputPathType;
    "output_flag": boolean;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "mkima_index.tcl": mkima_index_tcl_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "mkima_index.tcl": mkima_index_tcl_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `mkima_index_tcl(...)`.
 *
 * @interface
 */
interface MkimaIndexTclOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output file resulting from mkima index operations.
     */
    output_file: OutputPathType;
}


function mkima_index_tcl_params(
    input_file: InputPathType,
    output_flag: boolean = false,
): MkimaIndexTclParameters {
    /**
     * Build parameters.
    
     * @param input_file Input file for mkima index operations.
     * @param output_flag Flag to specify output for mkima index operation.
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "mkima_index.tcl" as const,
        "input_file": input_file,
        "output_flag": output_flag,
    };
    return params;
}


function mkima_index_tcl_cargs(
    params: MkimaIndexTclParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("mkima_index.tcl");
    cargs.push(execution.inputFile((params["input_file"] ?? null)));
    if ((params["output_flag"] ?? null)) {
        cargs.push("-o");
    }
    return cargs;
}


function mkima_index_tcl_outputs(
    params: MkimaIndexTclParameters,
    execution: Execution,
): MkimaIndexTclOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: MkimaIndexTclOutputs = {
        root: execution.outputFile("."),
        output_file: execution.outputFile([path.basename((params["input_file"] ?? null)), "_index_output"].join('')),
    };
    return ret;
}


function mkima_index_tcl_execute(
    params: MkimaIndexTclParameters,
    execution: Execution,
): MkimaIndexTclOutputs {
    /**
     * A command-line tool for handling mkima index operations.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `MkimaIndexTclOutputs`).
     */
    params = execution.params(params)
    const cargs = mkima_index_tcl_cargs(params, execution)
    const ret = mkima_index_tcl_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function mkima_index_tcl(
    input_file: InputPathType,
    output_flag: boolean = false,
    runner: Runner | null = null,
): MkimaIndexTclOutputs {
    /**
     * A command-line tool for handling mkima index operations.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param input_file Input file for mkima index operations.
     * @param output_flag Flag to specify output for mkima index operation.
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `MkimaIndexTclOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(MKIMA_INDEX_TCL_METADATA);
    const params = mkima_index_tcl_params(input_file, output_flag)
    return mkima_index_tcl_execute(params, execution);
}


export {
      MKIMA_INDEX_TCL_METADATA,
      MkimaIndexTclOutputs,
      MkimaIndexTclParameters,
      mkima_index_tcl,
      mkima_index_tcl_params,
};
