// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const POSSUM_PLOT_PY_METADATA: Metadata = {
    id: "bd2b6b8b85bcd1d3167b1b04cdbf739929894a10.boutiques",
    name: "possum_plot.py",
    package: "fsl",
    container_image_tag: "brainlife/fsl:6.0.4-patched2",
};


interface PossumPlotPyParameters {
    "@type": "fsl.possum_plot.py";
    "input_file": InputPathType;
    "output_basename": string;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "fsl.possum_plot.py": possum_plot_py_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "fsl.possum_plot.py": possum_plot_py_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `possum_plot_py(...)`.
 *
 * @interface
 */
interface PossumPlotPyOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output plot images from POSSUM
     */
    output_plots: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param input_file Input file from POSSUM simulation (e.g. simulation_results.txt)
 * @param output_basename Basename for output files (e.g. plot_output)
 *
 * @returns Parameter dictionary
 */
function possum_plot_py_params(
    input_file: InputPathType,
    output_basename: string,
): PossumPlotPyParameters {
    const params = {
        "@type": "fsl.possum_plot.py" as const,
        "input_file": input_file,
        "output_basename": output_basename,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function possum_plot_py_cargs(
    params: PossumPlotPyParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("possum_plot.py");
    cargs.push(execution.inputFile((params["input_file"] ?? null)));
    cargs.push((params["output_basename"] ?? null));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function possum_plot_py_outputs(
    params: PossumPlotPyParameters,
    execution: Execution,
): PossumPlotPyOutputs {
    const ret: PossumPlotPyOutputs = {
        root: execution.outputFile("."),
        output_plots: execution.outputFile([(params["output_basename"] ?? null), "_*.png"].join('')),
    };
    return ret;
}


/**
 * possum_plot.py
 *
 * Tool for plotting results from POSSUM simulations in FSL.
 *
 * Author: FMRIB Analysis Group, University of Oxford
 *
 * URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `PossumPlotPyOutputs`).
 */
function possum_plot_py_execute(
    params: PossumPlotPyParameters,
    runner: Runner | null = null,
): PossumPlotPyOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(POSSUM_PLOT_PY_METADATA);
    params = execution.params(params)
    const cargs = possum_plot_py_cargs(params, execution)
    const ret = possum_plot_py_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * possum_plot.py
 *
 * Tool for plotting results from POSSUM simulations in FSL.
 *
 * Author: FMRIB Analysis Group, University of Oxford
 *
 * URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
 *
 * @param input_file Input file from POSSUM simulation (e.g. simulation_results.txt)
 * @param output_basename Basename for output files (e.g. plot_output)
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `PossumPlotPyOutputs`).
 */
function possum_plot_py(
    input_file: InputPathType,
    output_basename: string,
    runner: Runner | null = null,
): PossumPlotPyOutputs {
    const params = possum_plot_py_params(input_file, output_basename)
    return possum_plot_py_execute(params, runner);
}


export {
      POSSUM_PLOT_PY_METADATA,
      PossumPlotPyOutputs,
      PossumPlotPyParameters,
      possum_plot_py,
      possum_plot_py_execute,
      possum_plot_py_params,
};
