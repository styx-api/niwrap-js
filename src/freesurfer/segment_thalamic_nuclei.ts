// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const SEGMENT_THALAMIC_NUCLEI_METADATA: Metadata = {
    id: "6d4f3bd43ea02912a67101dc7d2bc3abdee4ebd2.boutiques",
    name: "SegmentThalamicNuclei",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface SegmentThalamicNucleiParameters {
    "__STYXTYPE__": "SegmentThalamicNuclei";
    "t1_image": InputPathType;
    "output_dir": string;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "SegmentThalamicNuclei": segment_thalamic_nuclei_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "SegmentThalamicNuclei": segment_thalamic_nuclei_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `segment_thalamic_nuclei(...)`.
 *
 * @interface
 */
interface SegmentThalamicNucleiOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * The output segmentation file of thalamic nuclei.
     */
    seg_output: OutputPathType;
}


function segment_thalamic_nuclei_params(
    t1_image: InputPathType,
    output_dir: string,
): SegmentThalamicNucleiParameters {
    /**
     * Build parameters.
    
     * @param t1_image The T1-weighted image to process.
     * @param output_dir Directory to store segmentation results.
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "SegmentThalamicNuclei" as const,
        "t1_image": t1_image,
        "output_dir": output_dir,
    };
    return params;
}


function segment_thalamic_nuclei_cargs(
    params: SegmentThalamicNucleiParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("SegmentThalamicNuclei");
    cargs.push(execution.inputFile((params["t1_image"] ?? null)));
    cargs.push((params["output_dir"] ?? null));
    return cargs;
}


function segment_thalamic_nuclei_outputs(
    params: SegmentThalamicNucleiParameters,
    execution: Execution,
): SegmentThalamicNucleiOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: SegmentThalamicNucleiOutputs = {
        root: execution.outputFile("."),
        seg_output: execution.outputFile([(params["output_dir"] ?? null), "/thalamic_nuclei_seg.nii.gz"].join('')),
    };
    return ret;
}


function segment_thalamic_nuclei_execute(
    params: SegmentThalamicNucleiParameters,
    execution: Execution,
): SegmentThalamicNucleiOutputs {
    /**
     * A tool for segmenting thalamic nuclei using FreeSurfer.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `SegmentThalamicNucleiOutputs`).
     */
    params = execution.params(params)
    const cargs = segment_thalamic_nuclei_cargs(params, execution)
    const ret = segment_thalamic_nuclei_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function segment_thalamic_nuclei(
    t1_image: InputPathType,
    output_dir: string,
    runner: Runner | null = null,
): SegmentThalamicNucleiOutputs {
    /**
     * A tool for segmenting thalamic nuclei using FreeSurfer.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param t1_image The T1-weighted image to process.
     * @param output_dir Directory to store segmentation results.
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `SegmentThalamicNucleiOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(SEGMENT_THALAMIC_NUCLEI_METADATA);
    const params = segment_thalamic_nuclei_params(t1_image, output_dir)
    return segment_thalamic_nuclei_execute(params, execution);
}


export {
      SEGMENT_THALAMIC_NUCLEI_METADATA,
      SegmentThalamicNucleiOutputs,
      SegmentThalamicNucleiParameters,
      segment_thalamic_nuclei,
      segment_thalamic_nuclei_params,
};
