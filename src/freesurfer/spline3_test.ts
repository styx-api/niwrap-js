// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const SPLINE3_TEST_METADATA: Metadata = {
    id: "b6736dedb2a1a615decf03f5044e961689f145ae.boutiques",
    name: "Spline3_test",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface Spline3TestParameters {
    "@type": "freesurfer.Spline3_test";
    "x_values": Array<number>;
    "y_values": Array<number>;
    "x_new_values": Array<number>;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.Spline3_test": spline3_test_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "freesurfer.Spline3_test": spline3_test_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `spline3_test(...)`.
 *
 * @interface
 */
interface Spline3TestOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Interpolated y values at new x positions.
     */
    output_ynew: OutputPathType;
    /**
     * Array format of interpolated y values at new x positions.
     */
    output_ynewarr: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param x_values Original x values for interpolation.
 * @param y_values Original y values corresponding to x values.
 * @param x_new_values New x values where interpolation is evaluated.
 *
 * @returns Parameter dictionary
 */
function spline3_test_params(
    x_values: Array<number>,
    y_values: Array<number>,
    x_new_values: Array<number>,
): Spline3TestParameters {
    const params = {
        "@type": "freesurfer.Spline3_test" as const,
        "x_values": x_values,
        "y_values": y_values,
        "x_new_values": x_new_values,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function spline3_test_cargs(
    params: Spline3TestParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("Spline3_test");
    cargs.push(...(params["x_values"] ?? null).map(String));
    cargs.push(...(params["y_values"] ?? null).map(String));
    cargs.push(...(params["x_new_values"] ?? null).map(String));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function spline3_test_outputs(
    params: Spline3TestParameters,
    execution: Execution,
): Spline3TestOutputs {
    const ret: Spline3TestOutputs = {
        root: execution.outputFile("."),
        output_ynew: execution.outputFile(["Ynew.txt"].join('')),
        output_ynewarr: execution.outputFile(["Ynewarr.txt"].join('')),
    };
    return ret;
}


/**
 * Spline3_test
 *
 * A tool for cubic spline interpolation.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `Spline3TestOutputs`).
 */
function spline3_test_execute(
    params: Spline3TestParameters,
    runner: Runner | null = null,
): Spline3TestOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(SPLINE3_TEST_METADATA);
    params = execution.params(params)
    const cargs = spline3_test_cargs(params, execution)
    const ret = spline3_test_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * Spline3_test
 *
 * A tool for cubic spline interpolation.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param x_values Original x values for interpolation.
 * @param y_values Original y values corresponding to x values.
 * @param x_new_values New x values where interpolation is evaluated.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `Spline3TestOutputs`).
 */
function spline3_test(
    x_values: Array<number>,
    y_values: Array<number>,
    x_new_values: Array<number>,
    runner: Runner | null = null,
): Spline3TestOutputs {
    const params = spline3_test_params(x_values, y_values, x_new_values)
    return spline3_test_execute(params, runner);
}


export {
      SPLINE3_TEST_METADATA,
      Spline3TestOutputs,
      Spline3TestParameters,
      spline3_test,
      spline3_test_execute,
      spline3_test_params,
};
