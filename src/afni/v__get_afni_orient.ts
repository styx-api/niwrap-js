// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__GET_AFNI_ORIENT_METADATA: Metadata = {
    id: "f8dbdeb31f2cb6c6cd4aea993002d6be907c16b0.boutiques",
    name: "@GetAfniOrient",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VGetAfniOrientParameters {
    "__STYXTYPE__": "@GetAfniOrient";
    "exploratory": boolean;
    "infile": InputPathType;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "@GetAfniOrient": v__get_afni_orient_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "@GetAfniOrient": v__get_afni_orient_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__get_afni_orient(...)`.
 *
 * @interface
 */
interface VGetAfniOrientOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * File containing the orientation code
     */
    output_orient_code: OutputPathType;
}


function v__get_afni_orient_params(
    infile: InputPathType,
    exploratory: boolean = false,
): VGetAfniOrientParameters {
    /**
     * Build parameters.
    
     * @param infile Input AFNI dataset (e.g. Hello+orig.HEAD)
     * @param exploratory Exploratory flag for additional functionalities
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "@GetAfniOrient" as const,
        "exploratory": exploratory,
        "infile": infile,
    };
    return params;
}


function v__get_afni_orient_cargs(
    params: VGetAfniOrientParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("@GetAfniOrient");
    if ((params["exploratory"] ?? null)) {
        cargs.push("-exp");
    }
    cargs.push(execution.inputFile((params["infile"] ?? null)));
    return cargs;
}


function v__get_afni_orient_outputs(
    params: VGetAfniOrientParameters,
    execution: Execution,
): VGetAfniOrientOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: VGetAfniOrientOutputs = {
        root: execution.outputFile("."),
        output_orient_code: execution.outputFile([path.basename((params["infile"] ?? null)), "_orient_code.txt"].join('')),
    };
    return ret;
}


function v__get_afni_orient_execute(
    params: VGetAfniOrientParameters,
    execution: Execution,
): VGetAfniOrientOutputs {
    /**
     * Returns the orient code of AFNI datasets.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `VGetAfniOrientOutputs`).
     */
    params = execution.params(params)
    const cargs = v__get_afni_orient_cargs(params, execution)
    const ret = v__get_afni_orient_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function v__get_afni_orient(
    infile: InputPathType,
    exploratory: boolean = false,
    runner: Runner | null = null,
): VGetAfniOrientOutputs {
    /**
     * Returns the orient code of AFNI datasets.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param infile Input AFNI dataset (e.g. Hello+orig.HEAD)
     * @param exploratory Exploratory flag for additional functionalities
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `VGetAfniOrientOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__GET_AFNI_ORIENT_METADATA);
    const params = v__get_afni_orient_params(infile, exploratory)
    return v__get_afni_orient_execute(params, execution);
}


export {
      VGetAfniOrientOutputs,
      VGetAfniOrientParameters,
      V__GET_AFNI_ORIENT_METADATA,
      v__get_afni_orient,
      v__get_afni_orient_params,
};
