// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const GROUPSTATSDIFF_METADATA: Metadata = {
    id: "154b9529a21a14783c40c5840307556a8028a848.boutiques",
    name: "groupstatsdiff",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface GroupstatsdiffParameters {
    "@type": "freesurfer.groupstatsdiff";
    "group1_dir": string;
    "group2_dir": string;
    "output_dir": string;
    "no_maps": boolean;
    "osgm": boolean;
    "no_common": boolean;
    "allow_subj_diff": boolean;
    "no_area": boolean;
    "no_volume": boolean;
    "no_ba": boolean;
    "no_aparcstats": boolean;
    "no_asegstats": boolean;
    "no_wparcstats": boolean;
    "no_stats": boolean;
    "no_prune": boolean;
    "fwhm_value"?: number | null | undefined;
    "subjects_dir1"?: string | null | undefined;
    "subjects_dir2"?: string | null | undefined;
    "no_dice": boolean;
    "dice_ctab"?: string | null | undefined;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.groupstatsdiff": groupstatsdiff_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `groupstatsdiff(...)`.
 *
 * @interface
 */
interface GroupstatsdiffOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param group1_dir Output folder from groupstats for group 1
 * @param group2_dir Output folder from groupstats for group 2
 * @param output_dir Output folder for the difference analysis
 * @param no_maps Only analyze ROI data, no maps
 * @param osgm Use OSGM instead of native FSGD
 * @param no_common Do not select common segments when running stattablediff
 * @param allow_subj_diff Allow list of subjects to be different between the two analyses
 * @param no_area Do not compute area differences
 * @param no_volume Do not compute volume differences
 * @param no_ba Do not compute differences for BA labels
 * @param no_aparcstats Do not do aparcstats
 * @param no_asegstats Do not do asegstats
 * @param no_wparcstats Do not do wmparcstats
 * @param no_stats Do not do any ROI stats
 * @param no_prune Do not prune when running mri_glmfit
 * @param fwhm_value Override the FWHM from group analysis
 * @param subjects_dir1 Subjects directory 1 for computing dice (default is parent dir of groupdir)
 * @param subjects_dir2 Subjects directory 2 for computing dice (default is parent dir of groupdir)
 * @param no_dice Do not compute dice
 * @param dice_ctab CTAB to use for dice computation (default is /usr/local/freesurfer/ASegStatsLUT.txt)
 *
 * @returns Parameter dictionary
 */
function groupstatsdiff_params(
    group1_dir: string,
    group2_dir: string,
    output_dir: string,
    no_maps: boolean = false,
    osgm: boolean = false,
    no_common: boolean = false,
    allow_subj_diff: boolean = false,
    no_area: boolean = false,
    no_volume: boolean = false,
    no_ba: boolean = false,
    no_aparcstats: boolean = false,
    no_asegstats: boolean = false,
    no_wparcstats: boolean = false,
    no_stats: boolean = false,
    no_prune: boolean = false,
    fwhm_value: number | null = null,
    subjects_dir1: string | null = null,
    subjects_dir2: string | null = null,
    no_dice: boolean = false,
    dice_ctab: string | null = null,
): GroupstatsdiffParameters {
    const params = {
        "@type": "freesurfer.groupstatsdiff" as const,
        "group1_dir": group1_dir,
        "group2_dir": group2_dir,
        "output_dir": output_dir,
        "no_maps": no_maps,
        "osgm": osgm,
        "no_common": no_common,
        "allow_subj_diff": allow_subj_diff,
        "no_area": no_area,
        "no_volume": no_volume,
        "no_ba": no_ba,
        "no_aparcstats": no_aparcstats,
        "no_asegstats": no_asegstats,
        "no_wparcstats": no_wparcstats,
        "no_stats": no_stats,
        "no_prune": no_prune,
        "no_dice": no_dice,
    };
    if (fwhm_value !== null) {
        params["fwhm_value"] = fwhm_value;
    }
    if (subjects_dir1 !== null) {
        params["subjects_dir1"] = subjects_dir1;
    }
    if (subjects_dir2 !== null) {
        params["subjects_dir2"] = subjects_dir2;
    }
    if (dice_ctab !== null) {
        params["dice_ctab"] = dice_ctab;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function groupstatsdiff_cargs(
    params: GroupstatsdiffParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("groupstatsdiff");
    cargs.push(
        "-g1",
        (params["group1_dir"] ?? null)
    );
    cargs.push(
        "-g2",
        (params["group2_dir"] ?? null)
    );
    cargs.push(
        "-o",
        (params["output_dir"] ?? null)
    );
    if ((params["no_maps"] ?? null)) {
        cargs.push("--no-maps");
    }
    if ((params["osgm"] ?? null)) {
        cargs.push("--osgm");
    }
    if ((params["no_common"] ?? null)) {
        cargs.push("--no-common");
    }
    if ((params["allow_subj_diff"] ?? null)) {
        cargs.push("--allow-subj-diff");
    }
    if ((params["no_area"] ?? null)) {
        cargs.push("--no-area");
    }
    if ((params["no_volume"] ?? null)) {
        cargs.push("--no-volume");
    }
    if ((params["no_ba"] ?? null)) {
        cargs.push("--no-ba");
    }
    if ((params["no_aparcstats"] ?? null)) {
        cargs.push("--no-aparcstats");
    }
    if ((params["no_asegstats"] ?? null)) {
        cargs.push("--no-asegstats");
    }
    if ((params["no_wparcstats"] ?? null)) {
        cargs.push("--no-wparcstats");
    }
    if ((params["no_stats"] ?? null)) {
        cargs.push("--no-stats");
    }
    if ((params["no_prune"] ?? null)) {
        cargs.push("--no-prune");
    }
    if ((params["fwhm_value"] ?? null) !== null) {
        cargs.push(
            "--fwhm",
            String((params["fwhm_value"] ?? null))
        );
    }
    if ((params["subjects_dir1"] ?? null) !== null) {
        cargs.push(
            "--sd1",
            (params["subjects_dir1"] ?? null)
        );
    }
    if ((params["subjects_dir2"] ?? null) !== null) {
        cargs.push(
            "--sd2",
            (params["subjects_dir2"] ?? null)
        );
    }
    if ((params["no_dice"] ?? null)) {
        cargs.push("--no-dice");
    }
    if ((params["dice_ctab"] ?? null) !== null) {
        cargs.push(
            "--dice-ctab",
            (params["dice_ctab"] ?? null)
        );
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function groupstatsdiff_outputs(
    params: GroupstatsdiffParameters,
    execution: Execution,
): GroupstatsdiffOutputs {
    const ret: GroupstatsdiffOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * groupstatsdiff
 *
 * Evaluate the differences between two groupstats outputs from recon-all analyses in Freesurfer.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `GroupstatsdiffOutputs`).
 */
function groupstatsdiff_execute(
    params: GroupstatsdiffParameters,
    runner: Runner | null = null,
): GroupstatsdiffOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(GROUPSTATSDIFF_METADATA);
    params = execution.params(params)
    const cargs = groupstatsdiff_cargs(params, execution)
    const ret = groupstatsdiff_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * groupstatsdiff
 *
 * Evaluate the differences between two groupstats outputs from recon-all analyses in Freesurfer.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param group1_dir Output folder from groupstats for group 1
 * @param group2_dir Output folder from groupstats for group 2
 * @param output_dir Output folder for the difference analysis
 * @param no_maps Only analyze ROI data, no maps
 * @param osgm Use OSGM instead of native FSGD
 * @param no_common Do not select common segments when running stattablediff
 * @param allow_subj_diff Allow list of subjects to be different between the two analyses
 * @param no_area Do not compute area differences
 * @param no_volume Do not compute volume differences
 * @param no_ba Do not compute differences for BA labels
 * @param no_aparcstats Do not do aparcstats
 * @param no_asegstats Do not do asegstats
 * @param no_wparcstats Do not do wmparcstats
 * @param no_stats Do not do any ROI stats
 * @param no_prune Do not prune when running mri_glmfit
 * @param fwhm_value Override the FWHM from group analysis
 * @param subjects_dir1 Subjects directory 1 for computing dice (default is parent dir of groupdir)
 * @param subjects_dir2 Subjects directory 2 for computing dice (default is parent dir of groupdir)
 * @param no_dice Do not compute dice
 * @param dice_ctab CTAB to use for dice computation (default is /usr/local/freesurfer/ASegStatsLUT.txt)
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `GroupstatsdiffOutputs`).
 */
function groupstatsdiff(
    group1_dir: string,
    group2_dir: string,
    output_dir: string,
    no_maps: boolean = false,
    osgm: boolean = false,
    no_common: boolean = false,
    allow_subj_diff: boolean = false,
    no_area: boolean = false,
    no_volume: boolean = false,
    no_ba: boolean = false,
    no_aparcstats: boolean = false,
    no_asegstats: boolean = false,
    no_wparcstats: boolean = false,
    no_stats: boolean = false,
    no_prune: boolean = false,
    fwhm_value: number | null = null,
    subjects_dir1: string | null = null,
    subjects_dir2: string | null = null,
    no_dice: boolean = false,
    dice_ctab: string | null = null,
    runner: Runner | null = null,
): GroupstatsdiffOutputs {
    const params = groupstatsdiff_params(group1_dir, group2_dir, output_dir, no_maps, osgm, no_common, allow_subj_diff, no_area, no_volume, no_ba, no_aparcstats, no_asegstats, no_wparcstats, no_stats, no_prune, fwhm_value, subjects_dir1, subjects_dir2, no_dice, dice_ctab)
    return groupstatsdiff_execute(params, runner);
}


export {
      GROUPSTATSDIFF_METADATA,
      GroupstatsdiffOutputs,
      GroupstatsdiffParameters,
      groupstatsdiff,
      groupstatsdiff_execute,
      groupstatsdiff_params,
};
