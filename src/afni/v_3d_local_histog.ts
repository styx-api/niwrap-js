// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V_3D_LOCAL_HISTOG_METADATA: Metadata = {
    id: "29b9c068d0dd2ea7db278ff9e7df60f9fb5c6103.boutiques",
    name: "3dLocalHistog",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface V3dLocalHistogParameters {
    "@type"?: "afni/3dLocalHistog";
    "nbhd_option"?: string | null | undefined;
    "prefix": string;
    "hsave"?: string | null | undefined;
    "lab_file"?: InputPathType | null | undefined;
    "exclude"?: Array<string> | null | undefined;
    "exc_nonlab": boolean;
    "mincount"?: number | null | undefined;
    "probability": boolean;
    "quiet": boolean;
    "input_datasets": Array<InputPathType>;
}
type V3dLocalHistogParametersTagged = Required<Pick<V3dLocalHistogParameters, '@type'>> & V3dLocalHistogParameters;


/**
 * Output object returned when calling `V3dLocalHistogParameters(...)`.
 *
 * @interface
 */
interface V3dLocalHistogOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * The output dataset with the specified prefix
     */
    output_dataset_head: OutputPathType;
    /**
     * The output dataset with the specified prefix
     */
    output_dataset_brik: OutputPathType;
    /**
     * The overall histogram saved into the specified file
     */
    histogram_file: OutputPathType | null;
}


/**
 * Build parameters.
 *
 * @param prefix Use string 'ppp' as the prefix for the output dataset.
 * @param input_datasets Input dataset(s) for the 3dLocalHistog tool
 * @param nbhd_option Defines the region around each voxel to be used for the statistics calculation. Available formats: 'SPHERE(r)', 'RECT(a,b,c)', 'RHDD(a)', 'TOHD(a)'.
 * @param hsave Save the overall histogram into file 'sss'. This file will have 2 columns: value and count.
 * @param lab_file Use file 'LL' as a label file.
 * @param exclude Exclude values from 'a' to 'b' from the counting. This option can be used more than once.
 * @param exc_nonlab If '-lab_file' is used, then exclude all values that are NOT in the label file (except for 0).
 * @param mincount Exclude values which appear in the overall histogram fewer than 'mm' times.
 * @param probability Convert each count to a probability by dividing by the total number of counts at each voxel.
 * @param quiet Stop the highly informative progress reports.
 *
 * @returns Parameter dictionary
 */
function v_3d_local_histog_params(
    prefix: string,
    input_datasets: Array<InputPathType>,
    nbhd_option: string | null = null,
    hsave: string | null = null,
    lab_file: InputPathType | null = null,
    exclude: Array<string> | null = null,
    exc_nonlab: boolean = false,
    mincount: number | null = null,
    probability: boolean = false,
    quiet: boolean = false,
): V3dLocalHistogParametersTagged {
    const params = {
        "@type": "afni/3dLocalHistog" as const,
        "prefix": prefix,
        "exc_nonlab": exc_nonlab,
        "probability": probability,
        "quiet": quiet,
        "input_datasets": input_datasets,
    };
    if (nbhd_option !== null) {
        params["nbhd_option"] = nbhd_option;
    }
    if (hsave !== null) {
        params["hsave"] = hsave;
    }
    if (lab_file !== null) {
        params["lab_file"] = lab_file;
    }
    if (exclude !== null) {
        params["exclude"] = exclude;
    }
    if (mincount !== null) {
        params["mincount"] = mincount;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v_3d_local_histog_cargs(
    params: V3dLocalHistogParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("3dLocalHistog");
    if ((params["nbhd_option"] ?? null) !== null) {
        cargs.push(
            "-nbhd",
            (params["nbhd_option"] ?? null)
        );
    }
    cargs.push(
        "-prefix",
        (params["prefix"] ?? null)
    );
    if ((params["hsave"] ?? null) !== null) {
        cargs.push(
            "-hsave",
            (params["hsave"] ?? null)
        );
    }
    if ((params["lab_file"] ?? null) !== null) {
        cargs.push(
            "-lab_file",
            execution.inputFile((params["lab_file"] ?? null))
        );
    }
    if ((params["exclude"] ?? null) !== null) {
        cargs.push(
            "-exclude",
            ...(params["exclude"] ?? null)
        );
    }
    if ((params["exc_nonlab"] ?? false)) {
        cargs.push("-excNONLAB");
    }
    if ((params["mincount"] ?? null) !== null) {
        cargs.push(
            "-mincount",
            String((params["mincount"] ?? null))
        );
    }
    if ((params["probability"] ?? false)) {
        cargs.push("-prob");
    }
    if ((params["quiet"] ?? false)) {
        cargs.push("-quiet");
    }
    cargs.push(...(params["input_datasets"] ?? null).map(f => execution.inputFile(f)));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v_3d_local_histog_outputs(
    params: V3dLocalHistogParameters,
    execution: Execution,
): V3dLocalHistogOutputs {
    const ret: V3dLocalHistogOutputs = {
        root: execution.outputFile("."),
        output_dataset_head: execution.outputFile([(params["prefix"] ?? null), "+orig.HEAD"].join('')),
        output_dataset_brik: execution.outputFile([(params["prefix"] ?? null), "+orig.BRIK"].join('')),
        histogram_file: ((params["hsave"] ?? null) !== null) ? execution.outputFile([(params["hsave"] ?? null)].join('')) : null,
    };
    return ret;
}


/**
 * 3dLocalHistog
 *
 * This program computes a local histogram at each voxel in the input datasets.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `V3dLocalHistogOutputs`).
 */
function v_3d_local_histog_execute(
    params: V3dLocalHistogParameters,
    runner: Runner | null = null,
): V3dLocalHistogOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V_3D_LOCAL_HISTOG_METADATA);
    params = execution.params(params)
    const cargs = v_3d_local_histog_cargs(params, execution)
    const ret = v_3d_local_histog_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * 3dLocalHistog
 *
 * This program computes a local histogram at each voxel in the input datasets.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param prefix Use string 'ppp' as the prefix for the output dataset.
 * @param input_datasets Input dataset(s) for the 3dLocalHistog tool
 * @param nbhd_option Defines the region around each voxel to be used for the statistics calculation. Available formats: 'SPHERE(r)', 'RECT(a,b,c)', 'RHDD(a)', 'TOHD(a)'.
 * @param hsave Save the overall histogram into file 'sss'. This file will have 2 columns: value and count.
 * @param lab_file Use file 'LL' as a label file.
 * @param exclude Exclude values from 'a' to 'b' from the counting. This option can be used more than once.
 * @param exc_nonlab If '-lab_file' is used, then exclude all values that are NOT in the label file (except for 0).
 * @param mincount Exclude values which appear in the overall histogram fewer than 'mm' times.
 * @param probability Convert each count to a probability by dividing by the total number of counts at each voxel.
 * @param quiet Stop the highly informative progress reports.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `V3dLocalHistogOutputs`).
 */
function v_3d_local_histog(
    prefix: string,
    input_datasets: Array<InputPathType>,
    nbhd_option: string | null = null,
    hsave: string | null = null,
    lab_file: InputPathType | null = null,
    exclude: Array<string> | null = null,
    exc_nonlab: boolean = false,
    mincount: number | null = null,
    probability: boolean = false,
    quiet: boolean = false,
    runner: Runner | null = null,
): V3dLocalHistogOutputs {
    const params = v_3d_local_histog_params(prefix, input_datasets, nbhd_option, hsave, lab_file, exclude, exc_nonlab, mincount, probability, quiet)
    return v_3d_local_histog_execute(params, runner);
}


export {
      V3dLocalHistogOutputs,
      V_3D_LOCAL_HISTOG_METADATA,
      v_3d_local_histog,
      v_3d_local_histog_execute,
      v_3d_local_histog_params,
};
