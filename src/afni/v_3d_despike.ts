// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V_3D_DESPIKE_METADATA: Metadata = {
    id: "25879c99c0ec4a24f082b425a60ad7b7f6e906a2.boutiques",
    name: "3dDespike",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface V3dDespikeParameters {
    "@type": "afni.3dDespike";
    "prefix"?: string | null | undefined;
    "in_file": InputPathType;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "afni.3dDespike": v_3d_despike_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "afni.3dDespike": v_3d_despike_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v_3d_despike(...)`.
 *
 * @interface
 */
interface V3dDespikeOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output file.
     */
    out_file: OutputPathType | null;
}


/**
 * Build parameters.
 *
 * @param in_file Input file to 3ddespike.
 * @param prefix Prefix for output file.
 *
 * @returns Parameter dictionary
 */
function v_3d_despike_params(
    in_file: InputPathType,
    prefix: string | null = null,
): V3dDespikeParameters {
    const params = {
        "@type": "afni.3dDespike" as const,
        "in_file": in_file,
    };
    if (prefix !== null) {
        params["prefix"] = prefix;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v_3d_despike_cargs(
    params: V3dDespikeParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("3dDespike");
    if ((params["prefix"] ?? null) !== null) {
        cargs.push(
            "-prefix",
            (params["prefix"] ?? null)
        );
    }
    cargs.push(execution.inputFile((params["in_file"] ?? null)));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v_3d_despike_outputs(
    params: V3dDespikeParameters,
    execution: Execution,
): V3dDespikeOutputs {
    const ret: V3dDespikeOutputs = {
        root: execution.outputFile("."),
        out_file: ((params["prefix"] ?? null) !== null) ? execution.outputFile([(params["prefix"] ?? null)].join('')) : null,
    };
    return ret;
}


/**
 * Removes 'spikes' from the 3D+time input dataset and writes a new dataset with the spike values replaced by something more pleasing to the eye.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param execution The execution object.
 *
 * @returns NamedTuple of outputs (described in `V3dDespikeOutputs`).
 */
function v_3d_despike_execute(
    params: V3dDespikeParameters,
    execution: Execution,
): V3dDespikeOutputs {
    params = execution.params(params)
    const cargs = v_3d_despike_cargs(params, execution)
    const ret = v_3d_despike_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * Removes 'spikes' from the 3D+time input dataset and writes a new dataset with the spike values replaced by something more pleasing to the eye.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param in_file Input file to 3ddespike.
 * @param prefix Prefix for output file.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `V3dDespikeOutputs`).
 */
function v_3d_despike(
    in_file: InputPathType,
    prefix: string | null = null,
    runner: Runner | null = null,
): V3dDespikeOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V_3D_DESPIKE_METADATA);
    const params = v_3d_despike_params(in_file, prefix)
    return v_3d_despike_execute(params, execution);
}


export {
      V3dDespikeOutputs,
      V3dDespikeParameters,
      V_3D_DESPIKE_METADATA,
      v_3d_despike,
      v_3d_despike_cargs,
      v_3d_despike_execute,
      v_3d_despike_outputs,
      v_3d_despike_params,
};
