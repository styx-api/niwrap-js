// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__EXAMINE_GEN_FEAT_DISTS_METADATA: Metadata = {
    id: "4760e5b0736b09b09bbfea2061b56fd6ac5a0f99.boutiques",
    name: "@ExamineGenFeatDists",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VExamineGenFeatDistsParameters {
    "@type": "afni.@ExamineGenFeatDists";
    "features_dir": string;
    "wildcards"?: Array<string> | null | undefined;
    "output_suffix"?: string | null | undefined;
    "exclude_features"?: Array<string> | null | undefined;
    "exclude_classes"?: Array<string> | null | undefined;
    "output_dir"?: string | null | undefined;
    "panels_horizontal"?: number | null | undefined;
    "echo": boolean;
    "help": boolean;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "afni.@ExamineGenFeatDists": v__examine_gen_feat_dists_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__examine_gen_feat_dists(...)`.
 *
 * @interface
 */
interface VExamineGenFeatDistsOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param features_dir Output directory of 3dGenFeatDists
 * @param wildcards Wildcards used to select feature histograms under the directory.
 * @param output_suffix Output suffix, added to output images. Default is 'nosuff'.
 * @param exclude_features Exclude following features. String matching is partial.
 * @param exclude_classes Exclude following classes. String matching is partial.
 * @param output_dir Output directory, default is the same as -fdir.
 * @param panels_horizontal Set number of panels along the horizontal direction.
 * @param echo Set echo.
 * @param help Display help message.
 *
 * @returns Parameter dictionary
 */
function v__examine_gen_feat_dists_params(
    features_dir: string,
    wildcards: Array<string> | null = null,
    output_suffix: string | null = null,
    exclude_features: Array<string> | null = null,
    exclude_classes: Array<string> | null = null,
    output_dir: string | null = null,
    panels_horizontal: number | null = null,
    echo: boolean = false,
    help: boolean = false,
): VExamineGenFeatDistsParameters {
    const params = {
        "@type": "afni.@ExamineGenFeatDists" as const,
        "features_dir": features_dir,
        "echo": echo,
        "help": help,
    };
    if (wildcards !== null) {
        params["wildcards"] = wildcards;
    }
    if (output_suffix !== null) {
        params["output_suffix"] = output_suffix;
    }
    if (exclude_features !== null) {
        params["exclude_features"] = exclude_features;
    }
    if (exclude_classes !== null) {
        params["exclude_classes"] = exclude_classes;
    }
    if (output_dir !== null) {
        params["output_dir"] = output_dir;
    }
    if (panels_horizontal !== null) {
        params["panels_horizontal"] = panels_horizontal;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v__examine_gen_feat_dists_cargs(
    params: VExamineGenFeatDistsParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("@ExamineGenFeatDists");
    cargs.push(
        "-fdir",
        (params["features_dir"] ?? null)
    );
    if ((params["wildcards"] ?? null) !== null) {
        cargs.push(
            "-fwild",
            ...(params["wildcards"] ?? null)
        );
    }
    if ((params["output_suffix"] ?? null) !== null) {
        cargs.push(
            "-suffix",
            (params["output_suffix"] ?? null)
        );
    }
    if ((params["exclude_features"] ?? null) !== null) {
        cargs.push(
            "-exfeat",
            ...(params["exclude_features"] ?? null)
        );
    }
    if ((params["exclude_classes"] ?? null) !== null) {
        cargs.push(
            "-exclass",
            ...(params["exclude_classes"] ?? null)
        );
    }
    if ((params["output_dir"] ?? null) !== null) {
        cargs.push(
            "-odir",
            (params["output_dir"] ?? null)
        );
    }
    if ((params["panels_horizontal"] ?? null) !== null) {
        cargs.push(
            "-nx",
            String((params["panels_horizontal"] ?? null))
        );
    }
    if ((params["echo"] ?? null)) {
        cargs.push("-echo");
    }
    if ((params["help"] ?? null)) {
        cargs.push("-help");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v__examine_gen_feat_dists_outputs(
    params: VExamineGenFeatDistsParameters,
    execution: Execution,
): VExamineGenFeatDistsOutputs {
    const ret: VExamineGenFeatDistsOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * @ExamineGenFeatDists
 *
 * Examine histograms produced by 3dGenFeatDists.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VExamineGenFeatDistsOutputs`).
 */
function v__examine_gen_feat_dists_execute(
    params: VExamineGenFeatDistsParameters,
    runner: Runner | null = null,
): VExamineGenFeatDistsOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__EXAMINE_GEN_FEAT_DISTS_METADATA);
    params = execution.params(params)
    const cargs = v__examine_gen_feat_dists_cargs(params, execution)
    const ret = v__examine_gen_feat_dists_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * @ExamineGenFeatDists
 *
 * Examine histograms produced by 3dGenFeatDists.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param features_dir Output directory of 3dGenFeatDists
 * @param wildcards Wildcards used to select feature histograms under the directory.
 * @param output_suffix Output suffix, added to output images. Default is 'nosuff'.
 * @param exclude_features Exclude following features. String matching is partial.
 * @param exclude_classes Exclude following classes. String matching is partial.
 * @param output_dir Output directory, default is the same as -fdir.
 * @param panels_horizontal Set number of panels along the horizontal direction.
 * @param echo Set echo.
 * @param help Display help message.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VExamineGenFeatDistsOutputs`).
 */
function v__examine_gen_feat_dists(
    features_dir: string,
    wildcards: Array<string> | null = null,
    output_suffix: string | null = null,
    exclude_features: Array<string> | null = null,
    exclude_classes: Array<string> | null = null,
    output_dir: string | null = null,
    panels_horizontal: number | null = null,
    echo: boolean = false,
    help: boolean = false,
    runner: Runner | null = null,
): VExamineGenFeatDistsOutputs {
    const params = v__examine_gen_feat_dists_params(features_dir, wildcards, output_suffix, exclude_features, exclude_classes, output_dir, panels_horizontal, echo, help)
    return v__examine_gen_feat_dists_execute(params, runner);
}


export {
      VExamineGenFeatDistsOutputs,
      VExamineGenFeatDistsParameters,
      V__EXAMINE_GEN_FEAT_DISTS_METADATA,
      v__examine_gen_feat_dists,
      v__examine_gen_feat_dists_execute,
      v__examine_gen_feat_dists_params,
};
