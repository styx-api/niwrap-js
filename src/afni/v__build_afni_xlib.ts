// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__BUILD_AFNI_XLIB_METADATA: Metadata = {
    id: "ada8e2943681d0a1a8fa93d2a93d83cd8c338502.boutiques",
    name: "@build_afni_Xlib",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VBuildAfniXlibParameters {
    "@type": "afni.@build_afni_Xlib";
    "afniX": boolean;
    "localinstall": boolean;
    "debug_symbols": boolean;
    "lib32": boolean;
    "lib64": boolean;
    "packages": Array<string>;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "afni.@build_afni_Xlib": v__build_afni_xlib_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__build_afni_xlib(...)`.
 *
 * @interface
 */
interface VBuildAfniXlibOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param packages Packages to compile and install (e.g., lesstif, openmotif, libXt)
 * @param afni_x Install under /usr/local/afniX
 * @param localinstall Install under each package directory
 * @param debug_symbols Compile with -g to add symbols
 * @param lib32 Install libs under lib, and force 32-bit compile (on Linux: add --target=i386)
 * @param lib64 Install libs under lib64 (default is lib)
 *
 * @returns Parameter dictionary
 */
function v__build_afni_xlib_params(
    packages: Array<string>,
    afni_x: boolean = false,
    localinstall: boolean = false,
    debug_symbols: boolean = false,
    lib32: boolean = false,
    lib64: boolean = false,
): VBuildAfniXlibParameters {
    const params = {
        "@type": "afni.@build_afni_Xlib" as const,
        "afniX": afni_x,
        "localinstall": localinstall,
        "debug_symbols": debug_symbols,
        "lib32": lib32,
        "lib64": lib64,
        "packages": packages,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v__build_afni_xlib_cargs(
    params: VBuildAfniXlibParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("@build_afni_Xlib");
    if ((params["afniX"] ?? null)) {
        cargs.push("-afniX");
    }
    if ((params["localinstall"] ?? null)) {
        cargs.push("-localinstall");
    }
    if ((params["debug_symbols"] ?? null)) {
        cargs.push("-g");
    }
    if ((params["lib32"] ?? null)) {
        cargs.push("-lib32");
    }
    if ((params["lib64"] ?? null)) {
        cargs.push("-lib64");
    }
    cargs.push(...(params["packages"] ?? null));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v__build_afni_xlib_outputs(
    params: VBuildAfniXlibParameters,
    execution: Execution,
): VBuildAfniXlibOutputs {
    const ret: VBuildAfniXlibOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * Compile and install lesstif, openmotif, and/or libXt.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param execution The execution object.
 *
 * @returns NamedTuple of outputs (described in `VBuildAfniXlibOutputs`).
 */
function v__build_afni_xlib_execute(
    params: VBuildAfniXlibParameters,
    execution: Execution,
): VBuildAfniXlibOutputs {
    params = execution.params(params)
    const cargs = v__build_afni_xlib_cargs(params, execution)
    const ret = v__build_afni_xlib_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * Compile and install lesstif, openmotif, and/or libXt.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param packages Packages to compile and install (e.g., lesstif, openmotif, libXt)
 * @param afni_x Install under /usr/local/afniX
 * @param localinstall Install under each package directory
 * @param debug_symbols Compile with -g to add symbols
 * @param lib32 Install libs under lib, and force 32-bit compile (on Linux: add --target=i386)
 * @param lib64 Install libs under lib64 (default is lib)
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VBuildAfniXlibOutputs`).
 */
function v__build_afni_xlib(
    packages: Array<string>,
    afni_x: boolean = false,
    localinstall: boolean = false,
    debug_symbols: boolean = false,
    lib32: boolean = false,
    lib64: boolean = false,
    runner: Runner | null = null,
): VBuildAfniXlibOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__BUILD_AFNI_XLIB_METADATA);
    const params = v__build_afni_xlib_params(packages, afni_x, localinstall, debug_symbols, lib32, lib64)
    return v__build_afni_xlib_execute(params, execution);
}


export {
      VBuildAfniXlibOutputs,
      VBuildAfniXlibParameters,
      V__BUILD_AFNI_XLIB_METADATA,
      v__build_afni_xlib,
      v__build_afni_xlib_cargs,
      v__build_afni_xlib_execute,
      v__build_afni_xlib_outputs,
      v__build_afni_xlib_params,
};
