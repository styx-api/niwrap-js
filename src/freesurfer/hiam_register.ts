// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const HIAM_REGISTER_METADATA: Metadata = {
    id: "f991b3b9d61600e2eb491ce23d796663df3a627a.boutiques",
    name: "hiam_register",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface HiamRegisterParameters {
    "@type": "freesurfer.hiam_register";
    "input_surface": InputPathType;
    "average_surface": InputPathType;
    "output_surface": string;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.hiam_register": hiam_register_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "freesurfer.hiam_register": hiam_register_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `hiam_register(...)`.
 *
 * @interface
 */
interface HiamRegisterOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * The output surface after registration.
     */
    registered_surface: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param input_surface The input surface to be registered.
 * @param average_surface The average surface to register against.
 * @param output_surface The path where the output registered surface will be saved.
 *
 * @returns Parameter dictionary
 */
function hiam_register_params(
    input_surface: InputPathType,
    average_surface: InputPathType,
    output_surface: string,
): HiamRegisterParameters {
    const params = {
        "@type": "freesurfer.hiam_register" as const,
        "input_surface": input_surface,
        "average_surface": average_surface,
        "output_surface": output_surface,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function hiam_register_cargs(
    params: HiamRegisterParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("hiam_register");
    cargs.push(execution.inputFile((params["input_surface"] ?? null)));
    cargs.push(execution.inputFile((params["average_surface"] ?? null)));
    cargs.push((params["output_surface"] ?? null));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function hiam_register_outputs(
    params: HiamRegisterParameters,
    execution: Execution,
): HiamRegisterOutputs {
    const ret: HiamRegisterOutputs = {
        root: execution.outputFile("."),
        registered_surface: execution.outputFile([(params["output_surface"] ?? null)].join('')),
    };
    return ret;
}


/**
 * This program registers a surface with an average surface.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param execution The execution object.
 *
 * @returns NamedTuple of outputs (described in `HiamRegisterOutputs`).
 */
function hiam_register_execute(
    params: HiamRegisterParameters,
    execution: Execution,
): HiamRegisterOutputs {
    params = execution.params(params)
    const cargs = hiam_register_cargs(params, execution)
    const ret = hiam_register_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * This program registers a surface with an average surface.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param input_surface The input surface to be registered.
 * @param average_surface The average surface to register against.
 * @param output_surface The path where the output registered surface will be saved.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `HiamRegisterOutputs`).
 */
function hiam_register(
    input_surface: InputPathType,
    average_surface: InputPathType,
    output_surface: string,
    runner: Runner | null = null,
): HiamRegisterOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(HIAM_REGISTER_METADATA);
    const params = hiam_register_params(input_surface, average_surface, output_surface)
    return hiam_register_execute(params, execution);
}


export {
      HIAM_REGISTER_METADATA,
      HiamRegisterOutputs,
      HiamRegisterParameters,
      hiam_register,
      hiam_register_cargs,
      hiam_register_execute,
      hiam_register_outputs,
      hiam_register_params,
};
