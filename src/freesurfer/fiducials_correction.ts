// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const FIDUCIALS_CORRECTION_METADATA: Metadata = {
    id: "80fca1b56b5a25bee2228827e9acaebc9dc96725.boutiques",
    name: "fiducials_correction",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface FiducialsCorrectionParameters {
    "@type"?: "freesurfer/fiducials_correction";
    "input_file": InputPathType;
    "output_file": string;
}
type FiducialsCorrectionParametersTagged = Required<Pick<FiducialsCorrectionParameters, '@type'>> & FiducialsCorrectionParameters;


/**
 * Output object returned when calling `FiducialsCorrectionParameters(...)`.
 *
 * @interface
 */
interface FiducialsCorrectionOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output file with corrected fiducial markers.
     */
    output_file: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param input_file Input file containing imaging data with fiducial markers to correct.
 * @param output_file Output file with corrected fiducial markers.
 *
 * @returns Parameter dictionary
 */
function fiducials_correction_params(
    input_file: InputPathType,
    output_file: string,
): FiducialsCorrectionParametersTagged {
    const params = {
        "@type": "freesurfer/fiducials_correction" as const,
        "input_file": input_file,
        "output_file": output_file,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function fiducials_correction_cargs(
    params: FiducialsCorrectionParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("fiducials_correction");
    cargs.push(execution.inputFile((params["input_file"] ?? null)));
    cargs.push((params["output_file"] ?? null));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function fiducials_correction_outputs(
    params: FiducialsCorrectionParameters,
    execution: Execution,
): FiducialsCorrectionOutputs {
    const ret: FiducialsCorrectionOutputs = {
        root: execution.outputFile("."),
        output_file: execution.outputFile([(params["output_file"] ?? null)].join('')),
    };
    return ret;
}


/**
 * fiducials_correction
 *
 * A tool for correcting fiducial markers in imaging data. Note: This command has dependency issues with the Qt platform plugin 'xcb'. Ensure dependencies are properly configured.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `FiducialsCorrectionOutputs`).
 */
function fiducials_correction_execute(
    params: FiducialsCorrectionParameters,
    runner: Runner | null = null,
): FiducialsCorrectionOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(FIDUCIALS_CORRECTION_METADATA);
    params = execution.params(params)
    const cargs = fiducials_correction_cargs(params, execution)
    const ret = fiducials_correction_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * fiducials_correction
 *
 * A tool for correcting fiducial markers in imaging data. Note: This command has dependency issues with the Qt platform plugin 'xcb'. Ensure dependencies are properly configured.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param input_file Input file containing imaging data with fiducial markers to correct.
 * @param output_file Output file with corrected fiducial markers.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `FiducialsCorrectionOutputs`).
 */
function fiducials_correction(
    input_file: InputPathType,
    output_file: string,
    runner: Runner | null = null,
): FiducialsCorrectionOutputs {
    const params = fiducials_correction_params(input_file, output_file)
    return fiducials_correction_execute(params, runner);
}


export {
      FIDUCIALS_CORRECTION_METADATA,
      FiducialsCorrectionOutputs,
      fiducials_correction,
      fiducials_correction_execute,
      fiducials_correction_params,
};
