// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__SURF_SMOOTH_HEAT_07_EXAMPLES_METADATA: Metadata = {
    id: "dc0b150ee17a89e1651ca52dbda01cc2f717b438.boutiques",
    name: "@SurfSmooth.HEAT_07.examples",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VSurfSmoothHeat07ExamplesParameters {
    "__STYXTYPE__": "@SurfSmooth.HEAT_07.examples";
    "path_to_suma_demo": string;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "@SurfSmooth.HEAT_07.examples": v__surf_smooth_heat_07_examples_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__surf_smooth_heat_07_examples(...)`.
 *
 * @interface
 */
interface VSurfSmoothHeat07ExamplesOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


function v__surf_smooth_heat_07_examples_params(
    path_to_suma_demo: string,
): VSurfSmoothHeat07ExamplesParameters {
    /**
     * Build parameters.
    
     * @param path_to_suma_demo Path to SUMA demo directory
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "@SurfSmooth.HEAT_07.examples" as const,
        "path_to_suma_demo": path_to_suma_demo,
    };
    return params;
}


function v__surf_smooth_heat_07_examples_cargs(
    params: VSurfSmoothHeat07ExamplesParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("@SurfSmooth.HEAT_07.examples");
    cargs.push((params["path_to_suma_demo"] ?? null));
    return cargs;
}


function v__surf_smooth_heat_07_examples_outputs(
    params: VSurfSmoothHeat07ExamplesParameters,
    execution: Execution,
): VSurfSmoothHeat07ExamplesOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: VSurfSmoothHeat07ExamplesOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


function v__surf_smooth_heat_07_examples_execute(
    params: VSurfSmoothHeat07ExamplesParameters,
    execution: Execution,
): VSurfSmoothHeat07ExamplesOutputs {
    /**
     * A script to illustrate controlled blurring of data on the surface.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `VSurfSmoothHeat07ExamplesOutputs`).
     */
    params = execution.params(params)
    const cargs = v__surf_smooth_heat_07_examples_cargs(params, execution)
    const ret = v__surf_smooth_heat_07_examples_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function v__surf_smooth_heat_07_examples(
    path_to_suma_demo: string,
    runner: Runner | null = null,
): VSurfSmoothHeat07ExamplesOutputs {
    /**
     * A script to illustrate controlled blurring of data on the surface.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param path_to_suma_demo Path to SUMA demo directory
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `VSurfSmoothHeat07ExamplesOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__SURF_SMOOTH_HEAT_07_EXAMPLES_METADATA);
    const params = v__surf_smooth_heat_07_examples_params(path_to_suma_demo)
    return v__surf_smooth_heat_07_examples_execute(params, execution);
}


export {
      VSurfSmoothHeat07ExamplesOutputs,
      VSurfSmoothHeat07ExamplesParameters,
      V__SURF_SMOOTH_HEAT_07_EXAMPLES_METADATA,
      v__surf_smooth_heat_07_examples,
      v__surf_smooth_heat_07_examples_params,
};
