// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const IREPIFITVOL_GLNX64_METADATA: Metadata = {
    id: "a086fe8ba3cbfd5163cdfddf0cd873ea526cb155.boutiques",
    name: "irepifitvol.glnx64",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface IrepifitvolGlnx64Parameters {
    "@type": "freesurfer.irepifitvol.glnx64";
    "input_file": InputPathType;
    "output_file": string;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.irepifitvol.glnx64": irepifitvol_glnx64_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "freesurfer.irepifitvol.glnx64": irepifitvol_glnx64_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `irepifitvol_glnx64(...)`.
 *
 * @interface
 */
interface IrepifitvolGlnx64Outputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * The fitted volume output from the irepifitvol process.
     */
    output_volume: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param input_file The input volume file to be processed.
 * @param output_file The path to save the output volume file after fitting.
 *
 * @returns Parameter dictionary
 */
function irepifitvol_glnx64_params(
    input_file: InputPathType,
    output_file: string,
): IrepifitvolGlnx64Parameters {
    const params = {
        "@type": "freesurfer.irepifitvol.glnx64" as const,
        "input_file": input_file,
        "output_file": output_file,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function irepifitvol_glnx64_cargs(
    params: IrepifitvolGlnx64Parameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("irepifitvol.glnx64");
    cargs.push(execution.inputFile((params["input_file"] ?? null)));
    cargs.push((params["output_file"] ?? null));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function irepifitvol_glnx64_outputs(
    params: IrepifitvolGlnx64Parameters,
    execution: Execution,
): IrepifitvolGlnx64Outputs {
    const ret: IrepifitvolGlnx64Outputs = {
        root: execution.outputFile("."),
        output_volume: execution.outputFile([(params["output_file"] ?? null)].join('')),
    };
    return ret;
}


/**
 * irepifitvol.glnx64
 *
 * This tool is a part of the FreeSurfer toolkit, designed for certain volume fitting tasks.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `IrepifitvolGlnx64Outputs`).
 */
function irepifitvol_glnx64_execute(
    params: IrepifitvolGlnx64Parameters,
    runner: Runner | null = null,
): IrepifitvolGlnx64Outputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(IREPIFITVOL_GLNX64_METADATA);
    params = execution.params(params)
    const cargs = irepifitvol_glnx64_cargs(params, execution)
    const ret = irepifitvol_glnx64_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * irepifitvol.glnx64
 *
 * This tool is a part of the FreeSurfer toolkit, designed for certain volume fitting tasks.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param input_file The input volume file to be processed.
 * @param output_file The path to save the output volume file after fitting.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `IrepifitvolGlnx64Outputs`).
 */
function irepifitvol_glnx64(
    input_file: InputPathType,
    output_file: string,
    runner: Runner | null = null,
): IrepifitvolGlnx64Outputs {
    const params = irepifitvol_glnx64_params(input_file, output_file)
    return irepifitvol_glnx64_execute(params, runner);
}


export {
      IREPIFITVOL_GLNX64_METADATA,
      IrepifitvolGlnx64Outputs,
      IrepifitvolGlnx64Parameters,
      irepifitvol_glnx64,
      irepifitvol_glnx64_execute,
      irepifitvol_glnx64_params,
};
