// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__CLUST_EXP_RUN_SHINY_METADATA: Metadata = {
    id: "d9831cf53b939c4f9cf4a57c2979fe1ccbb9233f.boutiques",
    name: "@ClustExp_run_shiny",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VClustExpRunShinyParameters {
    "@type": "afni.@ClustExp_run_shiny";
    "directory": string;
    "help": boolean;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "afni.@ClustExp_run_shiny": v__clust_exp_run_shiny_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__clust_exp_run_shiny(...)`.
 *
 * @interface
 */
interface VClustExpRunShinyOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param directory Folder created by ClustExp_StatParse.py
 * @param help Show help message
 *
 * @returns Parameter dictionary
 */
function v__clust_exp_run_shiny_params(
    directory: string,
    help: boolean = false,
): VClustExpRunShinyParameters {
    const params = {
        "@type": "afni.@ClustExp_run_shiny" as const,
        "directory": directory,
        "help": help,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v__clust_exp_run_shiny_cargs(
    params: VClustExpRunShinyParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("@ClustExp_run_shiny");
    cargs.push((params["directory"] ?? null));
    if ((params["help"] ?? null)) {
        cargs.push("-help");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v__clust_exp_run_shiny_outputs(
    params: VClustExpRunShinyParameters,
    execution: Execution,
): VClustExpRunShinyOutputs {
    const ret: VClustExpRunShinyOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * @ClustExp_run_shiny
 *
 * Launch a shiny app that was created by ClustExp_StatParse.py.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VClustExpRunShinyOutputs`).
 */
function v__clust_exp_run_shiny_execute(
    params: VClustExpRunShinyParameters,
    runner: Runner | null = null,
): VClustExpRunShinyOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__CLUST_EXP_RUN_SHINY_METADATA);
    params = execution.params(params)
    const cargs = v__clust_exp_run_shiny_cargs(params, execution)
    const ret = v__clust_exp_run_shiny_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * @ClustExp_run_shiny
 *
 * Launch a shiny app that was created by ClustExp_StatParse.py.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param directory Folder created by ClustExp_StatParse.py
 * @param help Show help message
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VClustExpRunShinyOutputs`).
 */
function v__clust_exp_run_shiny(
    directory: string,
    help: boolean = false,
    runner: Runner | null = null,
): VClustExpRunShinyOutputs {
    const params = v__clust_exp_run_shiny_params(directory, help)
    return v__clust_exp_run_shiny_execute(params, runner);
}


export {
      VClustExpRunShinyOutputs,
      VClustExpRunShinyParameters,
      V__CLUST_EXP_RUN_SHINY_METADATA,
      v__clust_exp_run_shiny,
      v__clust_exp_run_shiny_execute,
      v__clust_exp_run_shiny_params,
};
