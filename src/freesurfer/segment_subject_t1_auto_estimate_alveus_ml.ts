// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const SEGMENT_SUBJECT_T1_AUTO_ESTIMATE_ALVEUS_ML_METADATA: Metadata = {
    id: "789d1c27dc21ca8762405d55ea7fbad93c1f0204.boutiques",
    name: "segmentSubjectT1_autoEstimateAlveusML",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface SegmentSubjectT1AutoEstimateAlveusMlParameters {
    "@type"?: "freesurfer/segmentSubjectT1_autoEstimateAlveusML";
    "t1_file": InputPathType;
    "output_folder": string;
}
type SegmentSubjectT1AutoEstimateAlveusMlParametersTagged = Required<Pick<SegmentSubjectT1AutoEstimateAlveusMlParameters, '@type'>> & SegmentSubjectT1AutoEstimateAlveusMlParameters;


/**
 * Output object returned when calling `SegmentSubjectT1AutoEstimateAlveusMlParameters(...)`.
 *
 * @interface
 */
interface SegmentSubjectT1AutoEstimateAlveusMlOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * The file containing segmented MRI data.
     */
    segmentation_output: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param t1_file Input T1-weighted MRI file to be segmented.
 * @param output_folder Path to the folder where the outputs will be saved.
 *
 * @returns Parameter dictionary
 */
function segment_subject_t1_auto_estimate_alveus_ml_params(
    t1_file: InputPathType,
    output_folder: string,
): SegmentSubjectT1AutoEstimateAlveusMlParametersTagged {
    const params = {
        "@type": "freesurfer/segmentSubjectT1_autoEstimateAlveusML" as const,
        "t1_file": t1_file,
        "output_folder": output_folder,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function segment_subject_t1_auto_estimate_alveus_ml_cargs(
    params: SegmentSubjectT1AutoEstimateAlveusMlParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("segmentSubjectT1_autoEstimateAlveusML");
    cargs.push(execution.inputFile((params["t1_file"] ?? null)));
    cargs.push((params["output_folder"] ?? null));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function segment_subject_t1_auto_estimate_alveus_ml_outputs(
    params: SegmentSubjectT1AutoEstimateAlveusMlParameters,
    execution: Execution,
): SegmentSubjectT1AutoEstimateAlveusMlOutputs {
    const ret: SegmentSubjectT1AutoEstimateAlveusMlOutputs = {
        root: execution.outputFile("."),
        segmentation_output: execution.outputFile([(params["output_folder"] ?? null), "/segmented_output.nii.gz"].join('')),
    };
    return ret;
}


/**
 * segmentSubjectT1_autoEstimateAlveusML
 *
 * A tool that segments T1-weighted MRI data and automatically estimates the Alveus.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `SegmentSubjectT1AutoEstimateAlveusMlOutputs`).
 */
function segment_subject_t1_auto_estimate_alveus_ml_execute(
    params: SegmentSubjectT1AutoEstimateAlveusMlParameters,
    runner: Runner | null = null,
): SegmentSubjectT1AutoEstimateAlveusMlOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(SEGMENT_SUBJECT_T1_AUTO_ESTIMATE_ALVEUS_ML_METADATA);
    params = execution.params(params)
    const cargs = segment_subject_t1_auto_estimate_alveus_ml_cargs(params, execution)
    const ret = segment_subject_t1_auto_estimate_alveus_ml_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * segmentSubjectT1_autoEstimateAlveusML
 *
 * A tool that segments T1-weighted MRI data and automatically estimates the Alveus.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param t1_file Input T1-weighted MRI file to be segmented.
 * @param output_folder Path to the folder where the outputs will be saved.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `SegmentSubjectT1AutoEstimateAlveusMlOutputs`).
 */
function segment_subject_t1_auto_estimate_alveus_ml(
    t1_file: InputPathType,
    output_folder: string,
    runner: Runner | null = null,
): SegmentSubjectT1AutoEstimateAlveusMlOutputs {
    const params = segment_subject_t1_auto_estimate_alveus_ml_params(t1_file, output_folder)
    return segment_subject_t1_auto_estimate_alveus_ml_execute(params, runner);
}


export {
      SEGMENT_SUBJECT_T1_AUTO_ESTIMATE_ALVEUS_ML_METADATA,
      SegmentSubjectT1AutoEstimateAlveusMlOutputs,
      segment_subject_t1_auto_estimate_alveus_ml,
      segment_subject_t1_auto_estimate_alveus_ml_execute,
      segment_subject_t1_auto_estimate_alveus_ml_params,
};
