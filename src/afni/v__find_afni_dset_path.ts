// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__FIND_AFNI_DSET_PATH_METADATA: Metadata = {
    id: "d33aa66f6df6fbc7fea6bf4750fec389976226bb.boutiques",
    name: "@FindAfniDsetPath",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VFindAfniDsetPathParameters {
    "@type": "afni.@FindAfniDsetPath";
    "dsetname": string;
    "append_file": boolean;
    "full_path": boolean;
    "help": boolean;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "afni.@FindAfniDsetPath": v__find_afni_dset_path_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__find_afni_dset_path(...)`.
 *
 * @interface
 */
interface VFindAfniDsetPathOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param dsetname Name of the dataset to search for
 * @param append_file Show the file appended to (even with atlas name)
 * @param full_path Print full path instead of '.'
 * @param help Display help message
 *
 * @returns Parameter dictionary
 */
function v__find_afni_dset_path_params(
    dsetname: string,
    append_file: boolean = false,
    full_path: boolean = false,
    help: boolean = false,
): VFindAfniDsetPathParameters {
    const params = {
        "@type": "afni.@FindAfniDsetPath" as const,
        "dsetname": dsetname,
        "append_file": append_file,
        "full_path": full_path,
        "help": help,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v__find_afni_dset_path_cargs(
    params: VFindAfniDsetPathParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("@FindAfniDsetPath");
    cargs.push((params["dsetname"] ?? null));
    if ((params["append_file"] ?? null)) {
        cargs.push("-append_file");
    }
    if ((params["full_path"] ?? null)) {
        cargs.push("-full_path");
    }
    if ((params["help"] ?? null)) {
        cargs.push("-help");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v__find_afni_dset_path_outputs(
    params: VFindAfniDsetPathParameters,
    execution: Execution,
): VFindAfniDsetPathOutputs {
    const ret: VFindAfniDsetPathOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * Searches various AFNI directories for a specified dataset and returns its path.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VFindAfniDsetPathOutputs`).
 */
function v__find_afni_dset_path_execute(
    params: VFindAfniDsetPathParameters,
    runner: Runner | null = null,
): VFindAfniDsetPathOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__FIND_AFNI_DSET_PATH_METADATA);
    params = execution.params(params)
    const cargs = v__find_afni_dset_path_cargs(params, execution)
    const ret = v__find_afni_dset_path_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * Searches various AFNI directories for a specified dataset and returns its path.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param dsetname Name of the dataset to search for
 * @param append_file Show the file appended to (even with atlas name)
 * @param full_path Print full path instead of '.'
 * @param help Display help message
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VFindAfniDsetPathOutputs`).
 */
function v__find_afni_dset_path(
    dsetname: string,
    append_file: boolean = false,
    full_path: boolean = false,
    help: boolean = false,
    runner: Runner | null = null,
): VFindAfniDsetPathOutputs {
    const params = v__find_afni_dset_path_params(dsetname, append_file, full_path, help)
    return v__find_afni_dset_path_execute(params, runner);
}


export {
      VFindAfniDsetPathOutputs,
      VFindAfniDsetPathParameters,
      V__FIND_AFNI_DSET_PATH_METADATA,
      v__find_afni_dset_path,
      v__find_afni_dset_path_execute,
      v__find_afni_dset_path_params,
};
