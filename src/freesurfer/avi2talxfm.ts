// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const AVI2TALXFM_METADATA: Metadata = {
    id: "b2655b0f30995a088bcf42b9c6db2e6477fd8f33.boutiques",
    name: "avi2talxfm",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface Avi2talxfmParameters {
    "@type": "freesurfer.avi2talxfm";
    "input_volume": InputPathType;
    "target_volume": InputPathType;
    "vox2vox_transform": InputPathType;
    "output_xfm": string;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.avi2talxfm": avi2talxfm_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "freesurfer.avi2talxfm": avi2talxfm_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `avi2talxfm(...)`.
 *
 * @interface
 */
interface Avi2talxfmOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Resulting MNI transform file
     */
    output_xfm_file: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param input_volume Input volume file
 * @param target_volume Target volume file
 * @param vox2vox_transform Voxel-to-voxel transform file
 * @param output_xfm Output MNI transform file
 *
 * @returns Parameter dictionary
 */
function avi2talxfm_params(
    input_volume: InputPathType,
    target_volume: InputPathType,
    vox2vox_transform: InputPathType,
    output_xfm: string,
): Avi2talxfmParameters {
    const params = {
        "@type": "freesurfer.avi2talxfm" as const,
        "input_volume": input_volume,
        "target_volume": target_volume,
        "vox2vox_transform": vox2vox_transform,
        "output_xfm": output_xfm,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function avi2talxfm_cargs(
    params: Avi2talxfmParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("avi2talxfm");
    cargs.push(execution.inputFile((params["input_volume"] ?? null)));
    cargs.push(execution.inputFile((params["target_volume"] ?? null)));
    cargs.push(execution.inputFile((params["vox2vox_transform"] ?? null)));
    cargs.push((params["output_xfm"] ?? null));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function avi2talxfm_outputs(
    params: Avi2talxfmParameters,
    execution: Execution,
): Avi2talxfmOutputs {
    const ret: Avi2talxfmOutputs = {
        root: execution.outputFile("."),
        output_xfm_file: execution.outputFile([(params["output_xfm"] ?? null)].join('')),
    };
    return ret;
}


/**
 * avi2talxfm
 *
 * Convert voxel-to-voxel transform to MNI transform.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `Avi2talxfmOutputs`).
 */
function avi2talxfm_execute(
    params: Avi2talxfmParameters,
    runner: Runner | null = null,
): Avi2talxfmOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(AVI2TALXFM_METADATA);
    params = execution.params(params)
    const cargs = avi2talxfm_cargs(params, execution)
    const ret = avi2talxfm_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * avi2talxfm
 *
 * Convert voxel-to-voxel transform to MNI transform.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param input_volume Input volume file
 * @param target_volume Target volume file
 * @param vox2vox_transform Voxel-to-voxel transform file
 * @param output_xfm Output MNI transform file
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `Avi2talxfmOutputs`).
 */
function avi2talxfm(
    input_volume: InputPathType,
    target_volume: InputPathType,
    vox2vox_transform: InputPathType,
    output_xfm: string,
    runner: Runner | null = null,
): Avi2talxfmOutputs {
    const params = avi2talxfm_params(input_volume, target_volume, vox2vox_transform, output_xfm)
    return avi2talxfm_execute(params, runner);
}


export {
      AVI2TALXFM_METADATA,
      Avi2talxfmOutputs,
      Avi2talxfmParameters,
      avi2talxfm,
      avi2talxfm_execute,
      avi2talxfm_params,
};
