// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const MRIS_MORPH_STATS_METADATA: Metadata = {
    id: "da593f1d8b569bcf1c57e65563ce3b6eb93b2e86.boutiques",
    name: "mris_morph_stats",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface MrisMorphStatsParameters {
    "__STYXTYPE__": "mris_morph_stats";
    "subject_name": string;
    "hemisphere": "lh" | "rh";
    "morphed_surface": InputPathType;
    "output_name": string;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "mris_morph_stats": mris_morph_stats_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "mris_morph_stats": mris_morph_stats_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `mris_morph_stats(...)`.
 *
 * @interface
 */
interface MrisMorphStatsOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Generated statistics of the surface-based deformation field.
     */
    stats_output: OutputPathType;
}


function mris_morph_stats_params(
    subject_name: string,
    hemisphere: "lh" | "rh",
    morphed_surface: InputPathType,
    output_name: string,
): MrisMorphStatsParameters {
    /**
     * Build parameters.
    
     * @param subject_name Name of the subject.
     * @param hemisphere Hemisphere, either 'lh' for left hemisphere or 'rh' for right hemisphere.
     * @param morphed_surface Morphed surface file.
     * @param output_name Name of the output to be generated.
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "mris_morph_stats" as const,
        "subject_name": subject_name,
        "hemisphere": hemisphere,
        "morphed_surface": morphed_surface,
        "output_name": output_name,
    };
    return params;
}


function mris_morph_stats_cargs(
    params: MrisMorphStatsParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("mris_morph_stats");
    cargs.push((params["subject_name"] ?? null));
    cargs.push((params["hemisphere"] ?? null));
    cargs.push(execution.inputFile((params["morphed_surface"] ?? null)));
    cargs.push((params["output_name"] ?? null));
    return cargs;
}


function mris_morph_stats_outputs(
    params: MrisMorphStatsParameters,
    execution: Execution,
): MrisMorphStatsOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: MrisMorphStatsOutputs = {
        root: execution.outputFile("."),
        stats_output: execution.outputFile([(params["output_name"] ?? null)].join('')),
    };
    return ret;
}


function mris_morph_stats_execute(
    params: MrisMorphStatsParameters,
    execution: Execution,
): MrisMorphStatsOutputs {
    /**
     * This program generates statistics which characterize a surface-based deformation field.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `MrisMorphStatsOutputs`).
     */
    params = execution.params(params)
    const cargs = mris_morph_stats_cargs(params, execution)
    const ret = mris_morph_stats_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function mris_morph_stats(
    subject_name: string,
    hemisphere: "lh" | "rh",
    morphed_surface: InputPathType,
    output_name: string,
    runner: Runner | null = null,
): MrisMorphStatsOutputs {
    /**
     * This program generates statistics which characterize a surface-based deformation field.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param subject_name Name of the subject.
     * @param hemisphere Hemisphere, either 'lh' for left hemisphere or 'rh' for right hemisphere.
     * @param morphed_surface Morphed surface file.
     * @param output_name Name of the output to be generated.
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `MrisMorphStatsOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(MRIS_MORPH_STATS_METADATA);
    const params = mris_morph_stats_params(subject_name, hemisphere, morphed_surface, output_name)
    return mris_morph_stats_execute(params, execution);
}


export {
      MRIS_MORPH_STATS_METADATA,
      MrisMorphStatsOutputs,
      MrisMorphStatsParameters,
      mris_morph_stats,
      mris_morph_stats_params,
};
