// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const HIAM_MAKE_SURFACES_METADATA: Metadata = {
    id: "1b161d9791e99b79bc12c2e006b7a1a47156fb9f.boutiques",
    name: "hiam_make_surfaces",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface HiamMakeSurfacesParameters {
    "@type": "freesurfer.hiam_make_surfaces";
    "subject_name": string;
    "structure": "RA" | "LA" | "RH" | "LH";
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.hiam_make_surfaces": hiam_make_surfaces_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `hiam_make_surfaces(...)`.
 *
 * @interface
 */
interface HiamMakeSurfacesOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param subject_name Subject name for which surfaces are to be created
 * @param structure Structure for which surfaces will be created. Valid values are RA, LA, RH, and LH.
 *
 * @returns Parameter dictionary
 */
function hiam_make_surfaces_params(
    subject_name: string,
    structure: "RA" | "LA" | "RH" | "LH",
): HiamMakeSurfacesParameters {
    const params = {
        "@type": "freesurfer.hiam_make_surfaces" as const,
        "subject_name": subject_name,
        "structure": structure,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function hiam_make_surfaces_cargs(
    params: HiamMakeSurfacesParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("hiam_make_surfaces");
    cargs.push((params["subject_name"] ?? null));
    cargs.push((params["structure"] ?? null));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function hiam_make_surfaces_outputs(
    params: HiamMakeSurfacesParameters,
    execution: Execution,
): HiamMakeSurfacesOutputs {
    const ret: HiamMakeSurfacesOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * Surface creation tool for specified brain structures.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param execution The execution object.
 *
 * @returns NamedTuple of outputs (described in `HiamMakeSurfacesOutputs`).
 */
function hiam_make_surfaces_execute(
    params: HiamMakeSurfacesParameters,
    execution: Execution,
): HiamMakeSurfacesOutputs {
    params = execution.params(params)
    const cargs = hiam_make_surfaces_cargs(params, execution)
    const ret = hiam_make_surfaces_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * Surface creation tool for specified brain structures.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param subject_name Subject name for which surfaces are to be created
 * @param structure Structure for which surfaces will be created. Valid values are RA, LA, RH, and LH.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `HiamMakeSurfacesOutputs`).
 */
function hiam_make_surfaces(
    subject_name: string,
    structure: "RA" | "LA" | "RH" | "LH",
    runner: Runner | null = null,
): HiamMakeSurfacesOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(HIAM_MAKE_SURFACES_METADATA);
    const params = hiam_make_surfaces_params(subject_name, structure)
    return hiam_make_surfaces_execute(params, execution);
}


export {
      HIAM_MAKE_SURFACES_METADATA,
      HiamMakeSurfacesOutputs,
      HiamMakeSurfacesParameters,
      hiam_make_surfaces,
      hiam_make_surfaces_cargs,
      hiam_make_surfaces_execute,
      hiam_make_surfaces_outputs,
      hiam_make_surfaces_params,
};
