// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const RUN_SEGMENT_SUBJECT_SH_METADATA: Metadata = {
    id: "edb09a7dae02cd39d07b26767fc90bc0473bdf53.boutiques",
    name: "run_SegmentSubject.sh",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface RunSegmentSubjectShParameters {
    "@type": "freesurfer.run_SegmentSubject.sh";
    "deployedMCRroot": string;
    "arguments"?: string | null | undefined;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.run_SegmentSubject.sh": run_segment_subject_sh_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "freesurfer.run_SegmentSubject.sh": run_segment_subject_sh_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `run_segment_subject_sh(...)`.
 *
 * @interface
 */
interface RunSegmentSubjectShOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * The generated output file from the segmentation process.
     */
    output: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param deployed_mcrroot The root directory of the deployed MATLAB Compiler Runtime.
 * @param arguments_ Additional arguments to be passed to the SegmentSubject script.
 *
 * @returns Parameter dictionary
 */
function run_segment_subject_sh_params(
    deployed_mcrroot: string,
    arguments_: string | null = null,
): RunSegmentSubjectShParameters {
    const params = {
        "@type": "freesurfer.run_SegmentSubject.sh" as const,
        "deployedMCRroot": deployed_mcrroot,
    };
    if (arguments_ !== null) {
        params["arguments"] = arguments_;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function run_segment_subject_sh_cargs(
    params: RunSegmentSubjectShParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("run_SegmentSubject.sh");
    cargs.push((params["deployedMCRroot"] ?? null));
    if ((params["arguments"] ?? null) !== null) {
        cargs.push((params["arguments"] ?? null));
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function run_segment_subject_sh_outputs(
    params: RunSegmentSubjectShParameters,
    execution: Execution,
): RunSegmentSubjectShOutputs {
    const ret: RunSegmentSubjectShOutputs = {
        root: execution.outputFile("."),
        output: execution.outputFile(["outputFileName"].join('')),
    };
    return ret;
}


/**
 * A command-line tool for subject segmentation in Freesurfer.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param execution The execution object.
 *
 * @returns NamedTuple of outputs (described in `RunSegmentSubjectShOutputs`).
 */
function run_segment_subject_sh_execute(
    params: RunSegmentSubjectShParameters,
    execution: Execution,
): RunSegmentSubjectShOutputs {
    params = execution.params(params)
    const cargs = run_segment_subject_sh_cargs(params, execution)
    const ret = run_segment_subject_sh_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * A command-line tool for subject segmentation in Freesurfer.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param deployed_mcrroot The root directory of the deployed MATLAB Compiler Runtime.
 * @param arguments_ Additional arguments to be passed to the SegmentSubject script.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `RunSegmentSubjectShOutputs`).
 */
function run_segment_subject_sh(
    deployed_mcrroot: string,
    arguments_: string | null = null,
    runner: Runner | null = null,
): RunSegmentSubjectShOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(RUN_SEGMENT_SUBJECT_SH_METADATA);
    const params = run_segment_subject_sh_params(deployed_mcrroot, arguments_)
    return run_segment_subject_sh_execute(params, execution);
}


export {
      RUN_SEGMENT_SUBJECT_SH_METADATA,
      RunSegmentSubjectShOutputs,
      RunSegmentSubjectShParameters,
      run_segment_subject_sh,
      run_segment_subject_sh_cargs,
      run_segment_subject_sh_execute,
      run_segment_subject_sh_outputs,
      run_segment_subject_sh_params,
};
