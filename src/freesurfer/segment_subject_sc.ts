// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const SEGMENT_SUBJECT_SC_METADATA: Metadata = {
    id: "02733a36fda91e4ab91ac726bedcbf25c9c93313.boutiques",
    name: "segment_subject_sc",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface SegmentSubjectScParameters {
    "__STYXTYPE__": "segment_subject_sc";
    "invol": InputPathType;
    "outxfm": InputPathType;
    "log"?: string | null | undefined;
    "debug": boolean;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "segment_subject_sc": segment_subject_sc_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "segment_subject_sc": segment_subject_sc_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `segment_subject_sc(...)`.
 *
 * @interface
 */
interface SegmentSubjectScOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output transform file (xfm)
     */
    output_xfm_file: OutputPathType;
}


function segment_subject_sc_params(
    invol: InputPathType,
    outxfm: InputPathType,
    log: string | null = "outdir/talarach.log",
    debug: boolean = false,
): SegmentSubjectScParameters {
    /**
     * Build parameters.
    
     * @param invol Input volume
     * @param outxfm Output xfm file
     * @param log Log file. Default is outdir/talarach.log
     * @param debug Turn on debugging
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "segment_subject_sc" as const,
        "invol": invol,
        "outxfm": outxfm,
        "debug": debug,
    };
    if (log !== null) {
        params["log"] = log;
    }
    return params;
}


function segment_subject_sc_cargs(
    params: SegmentSubjectScParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("mri_nu_correct.mni");
    cargs.push(
        "-i",
        ["-", execution.inputFile((params["invol"] ?? null))].join('')
    );
    cargs.push(
        "-xfm",
        ["-", execution.inputFile((params["outxfm"] ?? null))].join('')
    );
    if ((params["log"] ?? null) !== null) {
        cargs.push(
            "--log",
            (params["log"] ?? null)
        );
    }
    if ((params["debug"] ?? null)) {
        cargs.push("--debug");
    }
    return cargs;
}


function segment_subject_sc_outputs(
    params: SegmentSubjectScParameters,
    execution: Execution,
): SegmentSubjectScOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: SegmentSubjectScOutputs = {
        root: execution.outputFile("."),
        output_xfm_file: execution.outputFile([path.basename((params["outxfm"] ?? null))].join('')),
    };
    return ret;
}


function segment_subject_sc_execute(
    params: SegmentSubjectScParameters,
    execution: Execution,
): SegmentSubjectScOutputs {
    /**
     * Front-end for MINC's mritotal. Computes the Talairach transform for mapping the input volume to the MNI305 space.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `SegmentSubjectScOutputs`).
     */
    params = execution.params(params)
    const cargs = segment_subject_sc_cargs(params, execution)
    const ret = segment_subject_sc_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function segment_subject_sc(
    invol: InputPathType,
    outxfm: InputPathType,
    log: string | null = "outdir/talarach.log",
    debug: boolean = false,
    runner: Runner | null = null,
): SegmentSubjectScOutputs {
    /**
     * Front-end for MINC's mritotal. Computes the Talairach transform for mapping the input volume to the MNI305 space.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param invol Input volume
     * @param outxfm Output xfm file
     * @param log Log file. Default is outdir/talarach.log
     * @param debug Turn on debugging
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `SegmentSubjectScOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(SEGMENT_SUBJECT_SC_METADATA);
    const params = segment_subject_sc_params(invol, outxfm, log, debug)
    return segment_subject_sc_execute(params, execution);
}


export {
      SEGMENT_SUBJECT_SC_METADATA,
      SegmentSubjectScOutputs,
      SegmentSubjectScParameters,
      segment_subject_sc,
      segment_subject_sc_params,
};
