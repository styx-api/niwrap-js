// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const MRIS_SAMPLE_LABEL_METADATA: Metadata = {
    id: "74b041ea42284364577c7763d289942c9947372b.boutiques",
    name: "mris_sample_label",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface MrisSampleLabelParameters {
    "__STYXTYPE__": "mris_sample_label";
    "input_label_file": InputPathType;
    "input_surface_file": InputPathType;
    "output_label_file": string;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "mris_sample_label": mris_sample_label_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "mris_sample_label": mris_sample_label_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `mris_sample_label(...)`.
 *
 * @interface
 */
interface MrisSampleLabelOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * The resulting output label file
     */
    output_label_file: OutputPathType;
}


function mris_sample_label_params(
    input_label_file: InputPathType,
    input_surface_file: InputPathType,
    output_label_file: string,
): MrisSampleLabelParameters {
    /**
     * Build parameters.
    
     * @param input_label_file Input label file
     * @param input_surface_file Input surface file
     * @param output_label_file Output label file
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "mris_sample_label" as const,
        "input_label_file": input_label_file,
        "input_surface_file": input_surface_file,
        "output_label_file": output_label_file,
    };
    return params;
}


function mris_sample_label_cargs(
    params: MrisSampleLabelParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("mris_sample_label");
    cargs.push(execution.inputFile((params["input_label_file"] ?? null)));
    cargs.push(execution.inputFile((params["input_surface_file"] ?? null)));
    cargs.push((params["output_label_file"] ?? null));
    return cargs;
}


function mris_sample_label_outputs(
    params: MrisSampleLabelParameters,
    execution: Execution,
): MrisSampleLabelOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: MrisSampleLabelOutputs = {
        root: execution.outputFile("."),
        output_label_file: execution.outputFile([(params["output_label_file"] ?? null)].join('')),
    };
    return ret;
}


function mris_sample_label_execute(
    params: MrisSampleLabelParameters,
    execution: Execution,
): MrisSampleLabelOutputs {
    /**
     * This tool samples a label onto a surface model.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `MrisSampleLabelOutputs`).
     */
    params = execution.params(params)
    const cargs = mris_sample_label_cargs(params, execution)
    const ret = mris_sample_label_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function mris_sample_label(
    input_label_file: InputPathType,
    input_surface_file: InputPathType,
    output_label_file: string,
    runner: Runner | null = null,
): MrisSampleLabelOutputs {
    /**
     * This tool samples a label onto a surface model.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param input_label_file Input label file
     * @param input_surface_file Input surface file
     * @param output_label_file Output label file
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `MrisSampleLabelOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(MRIS_SAMPLE_LABEL_METADATA);
    const params = mris_sample_label_params(input_label_file, input_surface_file, output_label_file)
    return mris_sample_label_execute(params, execution);
}


export {
      MRIS_SAMPLE_LABEL_METADATA,
      MrisSampleLabelOutputs,
      MrisSampleLabelParameters,
      mris_sample_label,
      mris_sample_label_params,
};
