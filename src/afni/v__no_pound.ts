// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__NO_POUND_METADATA: Metadata = {
    id: "88133483a9d0f5d50e88511e48d91b434472fbca.boutiques",
    name: "@NoPound",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VNoPoundParameters {
    "@type": "afni.@NoPound";
    "afni_files": Array<string>;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "afni.@NoPound": v__no_pound_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__no_pound(...)`.
 *
 * @interface
 */
interface VNoPoundOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param afni_files List of AFNI files where # characters should be replaced with -.
 *
 * @returns Parameter dictionary
 */
function v__no_pound_params(
    afni_files: Array<string>,
): VNoPoundParameters {
    const params = {
        "@type": "afni.@NoPound" as const,
        "afni_files": afni_files,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function v__no_pound_cargs(
    params: VNoPoundParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("@NoPound");
    cargs.push(...(params["afni_files"] ?? null));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function v__no_pound_outputs(
    params: VNoPoundParameters,
    execution: Execution,
): VNoPoundOutputs {
    const ret: VNoPoundOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * Replaces all # characters in AFNI filenames with a -.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param params The parameters.
 * @param execution The execution object.
 *
 * @returns NamedTuple of outputs (described in `VNoPoundOutputs`).
 */
function v__no_pound_execute(
    params: VNoPoundParameters,
    execution: Execution,
): VNoPoundOutputs {
    params = execution.params(params)
    const cargs = v__no_pound_cargs(params, execution)
    const ret = v__no_pound_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * Replaces all # characters in AFNI filenames with a -.
 *
 * Author: AFNI Developers
 *
 * URL: https://afni.nimh.nih.gov/
 *
 * @param afni_files List of AFNI files where # characters should be replaced with -.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `VNoPoundOutputs`).
 */
function v__no_pound(
    afni_files: Array<string>,
    runner: Runner | null = null,
): VNoPoundOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__NO_POUND_METADATA);
    const params = v__no_pound_params(afni_files)
    return v__no_pound_execute(params, execution);
}


export {
      VNoPoundOutputs,
      VNoPoundParameters,
      V__NO_POUND_METADATA,
      v__no_pound,
      v__no_pound_cargs,
      v__no_pound_execute,
      v__no_pound_outputs,
      v__no_pound_params,
};
