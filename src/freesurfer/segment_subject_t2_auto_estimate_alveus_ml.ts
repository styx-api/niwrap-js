// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const SEGMENT_SUBJECT_T2_AUTO_ESTIMATE_ALVEUS_ML_METADATA: Metadata = {
    id: "8a6a12eb1eae4567d49625f69155e84f68466b3c.boutiques",
    name: "segmentSubjectT2_autoEstimateAlveusML",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface SegmentSubjectT2AutoEstimateAlveusMlParameters {
    "__STYXTYPE__": "segmentSubjectT2_autoEstimateAlveusML";
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "segmentSubjectT2_autoEstimateAlveusML": segment_subject_t2_auto_estimate_alveus_ml_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `segment_subject_t2_auto_estimate_alveus_ml(...)`.
 *
 * @interface
 */
interface SegmentSubjectT2AutoEstimateAlveusMlOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


function segment_subject_t2_auto_estimate_alveus_ml_params(
): SegmentSubjectT2AutoEstimateAlveusMlParameters {
    /**
     * Build parameters.
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "segmentSubjectT2_autoEstimateAlveusML" as const,
    };
    return params;
}


function segment_subject_t2_auto_estimate_alveus_ml_cargs(
    params: SegmentSubjectT2AutoEstimateAlveusMlParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("segmentSubjectT2_autoEstimateAlveusML");
    return cargs;
}


function segment_subject_t2_auto_estimate_alveus_ml_outputs(
    params: SegmentSubjectT2AutoEstimateAlveusMlParameters,
    execution: Execution,
): SegmentSubjectT2AutoEstimateAlveusMlOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: SegmentSubjectT2AutoEstimateAlveusMlOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


function segment_subject_t2_auto_estimate_alveus_ml_execute(
    params: SegmentSubjectT2AutoEstimateAlveusMlParameters,
    execution: Execution,
): SegmentSubjectT2AutoEstimateAlveusMlOutputs {
    /**
     * A Freesurfer tool to segment T2 subjects with automatic alveus ML estimation.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `SegmentSubjectT2AutoEstimateAlveusMlOutputs`).
     */
    params = execution.params(params)
    const cargs = segment_subject_t2_auto_estimate_alveus_ml_cargs(params, execution)
    const ret = segment_subject_t2_auto_estimate_alveus_ml_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function segment_subject_t2_auto_estimate_alveus_ml(
    runner: Runner | null = null,
): SegmentSubjectT2AutoEstimateAlveusMlOutputs {
    /**
     * A Freesurfer tool to segment T2 subjects with automatic alveus ML estimation.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `SegmentSubjectT2AutoEstimateAlveusMlOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(SEGMENT_SUBJECT_T2_AUTO_ESTIMATE_ALVEUS_ML_METADATA);
    const params = segment_subject_t2_auto_estimate_alveus_ml_params()
    return segment_subject_t2_auto_estimate_alveus_ml_execute(params, execution);
}


export {
      SEGMENT_SUBJECT_T2_AUTO_ESTIMATE_ALVEUS_ML_METADATA,
      SegmentSubjectT2AutoEstimateAlveusMlOutputs,
      SegmentSubjectT2AutoEstimateAlveusMlParameters,
      segment_subject_t2_auto_estimate_alveus_ml,
      segment_subject_t2_auto_estimate_alveus_ml_params,
};
