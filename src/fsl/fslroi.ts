// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const FSLROI_METADATA: Metadata = {
    id: "f3aa64710b2744918262d0bdf2a41d40b523832a.boutiques",
    name: "fslroi",
    package: "fsl",
    container_image_tag: "brainlife/fsl:6.0.4-patched2",
};


interface FslroiParameters {
    "__STYXTYPE__": "fslroi";
    "infile": InputPathType;
    "outfile": string;
    "xmin"?: number | null | undefined;
    "xsize"?: number | null | undefined;
    "ymin"?: number | null | undefined;
    "ysize"?: number | null | undefined;
    "zmin"?: number | null | undefined;
    "zsize"?: number | null | undefined;
    "tmin"?: number | null | undefined;
    "tsize"?: number | null | undefined;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "fslroi": fslroi_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "fslroi": fslroi_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `fslroi(...)`.
 *
 * @interface
 */
interface FslroiOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output file containing the extracted ROI
     */
    outfile: OutputPathType;
}


function fslroi_params(
    infile: InputPathType,
    outfile: string,
    xmin: number | null = null,
    xsize: number | null = null,
    ymin: number | null = null,
    ysize: number | null = null,
    zmin: number | null = null,
    zsize: number | null = null,
    tmin: number | null = null,
    tsize: number | null = null,
): FslroiParameters {
    /**
     * Build parameters.
    
     * @param infile Input image file
     * @param outfile Output image file
     * @param xmin Minimum X coordinate for ROI (indexing starts at 0)
     * @param xsize Size of the ROI in X direction
     * @param ymin Minimum Y coordinate for ROI (indexing starts at 0)
     * @param ysize Size of the ROI in Y direction
     * @param zmin Minimum Z coordinate for ROI (indexing starts at 0)
     * @param zsize Size of the ROI in Z direction
     * @param tmin Minimum T coordinate for ROI (indexing starts at 0)
     * @param tsize Size of the ROI in T direction
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "fslroi" as const,
        "infile": infile,
        "outfile": outfile,
    };
    if (xmin !== null) {
        params["xmin"] = xmin;
    }
    if (xsize !== null) {
        params["xsize"] = xsize;
    }
    if (ymin !== null) {
        params["ymin"] = ymin;
    }
    if (ysize !== null) {
        params["ysize"] = ysize;
    }
    if (zmin !== null) {
        params["zmin"] = zmin;
    }
    if (zsize !== null) {
        params["zsize"] = zsize;
    }
    if (tmin !== null) {
        params["tmin"] = tmin;
    }
    if (tsize !== null) {
        params["tsize"] = tsize;
    }
    return params;
}


function fslroi_cargs(
    params: FslroiParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("fslroi");
    cargs.push(execution.inputFile((params["infile"] ?? null)));
    cargs.push((params["outfile"] ?? null));
    if ((params["xmin"] ?? null) !== null) {
        cargs.push(String((params["xmin"] ?? null)));
    }
    if ((params["xsize"] ?? null) !== null) {
        cargs.push(String((params["xsize"] ?? null)));
    }
    if ((params["ymin"] ?? null) !== null) {
        cargs.push(String((params["ymin"] ?? null)));
    }
    if ((params["ysize"] ?? null) !== null) {
        cargs.push(String((params["ysize"] ?? null)));
    }
    if ((params["zmin"] ?? null) !== null) {
        cargs.push(String((params["zmin"] ?? null)));
    }
    if ((params["zsize"] ?? null) !== null) {
        cargs.push(String((params["zsize"] ?? null)));
    }
    if ((params["tmin"] ?? null) !== null) {
        cargs.push(String((params["tmin"] ?? null)));
    }
    if ((params["tsize"] ?? null) !== null) {
        cargs.push(String((params["tsize"] ?? null)));
    }
    return cargs;
}


function fslroi_outputs(
    params: FslroiParameters,
    execution: Execution,
): FslroiOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: FslroiOutputs = {
        root: execution.outputFile("."),
        outfile: execution.outputFile([(params["outfile"] ?? null)].join('')),
    };
    return ret;
}


function fslroi_execute(
    params: FslroiParameters,
    execution: Execution,
): FslroiOutputs {
    /**
     * Extracts a region of interest (ROI) from an image.
     * 
     * Author: FMRIB Analysis Group, University of Oxford
     * 
     * URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `FslroiOutputs`).
     */
    params = execution.params(params)
    const cargs = fslroi_cargs(params, execution)
    const ret = fslroi_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function fslroi(
    infile: InputPathType,
    outfile: string,
    xmin: number | null = null,
    xsize: number | null = null,
    ymin: number | null = null,
    ysize: number | null = null,
    zmin: number | null = null,
    zsize: number | null = null,
    tmin: number | null = null,
    tsize: number | null = null,
    runner: Runner | null = null,
): FslroiOutputs {
    /**
     * Extracts a region of interest (ROI) from an image.
     * 
     * Author: FMRIB Analysis Group, University of Oxford
     * 
     * URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
    
     * @param infile Input image file
     * @param outfile Output image file
     * @param xmin Minimum X coordinate for ROI (indexing starts at 0)
     * @param xsize Size of the ROI in X direction
     * @param ymin Minimum Y coordinate for ROI (indexing starts at 0)
     * @param ysize Size of the ROI in Y direction
     * @param zmin Minimum Z coordinate for ROI (indexing starts at 0)
     * @param zsize Size of the ROI in Z direction
     * @param tmin Minimum T coordinate for ROI (indexing starts at 0)
     * @param tsize Size of the ROI in T direction
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `FslroiOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(FSLROI_METADATA);
    const params = fslroi_params(infile, outfile, xmin, xsize, ymin, ysize, zmin, zsize, tmin, tsize)
    return fslroi_execute(params, execution);
}


export {
      FSLROI_METADATA,
      FslroiOutputs,
      FslroiParameters,
      fslroi,
      fslroi_params,
};
