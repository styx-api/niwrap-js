// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__AFNI_ORIENT2_RAIMAP_METADATA: Metadata = {
    id: "ade1258888a2ab4d7104b72e6f2921d74eaf281c.boutiques",
    name: "@AfniOrient2RAImap",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VAfniOrient2RaimapParameters {
    "__STYXTYPE__": "@AfniOrient2RAImap";
    "orientation_code": string;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "@AfniOrient2RAImap": v__afni_orient2_raimap_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__afni_orient2_raimap(...)`.
 *
 * @interface
 */
interface VAfniOrient2RaimapOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


function v__afni_orient2_raimap_params(
    orientation_code: string,
): VAfniOrient2RaimapParameters {
    /**
     * Build parameters.
    
     * @param orientation_code Orientation code (e.g., RAI, LSP)
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "@AfniOrient2RAImap" as const,
        "orientation_code": orientation_code,
    };
    return params;
}


function v__afni_orient2_raimap_cargs(
    params: VAfniOrient2RaimapParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("@AfniOrient2RAImap");
    cargs.push((params["orientation_code"] ?? null));
    return cargs;
}


function v__afni_orient2_raimap_outputs(
    params: VAfniOrient2RaimapParameters,
    execution: Execution,
): VAfniOrient2RaimapOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: VAfniOrient2RaimapOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


function v__afni_orient2_raimap_execute(
    params: VAfniOrient2RaimapParameters,
    execution: Execution,
): VAfniOrient2RaimapOutputs {
    /**
     * Returns the index map for the RAI directions.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `VAfniOrient2RaimapOutputs`).
     */
    params = execution.params(params)
    const cargs = v__afni_orient2_raimap_cargs(params, execution)
    const ret = v__afni_orient2_raimap_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function v__afni_orient2_raimap(
    orientation_code: string,
    runner: Runner | null = null,
): VAfniOrient2RaimapOutputs {
    /**
     * Returns the index map for the RAI directions.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param orientation_code Orientation code (e.g., RAI, LSP)
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `VAfniOrient2RaimapOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__AFNI_ORIENT2_RAIMAP_METADATA);
    const params = v__afni_orient2_raimap_params(orientation_code)
    return v__afni_orient2_raimap_execute(params, execution);
}


export {
      VAfniOrient2RaimapOutputs,
      VAfniOrient2RaimapParameters,
      V__AFNI_ORIENT2_RAIMAP_METADATA,
      v__afni_orient2_raimap,
      v__afni_orient2_raimap_params,
};
