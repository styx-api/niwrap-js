// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const INFLATE_SUBJECT_SC_METADATA: Metadata = {
    id: "3ef1078ec04b8330bcd6cfd0c6ff057cd09f46bd.boutiques",
    name: "inflate_subject_sc",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface InflateSubjectScParameters {
    "@type": "freesurfer.inflate_subject_sc";
    "subject_dir": string;
    "verbose": boolean;
    "debug": boolean;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.inflate_subject_sc": inflate_subject_sc_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "freesurfer.inflate_subject_sc": inflate_subject_sc_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `inflate_subject_sc(...)`.
 *
 * @interface
 */
interface InflateSubjectScOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Inflated subject surface output.
     */
    inflated_output: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param subject_dir Path to the subject directory.
 * @param verbose Enable verbose output.
 * @param debug Enable debug mode.
 *
 * @returns Parameter dictionary
 */
function inflate_subject_sc_params(
    subject_dir: string,
    verbose: boolean = false,
    debug: boolean = false,
): InflateSubjectScParameters {
    const params = {
        "@type": "freesurfer.inflate_subject_sc" as const,
        "subject_dir": subject_dir,
        "verbose": verbose,
        "debug": debug,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function inflate_subject_sc_cargs(
    params: InflateSubjectScParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("inflate_subject_sc");
    cargs.push((params["subject_dir"] ?? null));
    if ((params["verbose"] ?? null)) {
        cargs.push("--verbose");
    }
    if ((params["debug"] ?? null)) {
        cargs.push("--debug");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function inflate_subject_sc_outputs(
    params: InflateSubjectScParameters,
    execution: Execution,
): InflateSubjectScOutputs {
    const ret: InflateSubjectScOutputs = {
        root: execution.outputFile("."),
        inflated_output: execution.outputFile([(params["subject_dir"] ?? null), "/inflated_output"].join('')),
    };
    return ret;
}


/**
 * inflate_subject_sc
 *
 * Inferred description: Tool for inflating subject surfaces, specific details unavailable.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `InflateSubjectScOutputs`).
 */
function inflate_subject_sc_execute(
    params: InflateSubjectScParameters,
    runner: Runner | null = null,
): InflateSubjectScOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(INFLATE_SUBJECT_SC_METADATA);
    params = execution.params(params)
    const cargs = inflate_subject_sc_cargs(params, execution)
    const ret = inflate_subject_sc_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * inflate_subject_sc
 *
 * Inferred description: Tool for inflating subject surfaces, specific details unavailable.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param subject_dir Path to the subject directory.
 * @param verbose Enable verbose output.
 * @param debug Enable debug mode.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `InflateSubjectScOutputs`).
 */
function inflate_subject_sc(
    subject_dir: string,
    verbose: boolean = false,
    debug: boolean = false,
    runner: Runner | null = null,
): InflateSubjectScOutputs {
    const params = inflate_subject_sc_params(subject_dir, verbose, debug)
    return inflate_subject_sc_execute(params, runner);
}


export {
      INFLATE_SUBJECT_SC_METADATA,
      InflateSubjectScOutputs,
      InflateSubjectScParameters,
      inflate_subject_sc,
      inflate_subject_sc_execute,
      inflate_subject_sc_params,
};
