// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const VOLUME_ALL_LABELS_TO_ROIS_METADATA: Metadata = {
    id: "a76bb9cdf8566f2a22d0efbb4e2f97f7437c5a87.boutiques",
    name: "volume-all-labels-to-rois",
    package: "workbench",
    container_image_tag: "brainlife/connectome_workbench:1.5.0-freesurfer-update",
};


interface VolumeAllLabelsToRoisParameters {
    "__STYXTYPE__": "volume-all-labels-to-rois";
    "label_in": InputPathType;
    "map": string;
    "volume_out": string;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "volume-all-labels-to-rois": volume_all_labels_to_rois_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "volume-all-labels-to-rois": volume_all_labels_to_rois_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `volume_all_labels_to_rois(...)`.
 *
 * @interface
 */
interface VolumeAllLabelsToRoisOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * the output volume file
     */
    volume_out: OutputPathType;
}


function volume_all_labels_to_rois_params(
    label_in: InputPathType,
    map: string,
    volume_out: string,
): VolumeAllLabelsToRoisParameters {
    /**
     * Build parameters.
    
     * @param label_in the input volume label file
     * @param map the number or name of the label map to use
     * @param volume_out the output volume file
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "volume-all-labels-to-rois" as const,
        "label_in": label_in,
        "map": map,
        "volume_out": volume_out,
    };
    return params;
}


function volume_all_labels_to_rois_cargs(
    params: VolumeAllLabelsToRoisParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("wb_command");
    cargs.push("-volume-all-labels-to-rois");
    cargs.push(execution.inputFile((params["label_in"] ?? null)));
    cargs.push((params["map"] ?? null));
    cargs.push((params["volume_out"] ?? null));
    return cargs;
}


function volume_all_labels_to_rois_outputs(
    params: VolumeAllLabelsToRoisParameters,
    execution: Execution,
): VolumeAllLabelsToRoisOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: VolumeAllLabelsToRoisOutputs = {
        root: execution.outputFile("."),
        volume_out: execution.outputFile([(params["volume_out"] ?? null)].join('')),
    };
    return ret;
}


function volume_all_labels_to_rois_execute(
    params: VolumeAllLabelsToRoisParameters,
    execution: Execution,
): VolumeAllLabelsToRoisOutputs {
    /**
     * Make rois from all labels in a volume frame.
     * 
     * The output volume has a frame for each label in the specified input frame, other than the ??? label, each of which contains an ROI of all voxels that are set to the corresponding label.
     * 
     * Author: Connectome Workbench Developers
     * 
     * URL: https://github.com/Washington-University/workbench
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `VolumeAllLabelsToRoisOutputs`).
     */
    params = execution.params(params)
    const cargs = volume_all_labels_to_rois_cargs(params, execution)
    const ret = volume_all_labels_to_rois_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function volume_all_labels_to_rois(
    label_in: InputPathType,
    map: string,
    volume_out: string,
    runner: Runner | null = null,
): VolumeAllLabelsToRoisOutputs {
    /**
     * Make rois from all labels in a volume frame.
     * 
     * The output volume has a frame for each label in the specified input frame, other than the ??? label, each of which contains an ROI of all voxels that are set to the corresponding label.
     * 
     * Author: Connectome Workbench Developers
     * 
     * URL: https://github.com/Washington-University/workbench
    
     * @param label_in the input volume label file
     * @param map the number or name of the label map to use
     * @param volume_out the output volume file
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `VolumeAllLabelsToRoisOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(VOLUME_ALL_LABELS_TO_ROIS_METADATA);
    const params = volume_all_labels_to_rois_params(label_in, map, volume_out)
    return volume_all_labels_to_rois_execute(params, execution);
}


export {
      VOLUME_ALL_LABELS_TO_ROIS_METADATA,
      VolumeAllLabelsToRoisOutputs,
      VolumeAllLabelsToRoisParameters,
      volume_all_labels_to_rois,
      volume_all_labels_to_rois_params,
};
