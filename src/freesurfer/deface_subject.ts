// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const DEFACE_SUBJECT_METADATA: Metadata = {
    id: "274e5ad239a83bd50707ef1a9dcf8ce7c5e84775.boutiques",
    name: "deface_subject",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface DefaceSubjectParameters {
    "__STYXTYPE__": "deface_subject";
    "subjects_dir": string;
    "subject_id": string;
    "volume_input": InputPathType;
    "volume_output": string;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "deface_subject": deface_subject_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
        "deface_subject": deface_subject_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `deface_subject(...)`.
 *
 * @interface
 */
interface DefaceSubjectOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Defaced output volume.
     */
    output_volume: OutputPathType;
}


function deface_subject_params(
    subjects_dir: string,
    subject_id: string,
    volume_input: InputPathType,
    volume_output: string,
): DefaceSubjectParameters {
    /**
     * Build parameters.
    
     * @param subjects_dir Directory containing FreeSurfer subject directories.
     * @param subject_id Subject ID that specifies the subject directory.
     * @param volume_input Input volume to be defaced.
     * @param volume_output Output volume after defacing.
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "deface_subject" as const,
        "subjects_dir": subjects_dir,
        "subject_id": subject_id,
        "volume_input": volume_input,
        "volume_output": volume_output,
    };
    return params;
}


function deface_subject_cargs(
    params: DefaceSubjectParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("deface_subject");
    cargs.push(
        "-sdir",
        (params["subjects_dir"] ?? null)
    );
    cargs.push(
        "-id",
        (params["subject_id"] ?? null)
    );
    cargs.push(
        "-i",
        execution.inputFile((params["volume_input"] ?? null))
    );
    cargs.push(
        "-o",
        (params["volume_output"] ?? null)
    );
    return cargs;
}


function deface_subject_outputs(
    params: DefaceSubjectParameters,
    execution: Execution,
): DefaceSubjectOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: DefaceSubjectOutputs = {
        root: execution.outputFile("."),
        output_volume: execution.outputFile([(params["volume_output"] ?? null)].join('')),
    };
    return ret;
}


function deface_subject_execute(
    params: DefaceSubjectParameters,
    execution: Execution,
): DefaceSubjectOutputs {
    /**
     * Tool for defacing MRI images to anonymize patient data.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `DefaceSubjectOutputs`).
     */
    params = execution.params(params)
    const cargs = deface_subject_cargs(params, execution)
    const ret = deface_subject_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function deface_subject(
    subjects_dir: string,
    subject_id: string,
    volume_input: InputPathType,
    volume_output: string,
    runner: Runner | null = null,
): DefaceSubjectOutputs {
    /**
     * Tool for defacing MRI images to anonymize patient data.
     * 
     * Author: FreeSurfer Developers
     * 
     * URL: https://github.com/freesurfer/freesurfer
    
     * @param subjects_dir Directory containing FreeSurfer subject directories.
     * @param subject_id Subject ID that specifies the subject directory.
     * @param volume_input Input volume to be defaced.
     * @param volume_output Output volume after defacing.
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `DefaceSubjectOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(DEFACE_SUBJECT_METADATA);
    const params = deface_subject_params(subjects_dir, subject_id, volume_input, volume_output)
    return deface_subject_execute(params, execution);
}


export {
      DEFACE_SUBJECT_METADATA,
      DefaceSubjectOutputs,
      DefaceSubjectParameters,
      deface_subject,
      deface_subject_params,
};
