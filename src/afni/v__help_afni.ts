// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const V__HELP_AFNI_METADATA: Metadata = {
    id: "feadd2af7149741e9f9192b504b7c09e3ad50dc5.boutiques",
    name: "@help.AFNI",
    package: "afni",
    container_image_tag: "afni/afni_make_build:AFNI_24.2.06",
};


interface VHelpAfniParameters {
    "__STYXTYPE__": "@help.AFNI";
    "match"?: string | null | undefined;
    "lynx": boolean;
    "vi": boolean;
    "less": boolean;
    "nedit": boolean;
    "noview": boolean;
}


function dynCargs(
    t: string,
): Function | undefined {
    /**
     * Get build cargs function by command type.
    
     * @param t Command type
    
     * @returns Build cargs function.
     */
    const cargsFuncs = {
        "@help.AFNI": v__help_afni_cargs,
    };
    return cargsFuncs[t];
}


function dynOutputs(
    t: string,
): Function | undefined {
    /**
     * Get build outputs function by command type.
    
     * @param t Command type
    
     * @returns Build outputs function.
     */
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `v__help_afni(...)`.
 *
 * @interface
 */
interface VHelpAfniOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


function v__help_afni_params(
    match: string | null = null,
    lynx: boolean = false,
    vi: boolean = false,
    less: boolean = false,
    nedit: boolean = false,
    noview: boolean = false,
): VHelpAfniParameters {
    /**
     * Build parameters.
    
     * @param match Looks for occurrence of each word in the list in the help file. For a match with multiple words, all the words must be on the same line of text in the help file.
     * @param lynx Set viewer to lynx
     * @param vi Set viewer to vi
     * @param less Set viewer to less (default)
     * @param nedit Set viewer to nedit
     * @param noview Set viewer to no view
    
     * @returns Parameter dictionary
     */
    const params = {
        "__STYXTYPE__": "@help.AFNI" as const,
        "lynx": lynx,
        "vi": vi,
        "less": less,
        "nedit": nedit,
        "noview": noview,
    };
    if (match !== null) {
        params["match"] = match;
    }
    return params;
}


function v__help_afni_cargs(
    params: VHelpAfniParameters,
    execution: Execution,
): string[] {
    /**
     * Build command-line arguments from parameters.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Command-line arguments.
     */
    const cargs: string[] = [];
    cargs.push("@help.AFNI");
    if ((params["match"] ?? null) !== null) {
        cargs.push(
            "-match",
            (params["match"] ?? null)
        );
    }
    if ((params["lynx"] ?? null)) {
        cargs.push("-lynx");
    }
    if ((params["vi"] ?? null)) {
        cargs.push("-vi");
    }
    if ((params["less"] ?? null)) {
        cargs.push("-less");
    }
    if ((params["nedit"] ?? null)) {
        cargs.push("-nedit");
    }
    if ((params["noview"] ?? null)) {
        cargs.push("-noview");
    }
    return cargs;
}


function v__help_afni_outputs(
    params: VHelpAfniParameters,
    execution: Execution,
): VHelpAfniOutputs {
    /**
     * Build outputs object containing output file paths and possibly stdout/stderr.
    
     * @param params The parameters.
     * @param execution The execution object for resolving input paths.
    
     * @returns Outputs object.
     */
    const ret: VHelpAfniOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


function v__help_afni_execute(
    params: VHelpAfniParameters,
    execution: Execution,
): VHelpAfniOutputs {
    /**
     * A script to retrieve and search AFNI's help page for all programs.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param params The parameters.
     * @param execution The execution object.
    
     * @returns NamedTuple of outputs (described in `VHelpAfniOutputs`).
     */
    params = execution.params(params)
    const cargs = v__help_afni_cargs(params, execution)
    const ret = v__help_afni_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


function v__help_afni(
    match: string | null = null,
    lynx: boolean = false,
    vi: boolean = false,
    less: boolean = false,
    nedit: boolean = false,
    noview: boolean = false,
    runner: Runner | null = null,
): VHelpAfniOutputs {
    /**
     * A script to retrieve and search AFNI's help page for all programs.
     * 
     * Author: AFNI Developers
     * 
     * URL: https://afni.nimh.nih.gov/
    
     * @param match Looks for occurrence of each word in the list in the help file. For a match with multiple words, all the words must be on the same line of text in the help file.
     * @param lynx Set viewer to lynx
     * @param vi Set viewer to vi
     * @param less Set viewer to less (default)
     * @param nedit Set viewer to nedit
     * @param noview Set viewer to no view
     * @param runner Command runner
    
     * @returns NamedTuple of outputs (described in `VHelpAfniOutputs`).
     */
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(V__HELP_AFNI_METADATA);
    const params = v__help_afni_params(match, lynx, vi, less, nedit, noview)
    return v__help_afni_execute(params, execution);
}


export {
      VHelpAfniOutputs,
      VHelpAfniParameters,
      V__HELP_AFNI_METADATA,
      v__help_afni,
      v__help_afni_params,
};
