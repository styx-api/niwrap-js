// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const SEGMENT_SUBJECT_T2_AUTO_ESTIMATE_ALVEUS_ML_METADATA: Metadata = {
    id: "9f5cb14cd3ff5a2e14ff4fca40b5b97c1ac6c3c0.boutiques",
    name: "segmentSubjectT2_autoEstimateAlveusML",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface SegmentSubjectT2AutoEstimateAlveusMlParameters {
    "@type"?: "freesurfer/segmentSubjectT2_autoEstimateAlveusML";
    "missing_library": string;
}
type SegmentSubjectT2AutoEstimateAlveusMlParametersTagged = Required<Pick<SegmentSubjectT2AutoEstimateAlveusMlParameters, '@type'>> & SegmentSubjectT2AutoEstimateAlveusMlParameters;


/**
 * Output object returned when calling `SegmentSubjectT2AutoEstimateAlveusMlParameters(...)`.
 *
 * @interface
 */
interface SegmentSubjectT2AutoEstimateAlveusMlOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param missing_library The tool could not be executed due to a missing shared library: libmwlaunchermain.so
 *
 * @returns Parameter dictionary
 */
function segment_subject_t2_auto_estimate_alveus_ml_params(
    missing_library: string = "libmwlaunchermain.so: cannot open shared object file",
): SegmentSubjectT2AutoEstimateAlveusMlParametersTagged {
    const params = {
        "@type": "freesurfer/segmentSubjectT2_autoEstimateAlveusML" as const,
        "missing_library": missing_library,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function segment_subject_t2_auto_estimate_alveus_ml_cargs(
    params: SegmentSubjectT2AutoEstimateAlveusMlParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("segmentSubjectT2_autoEstimateAlveusML");
    cargs.push((params["missing_library"] ?? "libmwlaunchermain.so: cannot open shared object file"));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function segment_subject_t2_auto_estimate_alveus_ml_outputs(
    params: SegmentSubjectT2AutoEstimateAlveusMlParameters,
    execution: Execution,
): SegmentSubjectT2AutoEstimateAlveusMlOutputs {
    const ret: SegmentSubjectT2AutoEstimateAlveusMlOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * segmentSubjectT2_autoEstimateAlveusML
 *
 * A Freesurfer tool to segment T2 subjects with automatic alveus ML estimation.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `SegmentSubjectT2AutoEstimateAlveusMlOutputs`).
 */
function segment_subject_t2_auto_estimate_alveus_ml_execute(
    params: SegmentSubjectT2AutoEstimateAlveusMlParameters,
    runner: Runner | null = null,
): SegmentSubjectT2AutoEstimateAlveusMlOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(SEGMENT_SUBJECT_T2_AUTO_ESTIMATE_ALVEUS_ML_METADATA);
    params = execution.params(params)
    const cargs = segment_subject_t2_auto_estimate_alveus_ml_cargs(params, execution)
    const ret = segment_subject_t2_auto_estimate_alveus_ml_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * segmentSubjectT2_autoEstimateAlveusML
 *
 * A Freesurfer tool to segment T2 subjects with automatic alveus ML estimation.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param missing_library The tool could not be executed due to a missing shared library: libmwlaunchermain.so
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `SegmentSubjectT2AutoEstimateAlveusMlOutputs`).
 */
function segment_subject_t2_auto_estimate_alveus_ml(
    missing_library: string = "libmwlaunchermain.so: cannot open shared object file",
    runner: Runner | null = null,
): SegmentSubjectT2AutoEstimateAlveusMlOutputs {
    const params = segment_subject_t2_auto_estimate_alveus_ml_params(missing_library)
    return segment_subject_t2_auto_estimate_alveus_ml_execute(params, runner);
}


export {
      SEGMENT_SUBJECT_T2_AUTO_ESTIMATE_ALVEUS_ML_METADATA,
      SegmentSubjectT2AutoEstimateAlveusMlOutputs,
      segment_subject_t2_auto_estimate_alveus_ml,
      segment_subject_t2_auto_estimate_alveus_ml_execute,
      segment_subject_t2_auto_estimate_alveus_ml_params,
};
