// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const MRIS_DEFORM_METADATA: Metadata = {
    id: "15a9bfc466b885fe98e4cf144f78c4307c6c746c.boutiques",
    name: "mris_deform",
    package: "freesurfer",
    container_image_tag: "freesurfer/freesurfer:7.4.1",
};


interface MrisDeformParameters {
    "@type": "freesurfer.mris_deform";
    "input_surface": InputPathType;
    "input_volume": InputPathType;
    "xform": InputPathType;
    "output_surface": string;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "freesurfer.mris_deform": mris_deform_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
        "freesurfer.mris_deform": mris_deform_outputs,
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `mris_deform(...)`.
 *
 * @interface
 */
interface MrisDeformOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Deformed surface file output by mris_deform
     */
    deformed_surface: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param input_surface Input surface file (e.g., lh.white)
 * @param input_volume Input volume file (e.g., brain.mgz)
 * @param xform Transformation file (e.g., talairach.xfm)
 * @param output_surface Output surface file (e.g., lh.white.deformed)
 *
 * @returns Parameter dictionary
 */
function mris_deform_params(
    input_surface: InputPathType,
    input_volume: InputPathType,
    xform: InputPathType,
    output_surface: string,
): MrisDeformParameters {
    const params = {
        "@type": "freesurfer.mris_deform" as const,
        "input_surface": input_surface,
        "input_volume": input_volume,
        "xform": xform,
        "output_surface": output_surface,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function mris_deform_cargs(
    params: MrisDeformParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("mris_deform");
    cargs.push(execution.inputFile((params["input_surface"] ?? null)));
    cargs.push(execution.inputFile((params["input_volume"] ?? null)));
    cargs.push(execution.inputFile((params["xform"] ?? null)));
    cargs.push((params["output_surface"] ?? null));
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function mris_deform_outputs(
    params: MrisDeformParameters,
    execution: Execution,
): MrisDeformOutputs {
    const ret: MrisDeformOutputs = {
        root: execution.outputFile("."),
        deformed_surface: execution.outputFile([(params["output_surface"] ?? null)].join('')),
    };
    return ret;
}


/**
 * mris_deform
 *
 * A tool for deforming surface meshes using volumetric information from an auxiliary volume.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `MrisDeformOutputs`).
 */
function mris_deform_execute(
    params: MrisDeformParameters,
    runner: Runner | null = null,
): MrisDeformOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(MRIS_DEFORM_METADATA);
    params = execution.params(params)
    const cargs = mris_deform_cargs(params, execution)
    const ret = mris_deform_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * mris_deform
 *
 * A tool for deforming surface meshes using volumetric information from an auxiliary volume.
 *
 * Author: FreeSurfer Developers
 *
 * URL: https://github.com/freesurfer/freesurfer
 *
 * @param input_surface Input surface file (e.g., lh.white)
 * @param input_volume Input volume file (e.g., brain.mgz)
 * @param xform Transformation file (e.g., talairach.xfm)
 * @param output_surface Output surface file (e.g., lh.white.deformed)
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `MrisDeformOutputs`).
 */
function mris_deform(
    input_surface: InputPathType,
    input_volume: InputPathType,
    xform: InputPathType,
    output_surface: string,
    runner: Runner | null = null,
): MrisDeformOutputs {
    const params = mris_deform_params(input_surface, input_volume, xform, output_surface)
    return mris_deform_execute(params, runner);
}


export {
      MRIS_DEFORM_METADATA,
      MrisDeformOutputs,
      MrisDeformParameters,
      mris_deform,
      mris_deform_execute,
      mris_deform_params,
};
