// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const TBSS_DEPROJECT_METADATA: Metadata = {
    id: "7be2bd59b3afba55103f25bffec1ef4b17196214.boutiques",
    name: "tbss_deproject",
    package: "fsl",
    container_image_tag: "brainlife/fsl:6.0.4-patched2",
};


interface TbssDeprojectParameters {
    "@type"?: "fsl/tbss_deproject";
    "skeleton_space_input_image": InputPathType;
    "final_space_option": number;
    "index_image_flag": boolean;
}
type TbssDeprojectParametersTagged = Required<Pick<TbssDeprojectParameters, '@type'>> & TbssDeprojectParameters;


/**
 * Output object returned when calling `TbssDeprojectParameters(...)`.
 *
 * @interface
 */
interface TbssDeprojectOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
    /**
     * Output in stats directory.
     */
    stats_output: OutputPathType;
    /**
     * Output in FA directory.
     */
    fa_output: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param skeleton_space_input_image Skeleton space input image.
 * @param final_space_option Final space option.
 * @param index_image_flag Assume that the skeleton space input image contains one or more integer index numbers and ensure that those exact values are deprojected without being changed by interpolations.
 *
 * @returns Parameter dictionary
 */
function tbss_deproject_params(
    skeleton_space_input_image: InputPathType,
    final_space_option: number,
    index_image_flag: boolean = false,
): TbssDeprojectParametersTagged {
    const params = {
        "@type": "fsl/tbss_deproject" as const,
        "skeleton_space_input_image": skeleton_space_input_image,
        "final_space_option": final_space_option,
        "index_image_flag": index_image_flag,
    };
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function tbss_deproject_cargs(
    params: TbssDeprojectParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("tbss_deproject");
    cargs.push(execution.inputFile((params["skeleton_space_input_image"] ?? null)));
    cargs.push(String((params["final_space_option"] ?? null)));
    if ((params["index_image_flag"] ?? false)) {
        cargs.push("-n");
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function tbss_deproject_outputs(
    params: TbssDeprojectParameters,
    execution: Execution,
): TbssDeprojectOutputs {
    const ret: TbssDeprojectOutputs = {
        root: execution.outputFile("."),
        stats_output: execution.outputFile(["stats/", path.basename((params["skeleton_space_input_image"] ?? null))].join('')),
        fa_output: execution.outputFile(["FA/", path.basename((params["skeleton_space_input_image"] ?? null))].join('')),
    };
    return ret;
}


/**
 * tbss_deproject
 *
 * Tool to deproject images from skeleton space to final space.
 *
 * Author: FMRIB Analysis Group, University of Oxford
 *
 * URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `TbssDeprojectOutputs`).
 */
function tbss_deproject_execute(
    params: TbssDeprojectParameters,
    runner: Runner | null = null,
): TbssDeprojectOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(TBSS_DEPROJECT_METADATA);
    params = execution.params(params)
    const cargs = tbss_deproject_cargs(params, execution)
    const ret = tbss_deproject_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * tbss_deproject
 *
 * Tool to deproject images from skeleton space to final space.
 *
 * Author: FMRIB Analysis Group, University of Oxford
 *
 * URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
 *
 * @param skeleton_space_input_image Skeleton space input image.
 * @param final_space_option Final space option.
 * @param index_image_flag Assume that the skeleton space input image contains one or more integer index numbers and ensure that those exact values are deprojected without being changed by interpolations.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `TbssDeprojectOutputs`).
 */
function tbss_deproject(
    skeleton_space_input_image: InputPathType,
    final_space_option: number,
    index_image_flag: boolean = false,
    runner: Runner | null = null,
): TbssDeprojectOutputs {
    const params = tbss_deproject_params(skeleton_space_input_image, final_space_option, index_image_flag)
    return tbss_deproject_execute(params, runner);
}


export {
      TBSS_DEPROJECT_METADATA,
      TbssDeprojectOutputs,
      tbss_deproject,
      tbss_deproject_execute,
      tbss_deproject_params,
};
