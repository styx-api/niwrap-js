// This file was auto generated by Styx.
// Do not edit this file directly.

import { Runner, Execution, Metadata, InputPathType, OutputPathType, getGlobalRunner } from 'styxdefs';

const FSLVBM_1_BET_METADATA: Metadata = {
    id: "8628a122c6bfde9e9d1d22e80d9d897649f86bd1.boutiques",
    name: "fslvbm_1_bet",
    package: "fsl",
    container_image_tag: "brainlife/fsl:6.0.4-patched2",
};


interface Fslvbm1BetParameters {
    "@type": "fsl.fslvbm_1_bet";
    "default_bet": boolean;
    "increased_robustness": boolean;
    "bet_parameters"?: string | null | undefined;
}


/**
 * Get build cargs function by command type.
 *
 * @param t Command type
 *
 * @returns Build cargs function.
 */
function dynCargs(
    t: string,
): Function | undefined {
    const cargsFuncs = {
        "fsl.fslvbm_1_bet": fslvbm_1_bet_cargs,
    };
    return cargsFuncs[t];
}


/**
 * Get build outputs function by command type.
 *
 * @param t Command type
 *
 * @returns Build outputs function.
 */
function dynOutputs(
    t: string,
): Function | undefined {
    const outputsFuncs = {
    };
    return outputsFuncs[t];
}


/**
 * Output object returned when calling `fslvbm_1_bet(...)`.
 *
 * @interface
 */
interface Fslvbm1BetOutputs {
    /**
     * Output root folder. This is the root folder for all outputs.
     */
    root: OutputPathType;
}


/**
 * Build parameters.
 *
 * @param default_bet Default BET brain extraction with -f 0.4
 * @param increased_robustness Increased robustness in the brain extraction when a lot of neck is present
 * @param bet_parameters Additional options to be passed on to BET
 *
 * @returns Parameter dictionary
 */
function fslvbm_1_bet_params(
    default_bet: boolean = false,
    increased_robustness: boolean = false,
    bet_parameters: string | null = null,
): Fslvbm1BetParameters {
    const params = {
        "@type": "fsl.fslvbm_1_bet" as const,
        "default_bet": default_bet,
        "increased_robustness": increased_robustness,
    };
    if (bet_parameters !== null) {
        params["bet_parameters"] = bet_parameters;
    }
    return params;
}


/**
 * Build command-line arguments from parameters.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Command-line arguments.
 */
function fslvbm_1_bet_cargs(
    params: Fslvbm1BetParameters,
    execution: Execution,
): string[] {
    const cargs: string[] = [];
    cargs.push("fslvbm_1_bet");
    if ((params["default_bet"] ?? null)) {
        cargs.push("-b");
    }
    if ((params["increased_robustness"] ?? null)) {
        cargs.push("-N");
    }
    if ((params["bet_parameters"] ?? null) !== null) {
        cargs.push((params["bet_parameters"] ?? null));
    }
    return cargs;
}


/**
 * Build outputs object containing output file paths and possibly stdout/stderr.
 *
 * @param params The parameters.
 * @param execution The execution object for resolving input paths.
 *
 * @returns Outputs object.
 */
function fslvbm_1_bet_outputs(
    params: Fslvbm1BetParameters,
    execution: Execution,
): Fslvbm1BetOutputs {
    const ret: Fslvbm1BetOutputs = {
        root: execution.outputFile("."),
    };
    return ret;
}


/**
 * fslvbm_1_bet
 *
 * Brain extraction for VBM using FSL BET.
 *
 * Author: FMRIB Analysis Group, University of Oxford
 *
 * URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
 *
 * @param params The parameters.
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `Fslvbm1BetOutputs`).
 */
function fslvbm_1_bet_execute(
    params: Fslvbm1BetParameters,
    runner: Runner | null = null,
): Fslvbm1BetOutputs {
    runner = runner || getGlobalRunner();
    const execution = runner.startExecution(FSLVBM_1_BET_METADATA);
    params = execution.params(params)
    const cargs = fslvbm_1_bet_cargs(params, execution)
    const ret = fslvbm_1_bet_outputs(params, execution)
    execution.run(cargs, undefined);
    return ret;
}


/**
 * fslvbm_1_bet
 *
 * Brain extraction for VBM using FSL BET.
 *
 * Author: FMRIB Analysis Group, University of Oxford
 *
 * URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
 *
 * @param default_bet Default BET brain extraction with -f 0.4
 * @param increased_robustness Increased robustness in the brain extraction when a lot of neck is present
 * @param bet_parameters Additional options to be passed on to BET
 * @param runner Command runner
 *
 * @returns NamedTuple of outputs (described in `Fslvbm1BetOutputs`).
 */
function fslvbm_1_bet(
    default_bet: boolean = false,
    increased_robustness: boolean = false,
    bet_parameters: string | null = null,
    runner: Runner | null = null,
): Fslvbm1BetOutputs {
    const params = fslvbm_1_bet_params(default_bet, increased_robustness, bet_parameters)
    return fslvbm_1_bet_execute(params, runner);
}


export {
      FSLVBM_1_BET_METADATA,
      Fslvbm1BetOutputs,
      Fslvbm1BetParameters,
      fslvbm_1_bet,
      fslvbm_1_bet_execute,
      fslvbm_1_bet_params,
};
